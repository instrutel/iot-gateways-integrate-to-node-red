[
    {
        "id": "cadcef1c8b97565d",
        "type": "tab",
        "label": "MainDashboard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "12a45c02a0c64fe9",
        "type": "tab",
        "label": "AnalogInputFlow",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7df8dcd3568b0c28",
        "type": "tab",
        "label": "DigitalInputFlow",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "93b5a3b37e35c7cc",
        "type": "tab",
        "label": "DigitalOutputFlow",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "220c4ff864c32f49",
        "type": "tab",
        "label": "EnergyMeter ",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "28a1f791cc37d4af",
        "type": "tab",
        "label": "Analog Input Reports ",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8ef2b9c6e0a1e471",
        "type": "tab",
        "label": "Digital Input Reports",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f08276ee447f37b8",
        "type": "tab",
        "label": "Digital Output Reports ",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "25c4b31e8f5c3feb",
        "type": "tab",
        "label": "Energy Meter Reports",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "faed5b70a0f086fc",
        "type": "tab",
        "label": "Energy Meter Chart Report",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8fb86a9dc773c141",
        "type": "tab",
        "label": "Analog Input Reports Charts",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4702739a59c3c441",
        "type": "tab",
        "label": "Practice",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "10fb4113ae3f7f6b",
        "type": "group",
        "z": "220c4ff864c32f49",
        "name": "VLN, RV, YV, BV Values Showing ",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "stroke": "#000000",
            "color": "#ff0000"
        },
        "nodes": [
            "02816f40541446b1",
            "dbd49a8b18d5940c",
            "8059502cd03a9597",
            "1e723bafbc1f19a1",
            "6ec0682ddc34f516",
            "ef8bbddf1e05c949",
            "bc2042b14260a298",
            "fdb933d6e8eda600"
        ],
        "x": 994,
        "y": 1659,
        "w": 452,
        "h": 202
    },
    {
        "id": "6a1247cd5a634ac3",
        "type": "group",
        "z": "220c4ff864c32f49",
        "name": "PF, Freq and Wh Charts ",
        "style": {
            "label": true,
            "stroke": "#000000",
            "fill": "#bfdbef",
            "color": "#ff0000"
        },
        "nodes": [
            "d0010c9e4a06adbb",
            "6da3df05f31abdbe",
            "90d2368b500f4080",
            "25e13ce4f50eb485",
            "986f187ad72614d2",
            "6f9950eecd75576a"
        ],
        "x": 934,
        "y": 399,
        "w": 632,
        "h": 202
    },
    {
        "id": "58cd1db56c8bd316",
        "type": "group",
        "z": "220c4ff864c32f49",
        "name": "RA, BA, TA, YA  Values Showing",
        "style": {
            "stroke": "#92d04f",
            "label": true,
            "fill": "#ffffbf",
            "color": "#ff0000"
        },
        "nodes": [
            "80eeb2e416e46c25",
            "8ab68da31f195a09",
            "645262c5c0f5eb98",
            "953d9618f3398874",
            "2c570846ad550a2f",
            "e62cf6fd2a924f40",
            "262fe69e071036a9",
            "1852ea907cb1834e"
        ],
        "x": 1014,
        "y": 1419,
        "w": 412,
        "h": 202,
        "info": "# good"
    },
    {
        "id": "b287cac207f7a873",
        "type": "group",
        "z": "220c4ff864c32f49",
        "name": "Wh, Freq, PF Values Showing",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "306fcad3d8f3fe66",
            "c20fdf237f5682bc",
            "e55d5a524ae49380",
            "cfb6dbd6f3f9c0e9",
            "60147517bc133b70",
            "6be6cb2672047f41"
        ],
        "x": 1014,
        "y": 1159,
        "w": 412,
        "h": 202
    },
    {
        "id": "562971a2a1395d1f",
        "type": "group",
        "z": "cadcef1c8b97565d",
        "name": "All Dashboards Links",
        "style": {
            "stroke": "#000000",
            "fill": "#ffbfbf",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "e81c653ba3189836",
            "e39f7d8d1358f151",
            "03dc7af723724342",
            "9b45753bf6ad0a27",
            "77f2a07df446733a",
            "d101e9d44b20ef62",
            "499be2230dd367f7",
            "7040aa4d4c527c47",
            "5fe31866a28e0e84"
        ],
        "x": 614,
        "y": 359,
        "w": 772,
        "h": 202
    },
    {
        "id": "746fe73aa459f946",
        "type": "group",
        "z": "cadcef1c8b97565d",
        "name": "Dashboard Images",
        "style": {
            "stroke": "#000000",
            "fill": "#ffdf7f",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "c93fe699ade7c84b",
            "6fed24810e7a3207",
            "8a7abb84372dd6cc",
            "727da1d79f9cb827",
            "3b7aa8b6b5364091"
        ],
        "x": 734,
        "y": 599,
        "w": 552,
        "h": 262
    },
    {
        "id": "4d6b70619c6303f3",
        "type": "group",
        "z": "12a45c02a0c64fe9",
        "name": "Header Section ",
        "style": {
            "stroke": "#000000",
            "fill": "#ffff7f",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "0fda901ebb2bc40c",
            "547f8fb5673ee257",
            "1314546855e36edc",
            "f29d6a6ea9b859c1",
            "76f98e9ff882eb6d",
            "ac46f2a4edb1817e",
            "587c323d547b2707",
            "1d0f89a664bc7ee3"
        ],
        "x": 374,
        "y": 39,
        "w": 892,
        "h": 182
    },
    {
        "id": "8e38933a15a2eb57",
        "type": "group",
        "z": "12a45c02a0c64fe9",
        "name": "Time Stamp",
        "style": {
            "label": true,
            "stroke": "#000000",
            "fill": "#bfdbef",
            "color": "#ff0000"
        },
        "nodes": [
            "61005d7208d60b2b",
            "e969b6bb6e6bb3b5",
            "6aa6b7eb4072e74a",
            "2880a2b99922b161",
            "e805f2d90cfa3357",
            "2fa8d2ae10d3c790",
            "7da65b4a84d5a00d",
            "d01d3c04d587c467"
        ],
        "x": 1534,
        "y": 339,
        "w": 372,
        "h": 202
    },
    {
        "id": "25c418f90e64c1ff",
        "type": "group",
        "z": "12a45c02a0c64fe9",
        "name": "Storing Data to DB",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "70fb4845a5497fa2",
            "324c594592b32e57"
        ],
        "x": 534,
        "y": 279,
        "w": 792,
        "h": 82
    },
    {
        "id": "cf0a6c41cc925f39",
        "type": "group",
        "z": "12a45c02a0c64fe9",
        "name": "Blank Space ",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "77c1a42d99835aa9",
            "a105a45676f7a675"
        ],
        "x": 34,
        "y": 1759,
        "w": 452,
        "h": 82
    },
    {
        "id": "573424824436e8ab",
        "type": "group",
        "z": "12a45c02a0c64fe9",
        "name": "Analog Inputs Params",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true
        },
        "nodes": [
            "061d8d545ed3e7c3",
            "9019e3b114c0dc27",
            "21fa519085759197",
            "0608e6f6dff7fc05",
            "73b92bf5475504ef",
            "d43d7cc189600610",
            "98039dfcc2634192",
            "c954b54511723ecf",
            "c2cd6bfb56f4fa8e",
            "aef9da3af3fec4fc",
            "fdfc94d02e19eac3",
            "ef6265836635a9bc",
            "cdd8f52ae1ea6869",
            "bede445bb60c8b7f",
            "cd9f97e06ce76eac",
            "ea588878d82cc1d8",
            "88ffcaa741a4e4c1",
            "3ca2442b8bef5dab",
            "fb607e860751b71b",
            "2be4992e8ac60f18",
            "28a61903c3817220",
            "afafe612342113d6",
            "d252a157f0acf877",
            "5b5bcae07bb5c02c",
            "a9b4dbd94bf1414d",
            "b70b9c2a749718f3",
            "765a783a95368500",
            "0867713bee0e7066",
            "3975b02c1b06100d",
            "c4df9c4d02d26123",
            "5fa8b7c410e8d959",
            "3663790e04641f0d",
            "2c60864995773eb9",
            "c70754098cb89c7c",
            "d1a84d53759271ac",
            "9388ed1dc6a71a58",
            "db608b7a1325727f",
            "ef6510b08f20f565",
            "68c520037bc6c667",
            "c2073f100c89491a"
        ],
        "x": 1054,
        "y": 539,
        "w": 852,
        "h": 1522
    },
    {
        "id": "56d9bbb12c6ac8cc",
        "type": "group",
        "z": "7df8dcd3568b0c28",
        "name": "Timestamp ",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "6731c490c36e6a27",
            "0156988b62d0e36e",
            "335a313373625858",
            "694f909517e0333b",
            "285f93ac69df70b0",
            "a589a98fabe7738c",
            "dab2ac9aabed3d03",
            "e2118cf978c77976",
            "5d4eb560dda53e1f",
            "954c4c34e70dfde4",
            "2f03da309d6c62f0",
            "d0989e75bbd9d3f1"
        ],
        "x": 714,
        "y": 379,
        "w": 352,
        "h": 282
    },
    {
        "id": "587d35133a0589f4",
        "type": "group",
        "z": "7df8dcd3568b0c28",
        "name": "Header Section",
        "style": {
            "stroke": "#000000",
            "fill": "#bfc7d7",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "a12c05b9325a7ac0",
            "46047c19e248360c",
            "7cc497f15984b8f1",
            "544af6e302726b84",
            "23736984e18eb9a0",
            "1f4594762b3891b0",
            "ba00bfa409db6a49",
            "da3197d7cfdf1f4d",
            "e2fc7b8814598285",
            "c30a6cea67fba55e"
        ],
        "x": 494,
        "y": 79,
        "w": 1252,
        "h": 242
    },
    {
        "id": "738c62c6244a1991",
        "type": "group",
        "z": "220c4ff864c32f49",
        "name": "Blank Space",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "068ede4fe0a64759",
            "5d5fc8360254ea06",
            "de3d2820115acc35",
            "438731f209a28a35",
            "6e2ad98c9e83b117"
        ],
        "x": 174,
        "y": 1499,
        "w": 272,
        "h": 302
    },
    {
        "id": "8c4079981c186fed",
        "type": "group",
        "z": "220c4ff864c32f49",
        "name": "Timestamp ",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "3162e2433e420403",
            "11b08a249089cfec",
            "391a8edae11647c8",
            "2d69bde789f6e5be",
            "3e9ba444b9b4db35",
            "f1b837ebf715177c",
            "121f4cc47ab8effc",
            "1af3db15a25f14fa",
            "400682529edcfd18",
            "3e58ca0a56de892e",
            "05075f785ca6fcc2"
        ],
        "x": 574,
        "y": 1519,
        "w": 172,
        "h": 482
    },
    {
        "id": "899c7b1d76378fe8",
        "type": "group",
        "z": "220c4ff864c32f49",
        "name": "Header Section",
        "style": {
            "stroke": "#000000",
            "fill": "#ffbfbf",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "f06e039a98ee4b0d",
            "0babae2e670d5bcf",
            "c559c76d6f0d031b",
            "a0da38d1318027fd",
            "35e89134809098e9",
            "e703ecbfbc0b3793",
            "3abff9fdd9b5975c",
            "6642574b6690b376",
            "0ca5da9384a12bd2",
            "587cac37468cd90a",
            "1fab5aefe0ed1b8b"
        ],
        "x": 354,
        "y": 139,
        "w": 1472,
        "h": 202
    },
    {
        "id": "c29e176bee6df1d2",
        "type": "group",
        "z": "220c4ff864c32f49",
        "name": "RA, YA, BA, TA Charts",
        "style": {
            "stroke": "#000000",
            "fill": "#ffefbf",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "c355f3adcfca9452",
            "15560cbb2c270bf2",
            "98773619f302047a",
            "7c9effe526e56bcb",
            "a650a9dd7fa6f4bf"
        ],
        "x": 914,
        "y": 679,
        "w": 852,
        "h": 202
    },
    {
        "id": "7fdf43f5d8a02fad",
        "type": "group",
        "z": "220c4ff864c32f49",
        "name": "RV, YV,BV, VLN Chart",
        "style": {
            "label": true,
            "stroke": "#dbcbe7",
            "fill": "#e3f3d3",
            "color": "#ff0000"
        },
        "nodes": [
            "a6335f6ad976504f",
            "dc757ea9c5908196",
            "0b686daa74307867",
            "676732ce881b45d4",
            "ac355dd78d50341f"
        ],
        "x": 914,
        "y": 919,
        "w": 872,
        "h": 202
    },
    {
        "id": "3c594854df33e109",
        "type": "group",
        "z": "28a1f791cc37d4af",
        "name": "Header",
        "style": {
            "stroke": "#000000",
            "fill": "#ffbfbf",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "8fee521ae997a3f0",
            "7270a12ffdbaebda",
            "22e20e1ab129d3b3",
            "d6fea3974346b169",
            "9b53f6bfe9350abb",
            "c64942540da092fc"
        ],
        "x": 454,
        "y": 39,
        "w": 672,
        "h": 202
    },
    {
        "id": "ed1a3249c92f181e",
        "type": "group",
        "z": "93b5a3b37e35c7cc",
        "name": "Digital Outputs Timestamp",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "7ccb11cdd11622ec",
            "2747e0bef079eb3d",
            "c26e38eed09e8708",
            "5297d8d4d8152057",
            "5be58c7b09ab0f75",
            "44962c98c4554660",
            "87c857c8808f3a19",
            "ff3a8471d8730a24",
            "4abce75a09dffce1",
            "c090d0fdc146d797",
            "4e8da70f8bf3f19c",
            "d2af08f8e0163b01"
        ],
        "x": 134,
        "y": 639,
        "w": 452,
        "h": 262
    },
    {
        "id": "4070b953011d2414",
        "type": "group",
        "z": "8fb86a9dc773c141",
        "name": "AI01",
        "style": {
            "stroke": "none",
            "label": true
        },
        "nodes": [
            "6be7ee57b67b2561",
            "43c3ce145ccebe59",
            "7add3a842c24fe5e",
            "5d38e399e35b7448",
            "ad6edddc673ed4f9",
            "b1190d38c4de2934",
            "2fa952376df75ad4",
            "c00561ef57cae134",
            "06f4a841d4b12137",
            "b216f85f078f923c",
            "7c2f610fb7b87e6d",
            "29ecbd5172dd1522",
            "47eeaeba5f2326e1"
        ],
        "x": 34,
        "y": 179,
        "w": 1932,
        "h": 302
    },
    {
        "id": "c2e3551606d0b674",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#46adfb",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "true",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "ea4292e54e9739dd",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "officedata",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "665f18f8041514a1",
        "type": "mqtt-broker",
        "name": "",
        "broker": "15.207.187.242",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "INS/MBIOT_ETH/09995/UTILITY",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "4fe2c62974bb15b6",
        "type": "ui_group",
        "name": "",
        "tab": "e18da0b4a6055789",
        "order": 2,
        "disp": true,
        "width": 26,
        "collapse": false,
        "className": ""
    },
    {
        "id": "e18da0b4a6055789",
        "type": "ui_tab",
        "name": "Analog Inputs",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "28285c085f1c151a",
        "type": "ui_tab",
        "name": "Energy Meter",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d1a79b5b1b683bcd",
        "type": "ui_group",
        "name": "",
        "tab": "28285c085f1c151a",
        "order": 3,
        "disp": true,
        "width": 23,
        "collapse": false,
        "className": ""
    },
    {
        "id": "1215a62befc082b0",
        "type": "ui_tab",
        "name": "Digital Inputs",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0f5b01afb2f3a18c",
        "type": "ui_group",
        "name": "",
        "tab": "1215a62befc082b0",
        "order": 1,
        "disp": true,
        "width": 15,
        "collapse": false,
        "className": ""
    },
    {
        "id": "ed3efce847bfe3ba",
        "type": "ui_tab",
        "name": "Digital Outputs",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1cec39bef7c1040b",
        "type": "ui_group",
        "name": "",
        "tab": "ed3efce847bfe3ba",
        "order": 1,
        "disp": true,
        "width": 18,
        "collapse": false,
        "className": ""
    },
    {
        "id": "d44baeea9c314c1d",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "904330506182892e",
        "type": "ui_tab",
        "name": "Analog Input Reports",
        "icon": "dashboard",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e5356d149c2603da",
        "type": "ui_group",
        "name": "",
        "tab": "904330506182892e",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c0839fee6b778437",
        "type": "ui_group",
        "name": "",
        "tab": "28285c085f1c151a",
        "order": 1,
        "disp": true,
        "width": 11,
        "collapse": false,
        "className": ""
    },
    {
        "id": "4350a2cad5b88dd0",
        "type": "ui_group",
        "name": "",
        "tab": "e18da0b4a6055789",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c16baad6604e43ec",
        "type": "ui_tab",
        "name": "Digital Inputs Reports",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a63dce05bd491489",
        "type": "ui_group",
        "name": "",
        "tab": "c16baad6604e43ec",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a6c1d70374c391c1",
        "type": "ui_tab",
        "name": "Digital Output Report",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "edb81bbef5b2de26",
        "type": "ui_group",
        "name": "",
        "tab": "a6c1d70374c391c1",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "86b190f5ba1b637a",
        "type": "ui_tab",
        "name": "Energy Meter Reports",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "41333f3402391294",
        "type": "ui_group",
        "name": "",
        "tab": "86b190f5ba1b637a",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "88c933194265cb65",
        "type": "ui_tab",
        "name": "Energy Meter Chart Reports",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "511b53e5bae63045",
        "type": "ui_group",
        "name": "",
        "tab": "88c933194265cb65",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "33dcd29a8a6cd217",
        "type": "ui_tab",
        "name": "Analog Input Charts Reports",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9c2b5219b658e16a",
        "type": "ui_group",
        "name": "",
        "tab": "33dcd29a8a6cd217",
        "order": 2,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0a480f107129b57b",
        "type": "ui_group",
        "name": "",
        "tab": "33dcd29a8a6cd217",
        "order": 3,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "147de0123979bb26",
        "type": "ui_group",
        "name": "",
        "tab": "33dcd29a8a6cd217",
        "order": 4,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fa16104552a9bcb0",
        "type": "ui_group",
        "name": "",
        "tab": "33dcd29a8a6cd217",
        "order": 5,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "536db02ecc48b905",
        "type": "ui_group",
        "name": "",
        "tab": "33dcd29a8a6cd217",
        "order": 6,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d4ef4d2facd763e9",
        "type": "ui_group",
        "name": "",
        "tab": "33dcd29a8a6cd217",
        "order": 7,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1dc58fe23f5e5410",
        "type": "ui_group",
        "name": "",
        "tab": "33dcd29a8a6cd217",
        "order": 8,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "858e090b4052858d",
        "type": "ui_group",
        "name": "",
        "tab": "33dcd29a8a6cd217",
        "order": 9,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "78bb6371fd997fc5",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 2,
        "width": 6,
        "height": 1
    },
    {
        "id": "dcbd772b0761b977",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "3b0e456cce2557b9",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 6,
        "width": 15,
        "height": 1
    },
    {
        "id": "d2859b7dde3a5c8e",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "da1acef0a88e242b",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "f404f4eb2a72bcfe",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "7bf09cf773906dc6",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 13,
        "width": 3,
        "height": 1
    },
    {
        "id": "5cc2e59383add58b",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 14,
        "width": 2,
        "height": 1
    },
    {
        "id": "5132b9c5720a7ac3",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 18,
        "width": 2,
        "height": 1
    },
    {
        "id": "492c552b078c3c17",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 19,
        "width": 2,
        "height": 1
    },
    {
        "id": "68ad70847dceaebf",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 23,
        "width": 2,
        "height": 1
    },
    {
        "id": "288a20ee9af0c11d",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 24,
        "width": 2,
        "height": 1
    },
    {
        "id": "2f190b32bc82bd65",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 28,
        "width": 2,
        "height": 1
    },
    {
        "id": "ab3f198fcc64eefe",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 29,
        "width": 2,
        "height": 1
    },
    {
        "id": "c598902dd1f038b3",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 33,
        "width": 2,
        "height": 1
    },
    {
        "id": "36081591b7a65949",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 34,
        "width": 2,
        "height": 1
    },
    {
        "id": "e2c932b771a44505",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 38,
        "width": 2,
        "height": 1
    },
    {
        "id": "842b0b5390a429bf",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 39,
        "width": 2,
        "height": 1
    },
    {
        "id": "92e1ba711291136d",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 43,
        "width": 2,
        "height": 1
    },
    {
        "id": "18c85a106bd94493",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 44,
        "width": 2,
        "height": 1
    },
    {
        "id": "f39372814d8b004d",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 48,
        "width": 2,
        "height": 1
    },
    {
        "id": "3433315e568685ad",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 49,
        "width": 2,
        "height": 1
    },
    {
        "id": "8ad2ebc1a963e7a8",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 53,
        "width": 2,
        "height": 1
    },
    {
        "id": "e293e0a7c64b1f17",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 54,
        "width": 2,
        "height": 1
    },
    {
        "id": "5b2abe590f6bdcf7",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 58,
        "width": 2,
        "height": 1
    },
    {
        "id": "03961dc56ea64d74",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 59,
        "width": 2,
        "height": 1
    },
    {
        "id": "ffaf24cddd9a0ac2",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 63,
        "width": 2,
        "height": 1
    },
    {
        "id": "2a99a530865fddce",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 64,
        "width": 2,
        "height": 1
    },
    {
        "id": "25602b915c7bc31e",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 68,
        "width": 2,
        "height": 1
    },
    {
        "id": "4325c7db4ce6e6e4",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 69,
        "width": 2,
        "height": 1
    },
    {
        "id": "c3f28ca75e188f18",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 73,
        "width": 2,
        "height": 1
    },
    {
        "id": "fe1c9e6c2b97710b",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 74,
        "width": 15,
        "height": 1
    },
    {
        "id": "e9ebebeb34607a1d",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "7a5fa31e069bd69c",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 3,
        "width": 7,
        "height": 1
    },
    {
        "id": "3290f8395171197e",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "a8e4345f2d5e2202",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 7,
        "width": 18,
        "height": 1
    },
    {
        "id": "729641b0836663fe",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 8,
        "width": 18,
        "height": 1
    },
    {
        "id": "1d794372ecd5a8ed",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "478c6a4ae154b30f",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "202f91ec59a32fb6",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 15,
        "width": 4,
        "height": 1
    },
    {
        "id": "429ac27d98a5a454",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "bade5e0295d8c5d7",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 21,
        "width": 4,
        "height": 1
    },
    {
        "id": "4be81612af493c2f",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "5d728b77be612487",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 27,
        "width": 4,
        "height": 1
    },
    {
        "id": "324eeee671c61238",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 28,
        "width": 1,
        "height": 1
    },
    {
        "id": "3f64932eae4e1593",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 33,
        "width": 4,
        "height": 1
    },
    {
        "id": "b89bdf9cd601d8ae",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 34,
        "width": 1,
        "height": 1
    },
    {
        "id": "5624194dd9d0eeab",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 39,
        "width": 4,
        "height": 1
    },
    {
        "id": "642deaf717fde6cb",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 40,
        "width": 1,
        "height": 1
    },
    {
        "id": "b979f94e4bb10887",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 45,
        "width": 4,
        "height": 1
    },
    {
        "id": "f874756662479b62",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 46,
        "width": 1,
        "height": 1
    },
    {
        "id": "fe885784bcc550f8",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 51,
        "width": 4,
        "height": 1
    },
    {
        "id": "2371c01a43bbafeb",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 52,
        "width": 1,
        "height": 1
    },
    {
        "id": "e400bce257de33f6",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 57,
        "width": 4,
        "height": 1
    },
    {
        "id": "b0ad21399488ac78",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 58,
        "width": 1,
        "height": 1
    },
    {
        "id": "40347761891a1f21",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 63,
        "width": 4,
        "height": 1
    },
    {
        "id": "02ecdb8bdf9f2434",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 64,
        "width": 1,
        "height": 1
    },
    {
        "id": "5c7e09bd3f82c1a3",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 69,
        "width": 4,
        "height": 1
    },
    {
        "id": "077d329346d91d68",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 70,
        "width": 1,
        "height": 1
    },
    {
        "id": "20e26dac72e29145",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 75,
        "width": 4,
        "height": 1
    },
    {
        "id": "f6bb28b6667c3d27",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 76,
        "width": 1,
        "height": 1
    },
    {
        "id": "3164fe5bb6c7fa97",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 81,
        "width": 4,
        "height": 1
    },
    {
        "id": "81a3ab4611280a21",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 82,
        "width": 1,
        "height": 1
    },
    {
        "id": "e70fb3959b7a32d2",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 87,
        "width": 4,
        "height": 1
    },
    {
        "id": "a25d1e645f372b17",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 88,
        "width": 18,
        "height": 1
    },
    {
        "id": "1bdd1aa132772567",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 89,
        "width": 18,
        "height": 1
    },
    {
        "id": "ab7b049a365bc36a",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 90,
        "width": 18,
        "height": 1
    },
    {
        "id": "5e4cf327e2eeac50",
        "type": "ui_spacer",
        "z": "faed5b70a0f086fc",
        "name": "spacer",
        "group": "511b53e5bae63045",
        "order": 1,
        "width": 9,
        "height": 1
    },
    {
        "id": "ef7a0cafdfea9042",
        "type": "ui_spacer",
        "z": "faed5b70a0f086fc",
        "name": "spacer",
        "group": "511b53e5bae63045",
        "order": 3,
        "width": 5,
        "height": 1
    },
    {
        "id": "d1a3454e54f5d516",
        "type": "ui_spacer",
        "z": "faed5b70a0f086fc",
        "name": "spacer",
        "group": "511b53e5bae63045",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "9b3f925a7004ab3e",
        "type": "ui_spacer",
        "z": "faed5b70a0f086fc",
        "name": "spacer",
        "group": "511b53e5bae63045",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "5edd8b75b003cb12",
        "type": "ui_spacer",
        "z": "faed5b70a0f086fc",
        "name": "spacer",
        "group": "511b53e5bae63045",
        "order": 9,
        "width": 2,
        "height": 1
    },
    {
        "id": "6c9d69fad1403f44",
        "type": "ui_spacer",
        "z": "faed5b70a0f086fc",
        "name": "spacer",
        "group": "511b53e5bae63045",
        "order": 10,
        "width": 2,
        "height": 1
    },
    {
        "id": "43afb78e5a634190",
        "type": "ui_spacer",
        "z": "faed5b70a0f086fc",
        "name": "spacer",
        "group": "511b53e5bae63045",
        "order": 11,
        "width": 2,
        "height": 1
    },
    {
        "id": "2a04256e17b21ef1",
        "type": "ui_spacer",
        "z": "faed5b70a0f086fc",
        "name": "spacer",
        "group": "511b53e5bae63045",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "64910fecd6940897",
        "type": "ui_spacer",
        "z": "faed5b70a0f086fc",
        "name": "spacer",
        "group": "511b53e5bae63045",
        "order": 14,
        "width": 2,
        "height": 1
    },
    {
        "id": "cd8cb52d1807640b",
        "type": "ui_spacer",
        "z": "faed5b70a0f086fc",
        "name": "spacer",
        "group": "511b53e5bae63045",
        "order": 15,
        "width": 2,
        "height": 1
    },
    {
        "id": "0d9dcc1c61fcab79",
        "type": "ui_spacer",
        "z": "faed5b70a0f086fc",
        "name": "spacer",
        "group": "511b53e5bae63045",
        "order": 16,
        "width": 2,
        "height": 1
    },
    {
        "id": "022742a93f5f953c",
        "type": "ui_spacer",
        "z": "faed5b70a0f086fc",
        "name": "spacer",
        "group": "511b53e5bae63045",
        "order": 17,
        "width": 2,
        "height": 1
    },
    {
        "id": "fae0bf1f286da4da",
        "type": "ui_spacer",
        "z": "faed5b70a0f086fc",
        "name": "spacer",
        "group": "511b53e5bae63045",
        "order": 18,
        "width": 2,
        "height": 1
    },
    {
        "id": "c9e04603999d24dc",
        "type": "ui_spacer",
        "z": "faed5b70a0f086fc",
        "name": "spacer",
        "group": "511b53e5bae63045",
        "order": 19,
        "width": 2,
        "height": 1
    },
    {
        "id": "e8b1f0870295b063",
        "type": "ui_spacer",
        "z": "faed5b70a0f086fc",
        "name": "spacer",
        "group": "511b53e5bae63045",
        "order": 20,
        "width": 2,
        "height": 1
    },
    {
        "id": "7792b1bd73a080a0",
        "type": "ui_spacer",
        "z": "faed5b70a0f086fc",
        "name": "spacer",
        "group": "511b53e5bae63045",
        "order": 21,
        "width": 2,
        "height": 1
    },
    {
        "id": "2db0da83f7fc4d07",
        "type": "ui_spacer",
        "z": "faed5b70a0f086fc",
        "name": "spacer",
        "group": "511b53e5bae63045",
        "order": 22,
        "width": 2,
        "height": 1
    },
    {
        "id": "3e34bf919a3c40ee",
        "type": "ui_spacer",
        "z": "faed5b70a0f086fc",
        "name": "spacer",
        "group": "511b53e5bae63045",
        "order": 23,
        "width": 2,
        "height": 1
    },
    {
        "id": "2f3459cbb6d73ef6",
        "type": "ui_spacer",
        "z": "faed5b70a0f086fc",
        "name": "spacer",
        "group": "511b53e5bae63045",
        "order": 24,
        "width": 2,
        "height": 1
    },
    {
        "id": "abcc378b359a3cd4",
        "type": "ui_spacer",
        "z": "faed5b70a0f086fc",
        "name": "spacer",
        "group": "511b53e5bae63045",
        "order": 25,
        "width": 2,
        "height": 1
    },
    {
        "id": "7f8b76efbdd6738e",
        "type": "ui_spacer",
        "z": "faed5b70a0f086fc",
        "name": "spacer",
        "group": "511b53e5bae63045",
        "order": 26,
        "width": 2,
        "height": 1
    },
    {
        "id": "11eb86e4d59de89a",
        "type": "ui_spacer",
        "z": "faed5b70a0f086fc",
        "name": "spacer",
        "group": "511b53e5bae63045",
        "order": 27,
        "width": 30,
        "height": 1
    },
    {
        "id": "4af9dbf049f5fd03",
        "type": "ui_group",
        "name": "",
        "tab": "33dcd29a8a6cd217",
        "order": 1,
        "disp": true,
        "width": "40",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a38de950d91cc2e7",
        "type": "ui_spacer",
        "z": "8fb86a9dc773c141",
        "name": "spacer",
        "group": "4af9dbf049f5fd03",
        "order": 2,
        "width": 24,
        "height": 1
    },
    {
        "id": "4f616c686ddad95a",
        "type": "ui_spacer",
        "z": "8fb86a9dc773c141",
        "name": "spacer",
        "group": "4af9dbf049f5fd03",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "765cd0bdd5fe5426",
        "type": "ui_spacer",
        "z": "8fb86a9dc773c141",
        "name": "spacer",
        "group": "9c2b5219b658e16a",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "4d2b883da7e70b63",
        "type": "ui_spacer",
        "z": "8fb86a9dc773c141",
        "name": "spacer",
        "group": "9c2b5219b658e16a",
        "order": 4,
        "width": 3,
        "height": 1
    },
    {
        "id": "5e0e581471f7c6a4",
        "type": "ui_spacer",
        "z": "8fb86a9dc773c141",
        "name": "spacer",
        "group": "0a480f107129b57b",
        "order": 1,
        "width": 4,
        "height": 1
    },
    {
        "id": "0c9b0ea278b4f3ea",
        "type": "ui_spacer",
        "z": "8fb86a9dc773c141",
        "name": "spacer",
        "group": "0a480f107129b57b",
        "order": 3,
        "width": 3,
        "height": 1
    },
    {
        "id": "e0b754063725e367",
        "type": "ui_spacer",
        "z": "8fb86a9dc773c141",
        "name": "spacer",
        "group": "147de0123979bb26",
        "order": 1,
        "width": 4,
        "height": 1
    },
    {
        "id": "7ef5bd8efea06ccd",
        "type": "ui_spacer",
        "z": "8fb86a9dc773c141",
        "name": "spacer",
        "group": "147de0123979bb26",
        "order": 3,
        "width": 3,
        "height": 1
    },
    {
        "id": "198f6e9edf4a34de",
        "type": "ui_spacer",
        "z": "8fb86a9dc773c141",
        "name": "spacer",
        "group": "fa16104552a9bcb0",
        "order": 1,
        "width": 4,
        "height": 1
    },
    {
        "id": "a937c64d6b579f44",
        "type": "ui_spacer",
        "z": "8fb86a9dc773c141",
        "name": "spacer",
        "group": "fa16104552a9bcb0",
        "order": 3,
        "width": 3,
        "height": 1
    },
    {
        "id": "0ab4e2bf5c396be9",
        "type": "ui_spacer",
        "z": "8fb86a9dc773c141",
        "name": "spacer",
        "group": "536db02ecc48b905",
        "order": 1,
        "width": 4,
        "height": 1
    },
    {
        "id": "588e4e92cc9e37ae",
        "type": "ui_spacer",
        "z": "8fb86a9dc773c141",
        "name": "spacer",
        "group": "536db02ecc48b905",
        "order": 3,
        "width": 3,
        "height": 1
    },
    {
        "id": "fdcc4fc8ee7e331f",
        "type": "ui_spacer",
        "z": "8fb86a9dc773c141",
        "name": "spacer",
        "group": "d4ef4d2facd763e9",
        "order": 1,
        "width": 4,
        "height": 1
    },
    {
        "id": "3119e38759ed1492",
        "type": "ui_spacer",
        "z": "8fb86a9dc773c141",
        "name": "spacer",
        "group": "d4ef4d2facd763e9",
        "order": 3,
        "width": 3,
        "height": 1
    },
    {
        "id": "0eada7e3b15fa199",
        "type": "ui_spacer",
        "z": "8fb86a9dc773c141",
        "name": "spacer",
        "group": "1dc58fe23f5e5410",
        "order": 1,
        "width": 4,
        "height": 1
    },
    {
        "id": "e9652fec583be220",
        "type": "ui_spacer",
        "z": "8fb86a9dc773c141",
        "name": "spacer",
        "group": "1dc58fe23f5e5410",
        "order": 3,
        "width": 3,
        "height": 1
    },
    {
        "id": "8d1764dcb3062737",
        "type": "ui_spacer",
        "z": "8fb86a9dc773c141",
        "name": "spacer",
        "group": "858e090b4052858d",
        "order": 1,
        "width": 4,
        "height": 1
    },
    {
        "id": "3c43115942b27f12",
        "type": "ui_spacer",
        "z": "8fb86a9dc773c141",
        "name": "spacer",
        "group": "858e090b4052858d",
        "order": 3,
        "width": 3,
        "height": 1
    },
    {
        "id": "ebfe8f7cba3e8562",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 2,
        "width": 4,
        "height": 1
    },
    {
        "id": "1a7e2a83b83eded5",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "7596fb8913388c88",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 5,
        "width": 11,
        "height": 1
    },
    {
        "id": "52827bacfee17277",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "ef0fc36c44e98d21",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "c87ed2e78e502855",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "504d267eb91d9879",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "7efe377347c9bcdc",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "0f219767d44efac7",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 18,
        "width": 1,
        "height": 1
    },
    {
        "id": "8cb65c288f968b0c",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "adc85634474f8b2d",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "e9a411c84971d831",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 23,
        "width": 11,
        "height": 1
    },
    {
        "id": "4e8ee7c708518ce3",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 24,
        "width": 1,
        "height": 1
    },
    {
        "id": "c42bb80afb8380c8",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "0358d3efe69139bf",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 28,
        "width": 1,
        "height": 1
    },
    {
        "id": "811fd478cfc48565",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 31,
        "width": 1,
        "height": 1
    },
    {
        "id": "feb9d7cf2e4ad264",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 32,
        "width": 1,
        "height": 1
    },
    {
        "id": "20d10ef5bf0bb42a",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 35,
        "width": 1,
        "height": 1
    },
    {
        "id": "358c6b6f34cb172b",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 36,
        "width": 1,
        "height": 1
    },
    {
        "id": "3b619e5bc7086da8",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 39,
        "width": 1,
        "height": 1
    },
    {
        "id": "f9a3d5217f56a268",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 40,
        "width": 11,
        "height": 1
    },
    {
        "id": "23622571e7426eb3",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 41,
        "width": 1,
        "height": 1
    },
    {
        "id": "65515bc0a970486d",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 44,
        "width": 1,
        "height": 1
    },
    {
        "id": "17943371c3e30bb6",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 45,
        "width": 1,
        "height": 1
    },
    {
        "id": "6556da2cff64ed64",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 48,
        "width": 1,
        "height": 1
    },
    {
        "id": "b7b4dbaff408b73f",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 49,
        "width": 1,
        "height": 1
    },
    {
        "id": "c0927554a096c28e",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 52,
        "width": 1,
        "height": 1
    },
    {
        "id": "02f5e70eecdcc1a6",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 53,
        "width": 1,
        "height": 1
    },
    {
        "id": "3dc150aa75e461cb",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 56,
        "width": 1,
        "height": 1
    },
    {
        "id": "ca16010cdd49195f",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 57,
        "width": 1,
        "height": 1
    },
    {
        "id": "6de8796c52f65aeb",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 60,
        "width": 1,
        "height": 1
    },
    {
        "id": "5a5786e8275275ce",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 61,
        "width": 11,
        "height": 1
    },
    {
        "id": "7bc2f2e7c1aa24c4",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 62,
        "width": 2,
        "height": 1
    },
    {
        "id": "2dfe0ac8fe91503b",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 64,
        "width": 4,
        "height": 1
    },
    {
        "id": "9867895a2b344525",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 1,
        "width": 19,
        "height": 1
    },
    {
        "id": "46d6e9310c81a51a",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "2564d02dc8a46799",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 6,
        "width": 23,
        "height": 1
    },
    {
        "id": "46f708c3db944ad8",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 7,
        "width": 23,
        "height": 1
    },
    {
        "id": "07b4e92fb578ca2b",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 11,
        "width": 5,
        "height": 1
    },
    {
        "id": "78e826cd8d11b322",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 12,
        "width": 5,
        "height": 1
    },
    {
        "id": "c251415f3bb3d37f",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 13,
        "width": 5,
        "height": 1
    },
    {
        "id": "58878d993a351f67",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 14,
        "width": 5,
        "height": 1
    },
    {
        "id": "3a45ab409eae6639",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 15,
        "width": 23,
        "height": 1
    },
    {
        "id": "a3d87496b11a4ba5",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 17,
        "width": 3,
        "height": 1
    },
    {
        "id": "560147bac74a3e95",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 18,
        "width": 3,
        "height": 1
    },
    {
        "id": "c32a428a1969ea51",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 19,
        "width": 3,
        "height": 1
    },
    {
        "id": "b8ac3f93031a3e54",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 20,
        "width": 3,
        "height": 1
    },
    {
        "id": "bae1533961e0c5b8",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 21,
        "width": 23,
        "height": 1
    },
    {
        "id": "b9b1656dfa0f00df",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 23,
        "width": 3,
        "height": 1
    },
    {
        "id": "6de6c225316244ea",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 24,
        "width": 3,
        "height": 1
    },
    {
        "id": "18e97e5fcab8e2b1",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 25,
        "width": 3,
        "height": 1
    },
    {
        "id": "99631010bebd5073",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 26,
        "width": 3,
        "height": 1
    },
    {
        "id": "451e6ff798f37815",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 27,
        "width": 23,
        "height": 1
    },
    {
        "id": "9fc254630aecc5cc",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 28,
        "width": 23,
        "height": 1
    },
    {
        "id": "7f0116a3965ef4fd",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 30,
        "width": 1,
        "height": 1
    },
    {
        "id": "a760103383a665fb",
        "type": "ui_spacer",
        "z": "25c4b31e8f5c3feb",
        "name": "spacer",
        "group": "41333f3402391294",
        "order": 1,
        "width": 5,
        "height": 1
    },
    {
        "id": "66dc0b023cb5c3d8",
        "type": "ui_spacer",
        "z": "25c4b31e8f5c3feb",
        "name": "spacer",
        "group": "41333f3402391294",
        "order": 5,
        "width": 3,
        "height": 1
    },
    {
        "id": "156ee03857a992de",
        "type": "ui_spacer",
        "z": "25c4b31e8f5c3feb",
        "name": "spacer",
        "group": "41333f3402391294",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "67de933c11fab652",
        "type": "ui_spacer",
        "z": "25c4b31e8f5c3feb",
        "name": "spacer",
        "group": "41333f3402391294",
        "order": 9,
        "width": 30,
        "height": 1
    },
    {
        "id": "e4ca9785a0b017d9",
        "type": "ui_spacer",
        "z": "25c4b31e8f5c3feb",
        "name": "spacer",
        "group": "41333f3402391294",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "e61a288f7bb69ace",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 1,
        "width": 12,
        "height": 1
    },
    {
        "id": "b007e87272e6e492",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "9d6b41ac361dc9c5",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 4,
        "width": 4,
        "height": 1
    },
    {
        "id": "c4c2c9939b4ab896",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 5,
        "width": 12,
        "height": 1
    },
    {
        "id": "4c5007228474a6f4",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "a28273ce9405d9c8",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "5dedb5782da569fa",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 11,
        "width": 2,
        "height": 1
    },
    {
        "id": "fce0925213aaa3e6",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "42354f4ba2475cb8",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "0c6a2d5843a503b9",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "382814e1d8f98b26",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "8728ad8648d0712e",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "5798376b6b829bf7",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "557b03843d63de45",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 24,
        "width": 1,
        "height": 1
    },
    {
        "id": "6bd0893ff93b45b2",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "f9244f8f718aecd4",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 28,
        "width": 1,
        "height": 1
    },
    {
        "id": "adf10f18e0fb5394",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 31,
        "width": 1,
        "height": 1
    },
    {
        "id": "75ee277cb29d708b",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 32,
        "width": 12,
        "height": 1
    },
    {
        "id": "abf8af2187557427",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 33,
        "width": 1,
        "height": 1
    },
    {
        "id": "2d8c0cc13633bbf4",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 36,
        "width": 1,
        "height": 1
    },
    {
        "id": "5160e8d0c547c104",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 37,
        "width": 1,
        "height": 1
    },
    {
        "id": "ba9d9fed4fb1ead0",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 40,
        "width": 1,
        "height": 1
    },
    {
        "id": "269875ca06307694",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 41,
        "width": 1,
        "height": 1
    },
    {
        "id": "ffecfdb17eac4512",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 44,
        "width": 1,
        "height": 1
    },
    {
        "id": "60d28ab1c93aebb8",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 45,
        "width": 12,
        "height": 1
    },
    {
        "id": "456253744e621821",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 1,
        "width": 26,
        "height": 1
    },
    {
        "id": "530b4e0dee88b3f0",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 2,
        "width": 22,
        "height": 1
    },
    {
        "id": "16ed398d5d31cce8",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "2ffd4852406fa848",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 7,
        "width": 26,
        "height": 1
    },
    {
        "id": "9d2298e7a50de57b",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "2bd33245c99846fb",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "b085b8749e80762c",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "cc35a8229b87026b",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "064685fd41bcfdfb",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "114144aa6c6fe3d3",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "73c6adf872c42849",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 18,
        "width": 1,
        "height": 1
    },
    {
        "id": "c0cdd9f388f8ccf5",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "219dced9604712c2",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 20,
        "width": 26,
        "height": 1
    },
    {
        "id": "75a1540487e22150",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 21,
        "width": 26,
        "height": 1
    },
    {
        "id": "cf59455a5c3e85ed",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "781f93f847cdab0e",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "da09c8ef2bd6110f",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 28,
        "width": 1,
        "height": 1
    },
    {
        "id": "46b32a0fec5eecbb",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 29,
        "width": 1,
        "height": 1
    },
    {
        "id": "98b6e735a381ee29",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 30,
        "width": 1,
        "height": 1
    },
    {
        "id": "695a1190b55f7393",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 31,
        "width": 1,
        "height": 1
    },
    {
        "id": "2ac062ad60900e4f",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 32,
        "width": 1,
        "height": 1
    },
    {
        "id": "5908580a3b8bf2a4",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 33,
        "width": 1,
        "height": 1
    },
    {
        "id": "609d027bdf1e6fc0",
        "type": "ui_spacer",
        "z": "4702739a59c3c441",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 34,
        "width": 26,
        "height": 1
    },
    {
        "id": "0d0b4c66bafccc40",
        "type": "ui_spacer",
        "z": "28a1f791cc37d4af",
        "name": "spacer",
        "group": "e5356d149c2603da",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "86cb454384bf123b",
        "type": "ui_spacer",
        "z": "28a1f791cc37d4af",
        "name": "spacer",
        "group": "e5356d149c2603da",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "2e0d03b68e0c9148",
        "type": "ui_spacer",
        "z": "28a1f791cc37d4af",
        "name": "spacer",
        "group": "e5356d149c2603da",
        "order": 5,
        "width": 4,
        "height": 1
    },
    {
        "id": "52929857a1e9298c",
        "type": "ui_spacer",
        "z": "28a1f791cc37d4af",
        "name": "spacer",
        "group": "e5356d149c2603da",
        "order": 9,
        "width": 3,
        "height": 1
    },
    {
        "id": "a7ebcb8522665b70",
        "type": "ui_spacer",
        "z": "8ef2b9c6e0a1e471",
        "name": "spacer",
        "group": "a63dce05bd491489",
        "order": 2,
        "width": 6,
        "height": 1
    },
    {
        "id": "40f7e2b5cff00fe3",
        "type": "ui_spacer",
        "z": "8ef2b9c6e0a1e471",
        "name": "spacer",
        "group": "a63dce05bd491489",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "84d2a7708d371683",
        "type": "ui_spacer",
        "z": "8ef2b9c6e0a1e471",
        "name": "spacer",
        "group": "a63dce05bd491489",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "1b9c225ceeb95efc",
        "type": "ui_spacer",
        "z": "8ef2b9c6e0a1e471",
        "name": "spacer",
        "group": "a63dce05bd491489",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "dfa6ab78b919aeb7",
        "type": "ui_spacer",
        "z": "f08276ee447f37b8",
        "name": "spacer",
        "group": "edb81bbef5b2de26",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "1accc51c1e2b7728",
        "type": "ui_spacer",
        "z": "f08276ee447f37b8",
        "name": "spacer",
        "group": "edb81bbef5b2de26",
        "order": 3,
        "width": 8,
        "height": 1
    },
    {
        "id": "26b93f5d01e80b6d",
        "type": "ui_spacer",
        "z": "f08276ee447f37b8",
        "name": "spacer",
        "group": "edb81bbef5b2de26",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "a47d75599ddf67c2",
        "type": "ui_tab",
        "name": "Practice",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "15d5938965253a38",
        "type": "ui_group",
        "name": "Default",
        "tab": "a47d75599ddf67c2",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a37d4a32417b3417",
        "type": "ui_group",
        "name": "MainDashboard",
        "tab": "d44baeea9c314c1d",
        "order": 3,
        "disp": false,
        "width": 30,
        "collapse": false,
        "className": ""
    },
    {
        "id": "b8dde0e812c7fb5b",
        "type": "ui_group",
        "name": "HeadPart",
        "tab": "d44baeea9c314c1d",
        "order": 1,
        "disp": false,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "94f35a99c86641b2",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "b8dde0e812c7fb5b",
        "order": 2,
        "width": 24,
        "height": 1
    },
    {
        "id": "8577bdf55bac62be",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "b8dde0e812c7fb5b",
        "order": 3,
        "width": 2,
        "height": 1
    },
    {
        "id": "2d695cc5a1e0d78a",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "b8dde0e812c7fb5b",
        "order": 5,
        "width": 3,
        "height": 1
    },
    {
        "id": "a915d24988f116b9",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "b8dde0e812c7fb5b",
        "order": 7,
        "width": 24,
        "height": 1
    },
    {
        "id": "75db77fd81b05905",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 1,
        "width": 30,
        "height": 1
    },
    {
        "id": "6b24b1e070a49659",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 2,
        "width": 7,
        "height": 1
    },
    {
        "id": "309cc5e023be9540",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 4,
        "width": 4,
        "height": 1
    },
    {
        "id": "b76e76bed8bc8985",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 6,
        "width": 7,
        "height": 1
    },
    {
        "id": "15af2cd41d0e68a2",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 7,
        "width": 7,
        "height": 1
    },
    {
        "id": "a02c832aacd7ba40",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 8,
        "width": 4,
        "height": 1
    },
    {
        "id": "163de72032907a21",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 9,
        "width": 7,
        "height": 1
    },
    {
        "id": "edc0807c895ba093",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 10,
        "width": 7,
        "height": 1
    },
    {
        "id": "6dae74ec76584e52",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 11,
        "width": 4,
        "height": 1
    },
    {
        "id": "7201bdd837d6ea89",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 12,
        "width": 7,
        "height": 1
    },
    {
        "id": "d0996372bd0b5c47",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 13,
        "width": 7,
        "height": 1
    },
    {
        "id": "e5870db2d8045796",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 14,
        "width": 4,
        "height": 1
    },
    {
        "id": "f39660a7f2ea16da",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 15,
        "width": 7,
        "height": 1
    },
    {
        "id": "6ef1592912f04852",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 16,
        "width": 7,
        "height": 1
    },
    {
        "id": "8e37231118aea708",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 17,
        "width": 4,
        "height": 1
    },
    {
        "id": "c79e912136487223",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 18,
        "width": 7,
        "height": 1
    },
    {
        "id": "c6f4baeb1d356417",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 19,
        "width": 7,
        "height": 1
    },
    {
        "id": "e74db36ddd59c2d5",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 20,
        "width": 4,
        "height": 1
    },
    {
        "id": "54c46ba87f94a96d",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 21,
        "width": 7,
        "height": 1
    },
    {
        "id": "55b4dcbeba479ef7",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 22,
        "width": 7,
        "height": 1
    },
    {
        "id": "5c80aa0626dd7aac",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 24,
        "width": 4,
        "height": 1
    },
    {
        "id": "49e659b0fc3b85e1",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 26,
        "width": 7,
        "height": 1
    },
    {
        "id": "3999e1bf99133cf0",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 27,
        "width": 30,
        "height": 1
    },
    {
        "id": "2f973efcb6cd884e",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 28,
        "width": 7,
        "height": 1
    },
    {
        "id": "d614b3b2c48cb77c",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 30,
        "width": 4,
        "height": 1
    },
    {
        "id": "9e9c23536e595f59",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 32,
        "width": 7,
        "height": 1
    },
    {
        "id": "aceeb4bac29b501f",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 33,
        "width": 7,
        "height": 1
    },
    {
        "id": "e513c3f125cf4cea",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 34,
        "width": 4,
        "height": 1
    },
    {
        "id": "5fada3baa6b514c7",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 35,
        "width": 7,
        "height": 1
    },
    {
        "id": "50a46d28d9fd40c2",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 36,
        "width": 7,
        "height": 1
    },
    {
        "id": "edffee9ae474612d",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 37,
        "width": 4,
        "height": 1
    },
    {
        "id": "7c8b2bdf0db4c937",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 38,
        "width": 7,
        "height": 1
    },
    {
        "id": "fa94d1f1f5712654",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 39,
        "width": 7,
        "height": 1
    },
    {
        "id": "762c180dcd3bbc2b",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 40,
        "width": 4,
        "height": 1
    },
    {
        "id": "157a962392a22d59",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 41,
        "width": 7,
        "height": 1
    },
    {
        "id": "e078b074bbaa3e51",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 42,
        "width": 7,
        "height": 1
    },
    {
        "id": "e983576042e0024c",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 43,
        "width": 4,
        "height": 1
    },
    {
        "id": "01d3d16ef635020f",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 44,
        "width": 7,
        "height": 1
    },
    {
        "id": "954041d983f856fa",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 45,
        "width": 7,
        "height": 1
    },
    {
        "id": "e0e50988df6deadc",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 46,
        "width": 4,
        "height": 1
    },
    {
        "id": "51b012f9302ca8a5",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 47,
        "width": 7,
        "height": 1
    },
    {
        "id": "4cbc509117c3a78b",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 48,
        "width": 7,
        "height": 1
    },
    {
        "id": "2281cbd34cf09c95",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 50,
        "width": 4,
        "height": 1
    },
    {
        "id": "6ff05ce2d1c56689",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 52,
        "width": 3,
        "height": 1
    },
    {
        "id": "f7604729aa43e8ab",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 54,
        "width": 1,
        "height": 1
    },
    {
        "id": "6aa2b78bc1809002",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 55,
        "width": 26,
        "height": 1
    },
    {
        "id": "f4c4ab4d844429b0",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 56,
        "width": 1,
        "height": 1
    },
    {
        "id": "cb73734eb37c9aa2",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 57,
        "width": 12,
        "height": 1
    },
    {
        "id": "a30145648cdecb8e",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "a37d4a32417b3417",
        "order": 59,
        "width": 14,
        "height": 1
    },
    {
        "id": "e81c653ba3189836",
        "type": "change",
        "z": "cadcef1c8b97565d",
        "g": "562971a2a1395d1f",
        "name": "linking to the AI flow",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\" : \"Analog Inputs\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 400,
        "wires": [
            [
                "9b45753bf6ad0a27"
            ]
        ]
    },
    {
        "id": "e39f7d8d1358f151",
        "type": "change",
        "z": "cadcef1c8b97565d",
        "g": "562971a2a1395d1f",
        "name": "Linking to the DI flow",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\" : \"Digital Inputs\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 440,
        "wires": [
            [
                "9b45753bf6ad0a27"
            ]
        ]
    },
    {
        "id": "03dc7af723724342",
        "type": "change",
        "z": "cadcef1c8b97565d",
        "g": "562971a2a1395d1f",
        "name": "Linking to the DO flow",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\" : \"Digital Outputs\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 480,
        "wires": [
            [
                "9b45753bf6ad0a27"
            ]
        ]
    },
    {
        "id": "9b45753bf6ad0a27",
        "type": "ui_ui_control",
        "z": "cadcef1c8b97565d",
        "g": "562971a2a1395d1f",
        "name": "",
        "events": "change",
        "x": 1300,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "77f2a07df446733a",
        "type": "ui_button",
        "z": "cadcef1c8b97565d",
        "g": "562971a2a1395d1f",
        "name": "",
        "group": "a37d4a32417b3417",
        "order": 25,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Analog Input",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 730,
        "y": 400,
        "wires": [
            [
                "e81c653ba3189836"
            ]
        ]
    },
    {
        "id": "d101e9d44b20ef62",
        "type": "ui_button",
        "z": "cadcef1c8b97565d",
        "g": "562971a2a1395d1f",
        "name": "",
        "group": "a37d4a32417b3417",
        "order": 49,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Digital Input",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 730,
        "y": 440,
        "wires": [
            [
                "e39f7d8d1358f151"
            ]
        ]
    },
    {
        "id": "499be2230dd367f7",
        "type": "ui_button",
        "z": "cadcef1c8b97565d",
        "g": "562971a2a1395d1f",
        "name": "",
        "group": "a37d4a32417b3417",
        "order": 51,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Digital Outputs",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 720,
        "y": 480,
        "wires": [
            [
                "03dc7af723724342"
            ]
        ]
    },
    {
        "id": "7040aa4d4c527c47",
        "type": "ui_button",
        "z": "cadcef1c8b97565d",
        "g": "562971a2a1395d1f",
        "name": "",
        "group": "a37d4a32417b3417",
        "order": 23,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Energy Meter",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 720,
        "y": 520,
        "wires": [
            [
                "5fe31866a28e0e84"
            ]
        ]
    },
    {
        "id": "5fe31866a28e0e84",
        "type": "change",
        "z": "cadcef1c8b97565d",
        "g": "562971a2a1395d1f",
        "name": "Linking to the Energy Meter flow",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Energy Meter\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 520,
        "wires": [
            [
                "9b45753bf6ad0a27"
            ]
        ]
    },
    {
        "id": "c93fe699ade7c84b",
        "type": "ui_media",
        "z": "cadcef1c8b97565d",
        "g": "746fe73aa459f946",
        "group": "a37d4a32417b3417",
        "name": "Analog Input image",
        "width": 6,
        "height": 6,
        "order": 5,
        "category": "Analog Input",
        "file": "AiInput.jpg",
        "layout": "center",
        "showcontrols": true,
        "loop": true,
        "onstart": true,
        "scope": "local",
        "tooltip": "",
        "x": 850,
        "y": 640,
        "wires": [
            [
                "6fed24810e7a3207"
            ]
        ]
    },
    {
        "id": "6fed24810e7a3207",
        "type": "ui_media",
        "z": "cadcef1c8b97565d",
        "g": "746fe73aa459f946",
        "group": "a37d4a32417b3417",
        "name": "Digital Input Image",
        "width": 6,
        "height": 6,
        "order": 29,
        "category": "Digital Input",
        "file": "DigitalInputs.jpg",
        "layout": "center",
        "showcontrols": true,
        "loop": true,
        "onstart": false,
        "scope": "local",
        "tooltip": "",
        "x": 1170,
        "y": 640,
        "wires": [
            [
                "727da1d79f9cb827"
            ]
        ]
    },
    {
        "id": "8a7abb84372dd6cc",
        "type": "ui_media",
        "z": "cadcef1c8b97565d",
        "g": "746fe73aa459f946",
        "group": "a37d4a32417b3417",
        "name": "Digital Output Image",
        "width": 6,
        "height": 6,
        "order": 31,
        "category": "Digital Output",
        "file": "DigitalOutputs.jpg",
        "layout": "center",
        "showcontrols": true,
        "loop": true,
        "onstart": false,
        "scope": "local",
        "tooltip": "",
        "x": 1160,
        "y": 740,
        "wires": [
            [
                "3b7aa8b6b5364091"
            ]
        ]
    },
    {
        "id": "727da1d79f9cb827",
        "type": "ui_media",
        "z": "cadcef1c8b97565d",
        "g": "746fe73aa459f946",
        "group": "a37d4a32417b3417",
        "name": "Energy Meter Image",
        "width": 6,
        "height": 6,
        "order": 3,
        "category": "Energy Meter",
        "file": "energy meter.jpg",
        "layout": "center",
        "showcontrols": true,
        "loop": true,
        "onstart": false,
        "scope": "local",
        "tooltip": "",
        "x": 920,
        "y": 740,
        "wires": [
            [
                "8a7abb84372dd6cc"
            ]
        ]
    },
    {
        "id": "3b7aa8b6b5364091",
        "type": "ui_text",
        "z": "cadcef1c8b97565d",
        "g": "746fe73aa459f946",
        "group": "a37d4a32417b3417",
        "order": 58,
        "width": 4,
        "height": 1,
        "name": "Below Blank Space Text",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1010,
        "y": 820,
        "wires": []
    },
    {
        "id": "912f6f7556b1a38b",
        "type": "ui_template",
        "z": "cadcef1c8b97565d",
        "group": "a37d4a32417b3417",
        "name": "",
        "order": 53,
        "width": 3,
        "height": 2,
        "format": "\n<style>\nui-card-panel{\n    /* width:100% !important; */\n    /* min-height : 768px !important; */\n    justify-content: space-between;\n}\n\n/* img{\n    height: 300px !important;\n    width: 500px !important;\n} */\n\n.nr-dashboard-cardcontainer{\n    /* width: 100% !important; */\n    /* margin: auto !important; */\n    /* width: 100% !important; */\n}\n\n.nr-dashboard-cardpanel layout-column{\n    /* justify-content: space-between !important; */\n}\n\n\n nr-dashboard-text _md layout-row layout-align-start-center nr-dashboard-widget- visible{\n    left : 1409 !important;\n    width : 206 !important;\n}\n\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1020,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "addcf0dfd94c4a48",
        "type": "ui_text",
        "z": "cadcef1c8b97565d",
        "group": "b8dde0e812c7fb5b",
        "order": 4,
        "width": 13,
        "height": 1,
        "name": "Heading ",
        "label": "<b><font size = 10>Utility Monitoring System</b>",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1040,
        "y": 280,
        "wires": []
    },
    {
        "id": "5dc45e228aa57a8a",
        "type": "function",
        "z": "cadcef1c8b97565d",
        "name": "function 92",
        "func": "var date = new Date();\nvar year = date.getFullYear();\nvar month = date.getMonth() + 1;\nvar day = date.getDate();\nvar hours = date.getHours().toString().padStart(2, '0');\nvar minutes = date.getMinutes().toString().padStart(2, '0');\nvar seconds = date.getSeconds().toString().padStart(2, '0');\n\nvar fullformat = `${day.toString().padStart(2, '0')}-${month.toString().padStart(2, '0')}-${year}`;\nvar timeformat = `${hours}:${minutes}:${seconds}`;\nmsg.time = ` ${fullformat} <br>&nbsp;&nbsp;${timeformat}`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 280,
        "wires": [
            [
                "eda38e94f3b040c3"
            ]
        ]
    },
    {
        "id": "eda38e94f3b040c3",
        "type": "ui_text",
        "z": "cadcef1c8b97565d",
        "group": "b8dde0e812c7fb5b",
        "order": 6,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "",
        "format": "<font size=6>{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 570,
        "y": 280,
        "wires": []
    },
    {
        "id": "acccdbbb8a549b9d",
        "type": "inject",
        "z": "cadcef1c8b97565d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "5dc45e228aa57a8a"
            ]
        ]
    },
    {
        "id": "b79a8eefe9085876",
        "type": "ui_media",
        "z": "cadcef1c8b97565d",
        "group": "b8dde0e812c7fb5b",
        "name": "",
        "width": 6,
        "height": 3,
        "order": 1,
        "category": "Image",
        "file": "Compony_Logo.png",
        "layout": "center",
        "showcontrols": true,
        "loop": true,
        "onstart": false,
        "scope": "local",
        "tooltip": "",
        "x": 810,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "061d8d545ed3e7c3",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "[AI01] Alloting Live Data",
        "func": "// create one variable and assign it the AI01 value;\n\nvar AI_01 = msg.payload.AI01;\n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\n// create object\nvar msg1 = {};\n\n// inject variable value to the payload of object\nmsg1.payload = formatNumber(AI_01);\n\nreturn msg1;\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 640,
        "wires": [
            [
                "ea588878d82cc1d8",
                "d252a157f0acf877"
            ]
        ]
    },
    {
        "id": "9019e3b114c0dc27",
        "type": "ui_chart",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI02 Chart",
        "group": "4fe2c62974bb15b6",
        "order": 10,
        "width": 6,
        "height": 4,
        "label": "AI02",
        "chartType": "line",
        "legend": "false",
        "xformat": "DD-MM-YYYY HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#be51e6",
            "#aec7e8",
            "#b47946",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1730,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "21fa519085759197",
        "type": "ui_chart",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI03 Chart",
        "group": "4fe2c62974bb15b6",
        "order": 11,
        "width": 6,
        "height": 4,
        "label": "AI03",
        "chartType": "line",
        "legend": "false",
        "xformat": "DD-MM-YYYY HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#f75026",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#86ee72",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1750,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "0608e6f6dff7fc05",
        "type": "ui_chart",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI08 Chart",
        "group": "4fe2c62974bb15b6",
        "order": 26,
        "width": 6,
        "height": 4,
        "label": "AI08",
        "chartType": "line",
        "legend": "false",
        "xformat": "DD-MM-YYYY HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#65d719",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1750,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "73b92bf5475504ef",
        "type": "ui_chart",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI04 Chart",
        "group": "4fe2c62974bb15b6",
        "order": 12,
        "width": 6,
        "height": 4,
        "label": "AI04",
        "chartType": "line",
        "legend": "false",
        "xformat": "DD-MM-YYYY HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2de6d1",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#86ee72",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1730,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "d43d7cc189600610",
        "type": "ui_chart",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI05 Chart",
        "group": "4fe2c62974bb15b6",
        "order": 23,
        "width": 6,
        "height": 4,
        "label": "AI05",
        "chartType": "line",
        "legend": "false",
        "xformat": "DD-MM-YYYY HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#4fdea0",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#86ee72",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1710,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "98039dfcc2634192",
        "type": "ui_chart",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI07 Chart",
        "group": "4fe2c62974bb15b6",
        "order": 25,
        "width": 6,
        "height": 4,
        "label": "AI07",
        "chartType": "line",
        "legend": "false",
        "xformat": "DD-MM-YYYY HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ebf82a",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#86ee72",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1750,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "c954b54511723ecf",
        "type": "ui_chart",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI06 Chart",
        "group": "4fe2c62974bb15b6",
        "order": 24,
        "width": 6,
        "height": 4,
        "label": "AI06",
        "chartType": "line",
        "legend": "false",
        "xformat": "DD-MM-YYYY HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#db1492",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#86ee72",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1750,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "70fb4845a5497fa2",
        "type": "mysql",
        "z": "12a45c02a0c64fe9",
        "g": "25c418f90e64c1ff",
        "mydb": "ea4292e54e9739dd",
        "name": "Database",
        "x": 1240,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "c2cd6bfb56f4fa8e",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI08AccessingDataFunction",
        "func": "\nvar AI_08 = msg.payload.AI08;\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\n// create object\nvar msg8 = {};\n\n// inject variable value to the payload of object\nmsg8.payload = formatNumber(AI_08);\n\n// give output as a msg8\nreturn msg8;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 2020,
        "wires": [
            [
                "0608e6f6dff7fc05",
                "afafe612342113d6"
            ]
        ]
    },
    {
        "id": "aef9da3af3fec4fc",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI07AccessingDataFunction",
        "func": "\nvar AI_07 = msg.payload.AI07;\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\n// create object\nvar msg7 = {};\n\n// inject variable value to the payload of object\nmsg7.payload =formatNumber(AI_07) ;\n\n// give output as a msg7\nreturn msg7;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1840,
        "wires": [
            [
                "98039dfcc2634192",
                "28a61903c3817220"
            ]
        ]
    },
    {
        "id": "fdfc94d02e19eac3",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI06AccessingDataFunction",
        "func": "\nvar AI_06 = msg.payload.AI06;\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\n// create object\nvar msg6 = {};\n\n// inject variable value to the payload of object\nmsg6.payload = formatNumber(AI_06);\n\n// give output as a msg6\nreturn msg6;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 1660,
        "wires": [
            [
                "c954b54511723ecf",
                "2be4992e8ac60f18"
            ]
        ]
    },
    {
        "id": "ef6265836635a9bc",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI05AccessingDataFunction",
        "func": "\nvar AI_05 = msg.payload.AI05;\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\n\n// create object\nvar msg5 = {};\n\n// inject variable value to the payload of object\nmsg5.payload = formatNumber(AI_05);\n\n// give output as a msg5\nreturn msg5;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1460,
        "wires": [
            [
                "d43d7cc189600610",
                "fb607e860751b71b"
            ]
        ]
    },
    {
        "id": "cdd8f52ae1ea6869",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI04AccessingDataFunction",
        "func": "\nvar AI_04 = msg.payload.AI04;\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\n\n// create object \nvar msg4 = {};\n\n// inject variable value to the payload of object\nmsg4.payload = formatNumber(AI_04);\n\n// give output as a msg4\nreturn msg4;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1260,
        "wires": [
            [
                "73b92bf5475504ef",
                "3ca2442b8bef5dab"
            ]
        ]
    },
    {
        "id": "bede445bb60c8b7f",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI03AccessingDataFunction",
        "func": "\nvar AI_03 = msg.payload.AI03;\n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\n// create object\nvar msg3 = {};\n\n// inject variable value to the payload of object\nmsg3.payload = formatNumber(AI_03);\n\nconsole.log(msg3.payload);\n// give output as a msg1\nreturn msg3;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 1000,
        "wires": [
            [
                "21fa519085759197",
                "88ffcaa741a4e4c1"
            ]
        ]
    },
    {
        "id": "cd9f97e06ce76eac",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI02AccessingDataFunction",
        "func": "\nvar AI_02 = msg.payload.AI02;\n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\n// create object\nvar msg2 = {};\n\n// inject variable value to the payload of object\nmsg2.payload = formatNumber(AI_02);\n\n// give output as a msg2\nreturn msg2;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 820,
        "wires": [
            [
                "9019e3b114c0dc27",
                "5b5bcae07bb5c02c"
            ]
        ]
    },
    {
        "id": "ea588878d82cc1d8",
        "type": "ui_chart",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI01 Chart",
        "group": "4fe2c62974bb15b6",
        "order": 9,
        "width": 6,
        "height": 4,
        "label": "AI01",
        "chartType": "line",
        "legend": "false",
        "xformat": "DD-MM-YYYY HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1710,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "547f8fb5673ee257",
        "type": "ui_button",
        "z": "12a45c02a0c64fe9",
        "g": "4d6b70619c6303f3",
        "name": "HomeButton",
        "group": "4fe2c62974bb15b6",
        "order": 5,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-home fa-3x",
        "payload": "MainDashboard",
        "payloadType": "flow",
        "topic": "topic",
        "topicType": "msg",
        "x": 770,
        "y": 140,
        "wires": [
            [
                "f29d6a6ea9b859c1"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "1314546855e36edc",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "4d6b70619c6303f3",
        "group": "4350a2cad5b88dd0",
        "order": 3,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "<font size=6>Analog Inputs",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 520,
        "y": 140,
        "wires": []
    },
    {
        "id": "f29d6a6ea9b859c1",
        "type": "change",
        "z": "12a45c02a0c64fe9",
        "g": "4d6b70619c6303f3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Dashboard\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 140,
        "wires": [
            [
                "76f98e9ff882eb6d"
            ]
        ]
    },
    {
        "id": "76f98e9ff882eb6d",
        "type": "ui_ui_control",
        "z": "12a45c02a0c64fe9",
        "g": "4d6b70619c6303f3",
        "name": "",
        "events": "all",
        "x": 1180,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "88ffcaa741a4e4c1",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "group": "4350a2cad5b88dd0",
        "order": 22,
        "width": 5,
        "height": 1,
        "name": "AI03 Parameter Text",
        "label": "<b>AI03</b>",
        "format": "&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1760,
        "y": 1000,
        "wires": []
    },
    {
        "id": "3ca2442b8bef5dab",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "group": "4350a2cad5b88dd0",
        "order": 26,
        "width": 5,
        "height": 1,
        "name": "AI04 Parameter Text",
        "label": "<b>AI04</b>",
        "format": "&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1740,
        "y": 1200,
        "wires": []
    },
    {
        "id": "fb607e860751b71b",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "group": "4350a2cad5b88dd0",
        "order": 30,
        "width": 5,
        "height": 1,
        "name": "AI05 Parameter Text",
        "label": "<b>AI05</b>",
        "format": "&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1720,
        "y": 1380,
        "wires": []
    },
    {
        "id": "2be4992e8ac60f18",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "group": "4350a2cad5b88dd0",
        "order": 35,
        "width": 5,
        "height": 1,
        "name": "AI06 Parameter Text",
        "label": "<b>AI06</b>",
        "format": "&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1780,
        "y": 1580,
        "wires": []
    },
    {
        "id": "28a61903c3817220",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "group": "4350a2cad5b88dd0",
        "order": 39,
        "width": 5,
        "height": 1,
        "name": "AI07 Parameter Text",
        "label": "<b>AI07</b>",
        "format": "&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1780,
        "y": 1760,
        "wires": []
    },
    {
        "id": "afafe612342113d6",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "group": "4350a2cad5b88dd0",
        "order": 43,
        "width": 5,
        "height": 1,
        "name": "AI08 Parameter Text",
        "label": "<b>AI08</b>",
        "format": "&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1740,
        "y": 1940,
        "wires": []
    },
    {
        "id": "d252a157f0acf877",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "group": "4350a2cad5b88dd0",
        "order": 14,
        "width": 5,
        "height": 1,
        "name": "AI01 Parameter Text",
        "label": "<b>AI01</b>",
        "format": "&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1720,
        "y": 660,
        "wires": []
    },
    {
        "id": "5b5bcae07bb5c02c",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "group": "4350a2cad5b88dd0",
        "order": 18,
        "width": 5,
        "height": 1,
        "name": "AI02 Parameter Text",
        "label": "<b>AI02</b>",
        "format": "&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1760,
        "y": 800,
        "wires": []
    },
    {
        "id": "77c1a42d99835aa9",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "cf0a6c41cc925f39",
        "group": "4fe2c62974bb15b6",
        "order": 35,
        "width": 26,
        "height": 1,
        "name": "blank bottom space text",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 350,
        "y": 1800,
        "wires": []
    },
    {
        "id": "0cd5246288a20af1",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "group": "4350a2cad5b88dd0",
        "order": 9,
        "width": 3,
        "height": 1,
        "name": "heading parameter",
        "label": "",
        "format": "<font size = 5>Parameter",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 350,
        "y": 1900,
        "wires": [],
        "info": "<h1>\r\nClick\r\n</h1>"
    },
    {
        "id": "6c55781474a430b8",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "group": "4350a2cad5b88dd0",
        "order": 10,
        "width": 2,
        "height": 1,
        "name": "heading Values",
        "label": "",
        "format": "<font size = 5>Values",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 580,
        "y": 1900,
        "wires": [],
        "info": "<h1>\r\nClick\r\n</h1>"
    },
    {
        "id": "8b51ea13339e44ac",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "group": "4350a2cad5b88dd0",
        "order": 7,
        "width": 3,
        "height": 1,
        "name": "headingTimeStamp",
        "label": "",
        "format": "<font size = 5>TimeStamp",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 130,
        "y": 1900,
        "wires": [],
        "info": "<h1>\r\nClick\r\n</h1>"
    },
    {
        "id": "5c13f05351446d8e",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "name": "Alloting data to Packets",
        "func": "if(msg.payload.AI01){\n\n    var date = new Date();\n    var year = date.getFullYear();\n    var month = date.getMonth() + 1;\n    var day = date.getDate();\n    var hours = date.getHours().toString().padStart(2, '0');\n    var minutes = date.getMinutes().toString().padStart(2, '0');\n    var seconds = date.getSeconds().toString().padStart(2, '0');\n\n    var fullformat = `${day.toString().padStart(2, '0')}-${month.toString().padStart(2, '0')}-${year}`;\n    var timeformat = `${hours}-${minutes}-${seconds}`;\n    msg.time = ` ${fullformat} &nbsp; &nbsp; ${timeformat}`;\nreturn msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 660,
        "wires": [
            [
                "061d8d545ed3e7c3",
                "cd9f97e06ce76eac",
                "bede445bb60c8b7f",
                "cdd8f52ae1ea6869",
                "ef6265836635a9bc",
                "fdfc94d02e19eac3",
                "aef9da3af3fec4fc",
                "c2cd6bfb56f4fa8e",
                "61005d7208d60b2b",
                "e969b6bb6e6bb3b5",
                "6aa6b7eb4072e74a",
                "2880a2b99922b161",
                "e805f2d90cfa3357",
                "2fa8d2ae10d3c790",
                "7da65b4a84d5a00d",
                "d01d3c04d587c467",
                "a105a45676f7a675"
            ]
        ]
    },
    {
        "id": "eb9a9184e98eef14",
        "type": "mqtt in",
        "z": "12a45c02a0c64fe9",
        "name": "Receiving Data From Mqtt",
        "topic": "INS/MBIOT_ETH/09995/UTILITY",
        "qos": "0",
        "datatype": "json",
        "broker": "665f18f8041514a1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 620,
        "wires": [
            [
                "5c13f05351446d8e",
                "324c594592b32e57"
            ]
        ]
    },
    {
        "id": "61005d7208d60b2b",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "8e38933a15a2eb57",
        "group": "4350a2cad5b88dd0",
        "order": 13,
        "width": 5,
        "height": 1,
        "name": "AI01 Time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1620,
        "y": 380,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "e969b6bb6e6bb3b5",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "8e38933a15a2eb57",
        "group": "4350a2cad5b88dd0",
        "order": 17,
        "width": 5,
        "height": 1,
        "name": "AI02 Time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1820,
        "y": 380,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "6aa6b7eb4072e74a",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "8e38933a15a2eb57",
        "group": "4350a2cad5b88dd0",
        "order": 21,
        "width": 5,
        "height": 1,
        "name": "AI03 Time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1620,
        "y": 420,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "2880a2b99922b161",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "8e38933a15a2eb57",
        "group": "4350a2cad5b88dd0",
        "order": 25,
        "width": 5,
        "height": 1,
        "name": "AI04 Time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1820,
        "y": 420,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "e805f2d90cfa3357",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "8e38933a15a2eb57",
        "group": "4350a2cad5b88dd0",
        "order": 29,
        "width": 5,
        "height": 1,
        "name": "AI05 Time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1620,
        "y": 460,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "2fa8d2ae10d3c790",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "8e38933a15a2eb57",
        "group": "4350a2cad5b88dd0",
        "order": 34,
        "width": 5,
        "height": 1,
        "name": "AI06 Time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1820,
        "y": 460,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "7da65b4a84d5a00d",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "8e38933a15a2eb57",
        "group": "4350a2cad5b88dd0",
        "order": 38,
        "width": 5,
        "height": 1,
        "name": "AI07 Time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1620,
        "y": 500,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "d01d3c04d587c467",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "8e38933a15a2eb57",
        "group": "4350a2cad5b88dd0",
        "order": 42,
        "width": 5,
        "height": 1,
        "name": "AI08 Time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1820,
        "y": 500,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "a105a45676f7a675",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "cf0a6c41cc925f39",
        "group": "4350a2cad5b88dd0",
        "order": 46,
        "width": 0,
        "height": 0,
        "name": "Blank space",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 130,
        "y": 1800,
        "wires": []
    },
    {
        "id": "324c594592b32e57",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "25c418f90e64c1ff",
        "name": "Storing Data to DB",
        "func": "\nvar deviceid    = msg.payload.DEVID ;\nvar location    = msg.payload.LOC ;\nvar sno         = msg.payload.SNO ;\nvar comm        = msg.payload.COMM ;\nvar inst        = msg.payload.INST ;\n\nif(msg.payload.AI01){\n    var iotype = 'AI';\n}\n\nelse if(msg.payload.DI01){\n    var iotype = 'DI';\n}\n\nelse if(msg.payload.DO01){\n    var iotype = 'DO';\n}\n\nelse{\n    var iotype = 'E';\n}\n\nvar rawpacket = JSON.stringify(msg.payload);\n\nmsg.topic = `insert into iotdevicedata (DEVID , LOC , SNO , COMM , INST,  RAWPACKETS, IOTYPE ) values ('${deviceid}', '${location}', '${sno}', '${comm}', '${inst}', '${rawpacket}', '${iotype}');`\n\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 320,
        "wires": [
            [
                "70fb4845a5497fa2"
            ]
        ]
    },
    {
        "id": "ac46f2a4edb1817e",
        "type": "ui_button",
        "z": "12a45c02a0c64fe9",
        "g": "4d6b70619c6303f3",
        "name": "Analog Input Reports Button",
        "group": "4fe2c62974bb15b6",
        "order": 4,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-solid fa-table fa-3x",
        "payload": "MainDashboard",
        "payloadType": "flow",
        "topic": "topic",
        "topicType": "msg",
        "x": 820,
        "y": 80,
        "wires": [
            [
                "0fda901ebb2bc40c"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "0fda901ebb2bc40c",
        "type": "change",
        "z": "12a45c02a0c64fe9",
        "g": "4d6b70619c6303f3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Analog Input Reports\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 80,
        "wires": [
            [
                "76f98e9ff882eb6d"
            ]
        ]
    },
    {
        "id": "587c323d547b2707",
        "type": "ui_button",
        "z": "12a45c02a0c64fe9",
        "g": "4d6b70619c6303f3",
        "name": "Analog Input Charts",
        "group": "4fe2c62974bb15b6",
        "order": 3,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-bar-chart fa-3x",
        "payload": "MainDashboard",
        "payloadType": "flow",
        "topic": "topic",
        "topicType": "msg",
        "x": 800,
        "y": 180,
        "wires": [
            [
                "1d0f89a664bc7ee3"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "1d0f89a664bc7ee3",
        "type": "change",
        "z": "12a45c02a0c64fe9",
        "g": "4d6b70619c6303f3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Analog Input Charts Reports\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 180,
        "wires": [
            [
                "76f98e9ff882eb6d"
            ]
        ]
    },
    {
        "id": "a9b4dbd94bf1414d",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "[AI01] Showing recent data to chart",
        "func": "\n\nvar data = msg.payload;\nvar _ai01History = [];\nfor (let i = 0; i < data.length; i++){\n\n    let _aiPacket = {\n        x      : data[i].TIMESTAMP,  \n        y      : data[i].RAWPACKETS.AI01\n    }\n\n \n\n  // Example usage\n  const dateTimeString = _aiPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n  \n  _aiPacket.x = milliseconds;\n\n    _ai01History.push(_aiPacket);\n}\n\n function convertDateTimeToMillisec(dateTimeString) {\n    // Parse the date and time string\n    const dateObject = new Date(dateTimeString);\n\n    // Get the milliseconds since epoch\n    const milliseconds = dateObject.getTime();\n\n    return milliseconds;\n  }\n\nvar msg1 = {};\nmsg1.payload = [{\n    \"series\": [\"\"],\n    \"data\": [\n        _ai01History\n    ],\n    \"labels\": [\"\"]\n}]\n\nreturn msg1;\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 600,
        "wires": [
            [
                "ea588878d82cc1d8"
            ]
        ]
    },
    {
        "id": "ffb1f17cabcb2625",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "name": "AccessingDataFromDB",
        "func": "msg.topic = \"select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'AI' order by TIMESTAMP DESC LIMIT 10\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 520,
        "wires": [
            [
                "166c98dd480a6a8d"
            ]
        ]
    },
    {
        "id": "b70b9c2a749718f3",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "[AI02] Showing recent data to chart",
        "func": "\n\nvar data = msg.payload;\nvar _ai02History = [];\nfor (let i = 0; i < data.length; i++){\n\n    let _aiPacket = {\n        x      : data[i].TIMESTAMP,  \n        y      : data[i].RAWPACKETS.AI02\n    }\n\n \n\n  // Example usage\n  const dateTimeString = _aiPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n  \n  _aiPacket.x = milliseconds;\n\n    _ai02History.push(_aiPacket);\n}\n\n function convertDateTimeToMillisec(dateTimeString) {\n    // Parse the date and time string\n    const dateObject = new Date(dateTimeString);\n\n    // Get the milliseconds since epoch\n    const milliseconds = dateObject.getTime();\n\n    return milliseconds;\n  }\n\nvar msg2 = {};\nmsg2.payload = [{\n    \"series\": [\"\"],\n    \"data\": [\n        _ai02History\n    ],\n    \"labels\": [\"\"]\n}]\n\nreturn msg2;\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 760,
        "wires": [
            [
                "9019e3b114c0dc27"
            ]
        ]
    },
    {
        "id": "765a783a95368500",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "[AI03] Showing recent data to chart",
        "func": "\n\nvar data = msg.payload;\nvar _ai03History = [];\nfor (let i = 0; i < data.length; i++) {\n\n  let _aiPacket = {\n    x: data[i].TIMESTAMP,\n    y: data[i].RAWPACKETS.AI01\n  }\n\n\n\n  // Example usage\n  const dateTimeString = _aiPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n\n  _aiPacket.x = milliseconds;\n\n  _ai03History.push(_aiPacket);\n}\n\nfunction convertDateTimeToMillisec(dateTimeString) {\n  // Parse the date and time string\n  const dateObject = new Date(dateTimeString);\n\n  // Get the milliseconds since epoch\n  const milliseconds = dateObject.getTime();\n\n  return milliseconds;\n}\n\nvar msg3 = {};\nmsg3.payload = [{\n  \"series\": [\"\"],\n  \"data\": [\n    _ai03History\n  ],\n  \"labels\": [\"\"]\n}]\n\nreturn msg3;\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 960,
        "wires": [
            [
                "21fa519085759197"
            ]
        ]
    },
    {
        "id": "0867713bee0e7066",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "[AI04] Showing recent data to chart",
        "func": "\n\nvar data = msg.payload;\nvar _ai04History = [];\nfor (let i = 0; i < data.length; i++) {\n\n  let _aiPacket = {\n    x: data[i].TIMESTAMP,\n    y: data[i].RAWPACKETS.AI01\n  }\n\n\n\n  // Example usage\n  const dateTimeString = _aiPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n\n  _aiPacket.x = milliseconds;\n\n  _ai04History.push(_aiPacket);\n}\n\nfunction convertDateTimeToMillisec(dateTimeString) {\n  // Parse the date and time string\n  const dateObject = new Date(dateTimeString);\n\n  // Get the milliseconds since epoch\n  const milliseconds = dateObject.getTime();\n\n  return milliseconds;\n}\n\nvar msg4 = {};\nmsg4.payload = [{\n  \"series\": [\"\"],\n  \"data\": [\n    _ai04History\n  ],\n  \"labels\": [\"\"]\n}]\n\nreturn msg4;\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1200,
        "wires": [
            [
                "73b92bf5475504ef"
            ]
        ]
    },
    {
        "id": "3975b02c1b06100d",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "[AI05] Showing recent data to chart",
        "func": "\n\nvar data = msg.payload;\nvar _ai05History = [];\nfor (let i = 0; i < data.length; i++){\n\n    let _aiPacket = {\n        x      : data[i].TIMESTAMP,  \n        y      : data[i].RAWPACKETS.AI01\n    }\n\n \n\n  // Example usage\n  const dateTimeString = _aiPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n  \n  _aiPacket.x = milliseconds;\n\n    _ai05History.push(_aiPacket);\n}\n\n function convertDateTimeToMillisec(dateTimeString) {\n    // Parse the date and time string\n    const dateObject = new Date(dateTimeString);\n\n    // Get the milliseconds since epoch\n    const milliseconds = dateObject.getTime();\n\n    return milliseconds;\n  }\n\nvar msg5 = {};\nmsg5.payload = [{\n    \"series\": [\"\"],\n    \"data\": [\n        _ai05History\n    ],\n    \"labels\": [\"\"]\n}]\n\nreturn msg5;\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1400,
        "wires": [
            [
                "d43d7cc189600610"
            ]
        ]
    },
    {
        "id": "c4df9c4d02d26123",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "[AI06] Showing recent data to chart",
        "func": "\n\nvar data = msg.payload;\nvar _ai07History = [];\nfor (let i = 0; i < data.length; i++){\n\n    let _aiPacket = {\n        x      : data[i].TIMESTAMP,  \n        y      : data[i].RAWPACKETS.AI01\n    }\n\n \n\n  // Example usage\n  const dateTimeString = _aiPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n  \n  _aiPacket.x = milliseconds;\n\n    _ai07History.push(_aiPacket);\n}\n\n function convertDateTimeToMillisec(dateTimeString) {\n    // Parse the date and time string\n    const dateObject = new Date(dateTimeString);\n\n    // Get the milliseconds since epoch\n    const milliseconds = dateObject.getTime();\n\n    return milliseconds;\n  }\n\nvar msg7 = {};\nmsg7.payload = [{\n    \"series\": [\"\"],\n    \"data\": [\n        _ai07History\n    ],\n    \"labels\": [\"\"]\n}]\n\nreturn msg7;\n\n\n\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1580,
        "wires": [
            [
                "c954b54511723ecf"
            ]
        ]
    },
    {
        "id": "5fa8b7c410e8d959",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "[AI07] Showing recent data to chart",
        "func": "\n\nvar data = msg.payload;\nvar _ai07History = [];\nfor (let i = 0; i < data.length; i++){\n\n    let _aiPacket = {\n        x      : data[i].TIMESTAMP,  \n        y      : data[i].RAWPACKETS.AI01\n    }\n\n \n\n  // Example usage\n  const dateTimeString = _aiPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n  \n  _aiPacket.x = milliseconds;\n\n    _ai07History.push(_aiPacket);\n}\n\n function convertDateTimeToMillisec(dateTimeString) {\n    // Parse the date and time string\n    const dateObject = new Date(dateTimeString);\n\n    // Get the milliseconds since epoch\n    const milliseconds = dateObject.getTime();\n\n    return milliseconds;\n  }\n\nvar msg7 = {};\nmsg7.payload = [{\n    \"series\": [\"\"],\n    \"data\": [\n        _ai07History\n    ],\n    \"labels\": [\"\"]\n}]\n\nreturn msg7;\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1740,
        "wires": [
            [
                "98039dfcc2634192"
            ]
        ]
    },
    {
        "id": "3663790e04641f0d",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "[AI08] Showing recent data to chart",
        "func": "\n\nvar data = msg.payload;\nvar _ai08History = [];\nfor (let i = 0; i < data.length; i++){\n\n    let _aiPacket = {\n        x      : data[i].TIMESTAMP,  \n        y      : data[i].RAWPACKETS.AI01\n    }\n\n \n\n  // Example usage\n  const dateTimeString = _aiPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n  \n  _aiPacket.x = milliseconds;\n\n    _ai08History.push(_aiPacket);\n}\n\n function convertDateTimeToMillisec(dateTimeString) {\n    // Parse the date and time string\n    const dateObject = new Date(dateTimeString);\n\n    // Get the milliseconds since epoch\n    const milliseconds = dateObject.getTime();\n\n    return milliseconds;\n  }\n\nvar msg8 = {};\nmsg8.payload = [{\n    \"series\": [\"\"],\n    \"data\": [\n        _ai08History\n    ],\n    \"labels\": [\"\"]\n}]\n\nreturn msg8;\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1940,
        "wires": [
            [
                "0608e6f6dff7fc05"
            ]
        ]
    },
    {
        "id": "166c98dd480a6a8d",
        "type": "mysql",
        "z": "12a45c02a0c64fe9",
        "mydb": "ea4292e54e9739dd",
        "name": "",
        "x": 700,
        "y": 520,
        "wires": [
            [
                "a9b4dbd94bf1414d",
                "b70b9c2a749718f3",
                "765a783a95368500",
                "0867713bee0e7066",
                "3975b02c1b06100d",
                "c4df9c4d02d26123",
                "5fa8b7c410e8d959",
                "3663790e04641f0d"
            ]
        ]
    },
    {
        "id": "eaad29ba1eae6a16",
        "type": "inject",
        "z": "12a45c02a0c64fe9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.4",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 520,
        "wires": [
            [
                "ffb1f17cabcb2625"
            ]
        ]
    },
    {
        "id": "b7624f17a7545716",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "name": "AccessingDataFromDB",
        "func": "msg.topic = \"select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'AI' order by TIMESTAMP DESC LIMIT 1\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 440,
        "wires": [
            [
                "2ef2cd5552dc8d7f"
            ]
        ]
    },
    {
        "id": "2ef2cd5552dc8d7f",
        "type": "mysql",
        "z": "12a45c02a0c64fe9",
        "mydb": "ea4292e54e9739dd",
        "name": "",
        "x": 740,
        "y": 440,
        "wires": [
            [
                "2c60864995773eb9",
                "5df2549507e00533",
                "c70754098cb89c7c",
                "d1a84d53759271ac",
                "9388ed1dc6a71a58",
                "db608b7a1325727f",
                "ef6510b08f20f565",
                "68c520037bc6c667",
                "c2073f100c89491a"
            ]
        ]
    },
    {
        "id": "44ac4c3e23dc067d",
        "type": "inject",
        "z": "12a45c02a0c64fe9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.3",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 440,
        "wires": [
            [
                "b7624f17a7545716"
            ]
        ]
    },
    {
        "id": "2c60864995773eb9",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "[AI01] Recent Data Sending to the text",
        "func": "\nvar data = msg.payload;\nvar AI_01 =  data[0].RAWPACKETS.AI01; //msg.payload.AI01;\n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\n// create object\nvar msg1 = {};\n\n// inject variable value to the payload of object\nmsg1.payload = formatNumber(AI_01);\n\nreturn msg1;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 580,
        "wires": [
            [
                "d252a157f0acf877"
            ]
        ]
    },
    {
        "id": "5df2549507e00533",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "name": "function 82",
        "func": "\nvar data = msg.payload;\nvar AI_01 = data[0].TIMESTAMP;\n\nvar date = new Date(AI_01);\nvar year = date.getFullYear();\nvar month = date.getMonth() + 1;\nvar day = date.getDate();\nvar hours = date.getHours().toString().padStart(2, '0');\nvar minutes = date.getMinutes().toString().padStart(2, '0');\nvar seconds = date.getSeconds().toString().padStart(2, '0');\n\nvar fullformat = `${day.toString().padStart(2, '0')}-${month.toString().padStart(2, '0')}-${year}`;\nvar timeformat = `${hours}:${minutes}:${seconds}`;\n\nmsg.time = ` ${fullformat} &nbsp; &nbsp; ${timeformat}`;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 440,
        "wires": [
            [
                "61005d7208d60b2b",
                "6aa6b7eb4072e74a",
                "e805f2d90cfa3357",
                "7da65b4a84d5a00d",
                "e969b6bb6e6bb3b5",
                "2880a2b99922b161",
                "2fa8d2ae10d3c790",
                "d01d3c04d587c467"
            ]
        ]
    },
    {
        "id": "c70754098cb89c7c",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "[AI02] Recent Data Sending to the text",
        "func": "\nvar data = msg.payload;\nvar AI_02 =  data[0].RAWPACKETS.AI02;\n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\n// create object\nvar msg1 = {};\n\n// inject variable value to the payload of object\nmsg1.payload = formatNumber(AI_02);\n\nreturn msg1;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 740,
        "wires": [
            [
                "5b5bcae07bb5c02c"
            ]
        ]
    },
    {
        "id": "d1a84d53759271ac",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "[AI03] Recent Data Sending to the text",
        "func": "\nvar data = msg.payload;\nvar AI_03 =  data[0].RAWPACKETS.AI03;\n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\n// create object\nvar msg1 = {};\n\n// inject variable value to the payload of object\nmsg1.payload = formatNumber(AI_03);\n\nreturn msg1;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 920,
        "wires": [
            [
                "88ffcaa741a4e4c1"
            ]
        ]
    },
    {
        "id": "9388ed1dc6a71a58",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "[AI04] Recent Data Sending to the text",
        "func": "\nvar data = msg.payload;\nvar AI_04 =  data[0].RAWPACKETS.AI04;\n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\n// create object\nvar msg1 = {};\n\n// inject variable value to the payload of object\nmsg1.payload = formatNumber(AI_04);\n\nreturn msg1;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 1180,
        "wires": [
            [
                "3ca2442b8bef5dab"
            ]
        ]
    },
    {
        "id": "db608b7a1325727f",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "[AI05] Recent Data Sending to the text",
        "func": "\nvar data = msg.payload;\nvar AI_05 =  data[0].RAWPACKETS.AI05;\n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\n// create object\nvar msg1 = {};\n\n// inject variable value to the payload of object\nmsg1.payload = formatNumber(AI_05);\n\nreturn msg1;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 1360,
        "wires": [
            [
                "fb607e860751b71b"
            ]
        ]
    },
    {
        "id": "ef6510b08f20f565",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "[AI06] Recent Data Sending to the text",
        "func": "\nvar data = msg.payload;\nvar AI_06 =  data[0].RAWPACKETS.AI06;\n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\n// create object\nvar msg1 = {};\n\n// inject variable value to the payload of object\nmsg1.payload = formatNumber(AI_06);\n\nreturn msg1;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1600,
        "wires": [
            [
                "2be4992e8ac60f18"
            ]
        ]
    },
    {
        "id": "68c520037bc6c667",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "[AI07] Recent Data Sending to the text",
        "func": "\nvar data = msg.payload;\nvar AI_07 =  data[0].RAWPACKETS.AI07;\n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\n// create object\nvar msg1 = {};\n\n// inject variable value to the payload of object\nmsg1.payload = formatNumber(AI_07);\n\nreturn msg1;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 1760,
        "wires": [
            [
                "28a61903c3817220"
            ]
        ]
    },
    {
        "id": "c2073f100c89491a",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "[AI08] Recent Data Sending to the text",
        "func": "\nvar data = msg.payload;\nvar AI_08 =  data[0].RAWPACKETS.AI08;\n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\n// create object\nvar msg1 = {};\n\n// inject variable value to the payload of object\nmsg1.payload = formatNumber(AI_08);\n\nreturn msg1;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 1960,
        "wires": [
            [
                "afafe612342113d6"
            ]
        ]
    },
    {
        "id": "a119e9858c6345e0",
        "type": "ui_template",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "name": "DI06 Indicator",
        "order": 42,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator6\">\n</div>\n<style>\n#indicator6{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};  \n    margin-left:40px;\n    margin-top: 10px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1480,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "c8cea4e4c9c4467d",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Alloting Data to DI10 and Indicator",
        "func": "if(msg.payload.DI10==1){\n    msg.payload =\"green\";\n    return msg;\n\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1400,
        "wires": [
            [
                "7a4ce5b3ec6ddf9c",
                "4303fdfe75a1c546"
            ]
        ]
    },
    {
        "id": "2830975fe6fce819",
        "type": "mqtt in",
        "z": "7df8dcd3568b0c28",
        "name": "Receiving Data From Mqtt",
        "topic": "INS/MBIOT_ETH/09995/UTILITY",
        "qos": "0",
        "datatype": "json",
        "broker": "665f18f8041514a1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 720,
        "wires": [
            [
                "f14e55d0d1f28cd9"
            ]
        ]
    },
    {
        "id": "f14e55d0d1f28cd9",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Allotting Values to Digital Tags",
        "func": "if(msg.payload.DI01){\nvar date = new Date();\nvar year = date.getFullYear();\nvar month = date.getMonth() + 1;\nvar day = date.getDate();\nvar hours = date.getHours().toString().padStart(2, '0');\nvar minutes = date.getMinutes().toString().padStart(2, '0');\nvar seconds = date.getSeconds().toString().padStart(2, '0');\n\nvar fullformat = `${day.toString().padStart(2, '0')}-${month.toString().padStart(2, '0')}-${year}`;\nvar timeformat = `${hours} : ${minutes} : ${seconds}`;\nmsg.time =` ${fullformat} &nbsp; &nbsp; ${timeformat}`;\n\n    return msg;\n    \n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 900,
        "wires": [
            [
                "7659e1269063e2b0",
                "3186b302aad8b0c0",
                "6b7e7b96192cd2f3",
                "86be48b4287d8995",
                "9314959d82b4a773",
                "0bfe6c11008c334a",
                "997781a1a67454e4",
                "771dde2b2196e71c",
                "c8cea4e4c9c4467d",
                "d8e5f7c8d2c1effa",
                "bbab63dfdf671895",
                "9ad33431d73667c0",
                "6731c490c36e6a27",
                "335a313373625858",
                "285f93ac69df70b0",
                "dab2ac9aabed3d03",
                "5d4eb560dda53e1f",
                "2f03da309d6c62f0",
                "0156988b62d0e36e",
                "694f909517e0333b",
                "a589a98fabe7738c",
                "e2118cf978c77976",
                "954c4c34e70dfde4",
                "d0989e75bbd9d3f1"
            ]
        ]
    },
    {
        "id": "7659e1269063e2b0",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Alloting Data to DI01 and Indicator",
        "func": "if(msg.payload.DI01==1){\n    msg.payload =\"green\";\n    return msg;\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 860,
        "wires": [
            [
                "20c2b6f25377fe89",
                "61f9d8d7ebe27f4e"
            ]
        ]
    },
    {
        "id": "3186b302aad8b0c0",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Alloting Data to DI02 and Indicator",
        "func": "if(msg.payload.DI02==1){\n    msg.payload =\"green\";\n    return msg;\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n}\n// return msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 920,
        "wires": [
            [
                "a2ce6d3c88b6f715",
                "bd89a4845a789a72"
            ]
        ]
    },
    {
        "id": "6b7e7b96192cd2f3",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Alloting Data to DI03 and Indicator",
        "func": "if(msg.payload.DI03==1){\n    msg.payload =\"green\";\n    return msg;\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 980,
        "wires": [
            [
                "710cc2e24facc4d2",
                "707995086c8b8681"
            ]
        ]
    },
    {
        "id": "86be48b4287d8995",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Alloting Data to DI04 and Indicator",
        "func": "if(msg.payload.DI04==1){\n    msg.payload =\"green\";\n    return msg;\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1040,
        "wires": [
            [
                "b32dc827e9b440da",
                "64877707b8595d2e"
            ]
        ]
    },
    {
        "id": "9314959d82b4a773",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Alloting Data to DI05 and Indicator",
        "func": "if(msg.payload.DI05==1){\n    msg.payload =\"green\";\n    return msg;\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1100,
        "wires": [
            [
                "cce8d35e40d15609",
                "8502dd5674427bf3"
            ]
        ]
    },
    {
        "id": "9ad33431d73667c0",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Alloting Data to DI06 and Indicator",
        "func": "if(msg.payload.DI06==1){\n    msg.payload =\"green\";\n    return msg;\n\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1160,
        "wires": [
            [
                "ecd2304409f85f27",
                "a119e9858c6345e0"
            ]
        ]
    },
    {
        "id": "0bfe6c11008c334a",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Alloting Data to DI07 and Indicator",
        "func": "if(msg.payload.DI07==1){\n    msg.payload =\"green\";\n    return msg;\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1220,
        "wires": [
            [
                "c296438c0e80239b",
                "6e7b70ccaf786868"
            ]
        ]
    },
    {
        "id": "997781a1a67454e4",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Alloting Data to DI08 and Indicator",
        "func": "if(msg.payload.DI08==1){\n    msg.payload =\"green\";\n    return msg;\n\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1280,
        "wires": [
            [
                "861cfd63e2bf2ae1",
                "2514d17aabb63b4a"
            ]
        ]
    },
    {
        "id": "771dde2b2196e71c",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Alloting Data to DI09 and Indicator",
        "func": "if(msg.payload.DI09==1){\n    msg.payload =\"green\";\n    return msg;\n\n\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1340,
        "wires": [
            [
                "3f2e7bf6ca8a1677",
                "76486b38b4b1c9d8"
            ]
        ]
    },
    {
        "id": "d8e5f7c8d2c1effa",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Alloting Data to DI11 and Indicator",
        "func": "if(msg.payload.DI11==1){\n    msg.payload =\"green\";\n    return msg;\n\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1460,
        "wires": [
            [
                "5d23fb51178b6fdd",
                "653a7bd1c7740adb"
            ]
        ]
    },
    {
        "id": "bbab63dfdf671895",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Alloting Data to DI12 and Indicator",
        "func": "if(msg.payload.DI12==1){\n    msg.payload =\"green\";\n    return msg;\n\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1520,
        "wires": [
            [
                "d1b37120e86ed1a5",
                "5de09d41dafc42cf"
            ]
        ]
    },
    {
        "id": "61f9d8d7ebe27f4e",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "order": 16,
        "width": 3,
        "height": 1,
        "name": "DI01 Label",
        "label": "<b>DI01</b>     ",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1210,
        "y": 860,
        "wires": []
    },
    {
        "id": "20c2b6f25377fe89",
        "type": "ui_template",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "name": "DI01 Indicator",
        "order": 17,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator1\">\n</div>\n<style>\n#indicator1{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};  \n    text-align:center; \n    margin-left:40px;\n    margin-top: 11px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1480,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "a2ce6d3c88b6f715",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "order": 21,
        "width": 3,
        "height": 1,
        "name": "DI02 Label",
        "label": "<b>DI02</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1210,
        "y": 920,
        "wires": []
    },
    {
        "id": "bd89a4845a789a72",
        "type": "ui_template",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "name": "DI02 Indicator",
        "order": 22,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator2\">\n</div>\n<style>\n#indicator2{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};\n    margin-left:40px;\n    margin-top: 10px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1480,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "710cc2e24facc4d2",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "order": 26,
        "width": 3,
        "height": 1,
        "name": "DI03 Label",
        "label": "<b>DI03</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1210,
        "y": 980,
        "wires": []
    },
    {
        "id": "707995086c8b8681",
        "type": "ui_template",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "name": "DI03 Indicator",
        "order": 27,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator3\">\n</div>\n<style>\n#indicator3{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}}; \n    margin-left:40px;\n    margin-top: 10px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1480,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "b32dc827e9b440da",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "order": 31,
        "width": 3,
        "height": 1,
        "name": "DI04 Label",
        "label": "<b>DI04</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1210,
        "y": 1040,
        "wires": []
    },
    {
        "id": "64877707b8595d2e",
        "type": "ui_template",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "name": "DI04 Indicator",
        "order": 32,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator4\">\n</div>\n<style>\n#indicator4{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};\n    margin-left:40px;\n    margin-top: 10px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1480,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "cce8d35e40d15609",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "order": 36,
        "width": 3,
        "height": 1,
        "name": "DI05 Label",
        "label": "<b>DI05</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1210,
        "y": 1100,
        "wires": []
    },
    {
        "id": "8502dd5674427bf3",
        "type": "ui_template",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "name": "DI05 Indicator",
        "order": 37,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator5\">\n</div>\n<style>\n#indicator5{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};\n    margin-left:40px;\n    margin-top: 10px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1480,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "ecd2304409f85f27",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "order": 41,
        "width": 3,
        "height": 1,
        "name": "DI06 Label",
        "label": "<b>DI06</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1210,
        "y": 1160,
        "wires": []
    },
    {
        "id": "c296438c0e80239b",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "order": 46,
        "width": 3,
        "height": 1,
        "name": "DI07 Label",
        "label": "<b>DI07</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1210,
        "y": 1220,
        "wires": []
    },
    {
        "id": "6e7b70ccaf786868",
        "type": "ui_template",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "name": "DI07 Indicator",
        "order": 47,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator7\">\n</div>\n<style>\n#indicator7{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};\n    margin-left:40px;\n    margin-top: 10px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1480,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "861cfd63e2bf2ae1",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "order": 51,
        "width": 3,
        "height": 1,
        "name": "DI08 Label",
        "label": "<b>DI08</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1210,
        "y": 1280,
        "wires": []
    },
    {
        "id": "2514d17aabb63b4a",
        "type": "ui_template",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "name": "DI08 Indicator",
        "order": 52,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator8\">\n</div>\n<style>\n#indicator8{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};\n    margin-left:40px;\n    margin-top: 10px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1480,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "3f2e7bf6ca8a1677",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "order": 56,
        "width": 3,
        "height": 1,
        "name": "DI09 Label",
        "label": "<b>DI09</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1210,
        "y": 1340,
        "wires": []
    },
    {
        "id": "76486b38b4b1c9d8",
        "type": "ui_template",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "name": "DI09 Indicator",
        "order": 57,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator9\">\n</div>\n<style>\n#indicator9{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}}; \n    margin-left:40px;\n    margin-top: 10px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1480,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "7a4ce5b3ec6ddf9c",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "order": 61,
        "width": 3,
        "height": 1,
        "name": "DI10 Label",
        "label": "<b>DI10</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1210,
        "y": 1400,
        "wires": []
    },
    {
        "id": "4303fdfe75a1c546",
        "type": "ui_template",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "name": "DI10 Indicator",
        "order": 62,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator10\">\n</div>\n<style>\n#indicator10{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}}; \n    margin-left:40px;\n    margin-top: 10px;\n\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1480,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "5d23fb51178b6fdd",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "order": 66,
        "width": 3,
        "height": 1,
        "name": "DI11 Label",
        "label": "<b>DI11</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1210,
        "y": 1460,
        "wires": []
    },
    {
        "id": "653a7bd1c7740adb",
        "type": "ui_template",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "name": "DI11 Indicator",
        "order": 67,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator11\">\n</div>\n<style>\n#indicator11{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};\n    margin-left:40px;\n    margin-top: 10px;\n\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1480,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "d1b37120e86ed1a5",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "order": 71,
        "width": 3,
        "height": 1,
        "name": "DI12 Label",
        "label": "<b>DI12</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1210,
        "y": 1520,
        "wires": []
    },
    {
        "id": "5de09d41dafc42cf",
        "type": "ui_template",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "name": "DI12 Indicator",
        "order": 72,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator12\">\n</div>\n<style>\n#indicator12{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};\n    margin-left:40px;\n    margin-top: 10px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1480,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "a12c05b9325a7ac0",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "587d35133a0589f4",
        "group": "0f5b01afb2f3a18c",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "Digital Inputs",
        "label": "<font size=6>Digital Inputs",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 590,
        "y": 120,
        "wires": []
    },
    {
        "id": "46047c19e248360c",
        "type": "ui_button",
        "z": "7df8dcd3568b0c28",
        "g": "587d35133a0589f4",
        "name": "HomeButton",
        "group": "0f5b01afb2f3a18c",
        "order": 4,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-home fa-3x",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1070,
        "y": 280,
        "wires": [
            [
                "23736984e18eb9a0"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "7cc497f15984b8f1",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "587d35133a0589f4",
        "group": "0f5b01afb2f3a18c",
        "order": 12,
        "width": 2,
        "height": 1,
        "name": "Status",
        "label": "",
        "format": "<font size = 5>Status",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 730,
        "y": 280,
        "wires": []
    },
    {
        "id": "544af6e302726b84",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "587d35133a0589f4",
        "group": "0f5b01afb2f3a18c",
        "order": 10,
        "width": 3,
        "height": 1,
        "name": "Parameter",
        "label": "",
        "format": "<font size = 5>Parameters",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 590,
        "y": 280,
        "wires": [],
        "info": "<h1>\r\nClick\r\n</h1>"
    },
    {
        "id": "23736984e18eb9a0",
        "type": "change",
        "z": "7df8dcd3568b0c28",
        "g": "587d35133a0589f4",
        "name": "Load Home Dashboard",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Dashboard\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1370,
        "y": 280,
        "wires": [
            [
                "1f4594762b3891b0"
            ]
        ]
    },
    {
        "id": "1f4594762b3891b0",
        "type": "ui_ui_control",
        "z": "7df8dcd3568b0c28",
        "g": "587d35133a0589f4",
        "name": "",
        "events": "all",
        "x": 1660,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "ba00bfa409db6a49",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "587d35133a0589f4",
        "group": "0f5b01afb2f3a18c",
        "order": 75,
        "width": 15,
        "height": 1,
        "name": "below space text",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 810,
        "y": 120,
        "wires": []
    },
    {
        "id": "6731c490c36e6a27",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "56d9bbb12c6ac8cc",
        "group": "0f5b01afb2f3a18c",
        "order": 15,
        "width": 5,
        "height": 1,
        "name": "DI01time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 800,
        "y": 420,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "0156988b62d0e36e",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "56d9bbb12c6ac8cc",
        "group": "0f5b01afb2f3a18c",
        "order": 20,
        "width": 5,
        "height": 1,
        "name": "DI02time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 980,
        "y": 420,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "335a313373625858",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "56d9bbb12c6ac8cc",
        "group": "0f5b01afb2f3a18c",
        "order": 25,
        "width": 5,
        "height": 1,
        "name": "DI03time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 800,
        "y": 460,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "694f909517e0333b",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "56d9bbb12c6ac8cc",
        "group": "0f5b01afb2f3a18c",
        "order": 30,
        "width": 5,
        "height": 1,
        "name": "DI04time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 980,
        "y": 460,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "285f93ac69df70b0",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "56d9bbb12c6ac8cc",
        "group": "0f5b01afb2f3a18c",
        "order": 35,
        "width": 5,
        "height": 1,
        "name": "DI05time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 800,
        "y": 500,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "a589a98fabe7738c",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "56d9bbb12c6ac8cc",
        "group": "0f5b01afb2f3a18c",
        "order": 40,
        "width": 5,
        "height": 1,
        "name": "DI06time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 980,
        "y": 500,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "dab2ac9aabed3d03",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "56d9bbb12c6ac8cc",
        "group": "0f5b01afb2f3a18c",
        "order": 45,
        "width": 5,
        "height": 1,
        "name": "DI07time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 800,
        "y": 540,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "e2118cf978c77976",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "56d9bbb12c6ac8cc",
        "group": "0f5b01afb2f3a18c",
        "order": 50,
        "width": 5,
        "height": 1,
        "name": "DI08time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 980,
        "y": 540,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "5d4eb560dda53e1f",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "56d9bbb12c6ac8cc",
        "group": "0f5b01afb2f3a18c",
        "order": 55,
        "width": 5,
        "height": 1,
        "name": "DI09time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 800,
        "y": 580,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "954c4c34e70dfde4",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "56d9bbb12c6ac8cc",
        "group": "0f5b01afb2f3a18c",
        "order": 60,
        "width": 5,
        "height": 1,
        "name": "DI10time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 980,
        "y": 580,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "2f03da309d6c62f0",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "56d9bbb12c6ac8cc",
        "group": "0f5b01afb2f3a18c",
        "order": 65,
        "width": 5,
        "height": 1,
        "name": "DI11time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 800,
        "y": 620,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "d0989e75bbd9d3f1",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "56d9bbb12c6ac8cc",
        "group": "0f5b01afb2f3a18c",
        "order": 70,
        "width": 5,
        "height": 1,
        "name": "DI12time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 980,
        "y": 620,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "da3197d7cfdf1f4d",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "587d35133a0589f4",
        "group": "0f5b01afb2f3a18c",
        "order": 8,
        "width": 4,
        "height": 1,
        "name": "Time Stamp",
        "label": "",
        "format": "<font size = 5>Time Stamp",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 890,
        "y": 280,
        "wires": []
    },
    {
        "id": "e2fc7b8814598285",
        "type": "ui_button",
        "z": "7df8dcd3568b0c28",
        "g": "587d35133a0589f4",
        "name": "Digital Input Reports Button",
        "group": "0f5b01afb2f3a18c",
        "order": 3,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-solid fa-table fa-3x",
        "payload": "MainDashboard",
        "payloadType": "flow",
        "topic": "topic",
        "topicType": "msg",
        "x": 1060,
        "y": 120,
        "wires": [
            [
                "c30a6cea67fba55e"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "c30a6cea67fba55e",
        "type": "change",
        "z": "7df8dcd3568b0c28",
        "g": "587d35133a0589f4",
        "name": "Load DI Reports Dashboard",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Digital Inputs Reports\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 120,
        "wires": [
            [
                "1f4594762b3891b0"
            ]
        ]
    },
    {
        "id": "7d63c5ce20916163",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "AccessingDataFromDB",
        "func": "msg.topic = \"select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'DI' order by TIMESTAMP DESC LIMIT 1\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 740,
        "wires": [
            [
                "4cb6d57452e9bf3b"
            ]
        ]
    },
    {
        "id": "4cb6d57452e9bf3b",
        "type": "mysql",
        "z": "7df8dcd3568b0c28",
        "mydb": "ea4292e54e9739dd",
        "name": "",
        "x": 1480,
        "y": 740,
        "wires": [
            [
                "4051bd62a88e32b9",
                "29987894671cf2c8",
                "36dda7051a1ddae2",
                "facd1fda1b2b9511",
                "d99917852b915d76",
                "8c55aaebb23feb73",
                "e293f671805d164f",
                "c856965a0966e063",
                "c7725a53d2d1d18c",
                "547072008fbc3386",
                "05c609c818b30a3d",
                "c5918840c382e166",
                "01d37ff863dc4412"
            ]
        ]
    },
    {
        "id": "58941b84ce8ae488",
        "type": "inject",
        "z": "7df8dcd3568b0c28",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.3",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 870,
        "y": 740,
        "wires": [
            [
                "7d63c5ce20916163"
            ]
        ]
    },
    {
        "id": "4051bd62a88e32b9",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "function 84",
        "func": "\nvar data = msg.payload;\nvar Time = data[0].TIMESTAMP;\n\nvar date = new Date(Time);\nvar year = date.getFullYear();\nvar month = date.getMonth() + 1;\nvar day = date.getDate();\nvar hours = date.getHours().toString().padStart(2, '0');\nvar minutes = date.getMinutes().toString().padStart(2, '0');\nvar seconds = date.getSeconds().toString().padStart(2, '0');\n\nvar fullformat = `${day.toString().padStart(2, '0')}-${month.toString().padStart(2, '0')}-${year}`;\nvar timeformat = `${hours}:${minutes}:${seconds}`;\n\nmsg.time = ` ${fullformat} &nbsp; &nbsp; ${timeformat}`;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 740,
        "wires": [
            [
                "6731c490c36e6a27",
                "0156988b62d0e36e",
                "335a313373625858",
                "694f909517e0333b",
                "285f93ac69df70b0",
                "a589a98fabe7738c",
                "dab2ac9aabed3d03",
                "e2118cf978c77976",
                "5d4eb560dda53e1f",
                "954c4c34e70dfde4",
                "2f03da309d6c62f0",
                "d0989e75bbd9d3f1"
            ]
        ]
    },
    {
        "id": "29987894671cf2c8",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nvar DI01 = data[0].RAWPACKETS.DI01; \n\nmsg.payload = DI01;\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 860,
        "wires": [
            [
                "7659e1269063e2b0"
            ]
        ]
    },
    {
        "id": "36dda7051a1ddae2",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nvar DI02 = data[0].RAWPACKETS.DI02; \n\nmsg.payload = DI02;\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 920,
        "wires": [
            [
                "3186b302aad8b0c0"
            ]
        ]
    },
    {
        "id": "facd1fda1b2b9511",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nvar DI03 = data[0].RAWPACKETS.DI03; \n\nmsg.payload = DI03;\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 980,
        "wires": [
            [
                "6b7e7b96192cd2f3"
            ]
        ]
    },
    {
        "id": "d99917852b915d76",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nvar DI04 = data[0].RAWPACKETS.DI04; \n\nmsg.payload = DI04;\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 1040,
        "wires": [
            [
                "86be48b4287d8995"
            ]
        ]
    },
    {
        "id": "8c55aaebb23feb73",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nvar DI05 = data[0].RAWPACKETS.DI05; \n\nmsg.payload = DI05;\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 1100,
        "wires": [
            [
                "9314959d82b4a773"
            ]
        ]
    },
    {
        "id": "e293f671805d164f",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nvar DI06 = data[0].RAWPACKETS.DI06; \n\nmsg.payload = DI06;\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 1160,
        "wires": [
            [
                "9ad33431d73667c0"
            ]
        ]
    },
    {
        "id": "c856965a0966e063",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nvar DI07 = data[0].RAWPACKETS.DI07; \n\nmsg.payload = DI07;\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 1220,
        "wires": [
            [
                "0bfe6c11008c334a"
            ]
        ]
    },
    {
        "id": "c7725a53d2d1d18c",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nvar DI08 = data[0].RAWPACKETS.DI08; \n\nmsg.payload = DI08;\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 1280,
        "wires": [
            [
                "997781a1a67454e4"
            ]
        ]
    },
    {
        "id": "547072008fbc3386",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nvar DI09 = data[0].RAWPACKETS.DI09; \n\nmsg.payload = DI09;\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 1340,
        "wires": [
            [
                "771dde2b2196e71c"
            ]
        ]
    },
    {
        "id": "05c609c818b30a3d",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nvar DI10 = data[0].RAWPACKETS.DI10; \n\nmsg.payload = DI10;\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 1400,
        "wires": [
            [
                "c8cea4e4c9c4467d"
            ]
        ]
    },
    {
        "id": "c5918840c382e166",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nvar DI11 = data[0].RAWPACKETS.DI11; \n\nmsg.payload = DI11;\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 1460,
        "wires": [
            [
                "d8e5f7c8d2c1effa"
            ]
        ]
    },
    {
        "id": "01d37ff863dc4412",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nvar DI12 = data[0].RAWPACKETS.DI12; \n\nmsg.payload = DI12;\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 1520,
        "wires": [
            [
                "bbab63dfdf671895"
            ]
        ]
    },
    {
        "id": "c042c1b64b834396",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Allotting Values to Digital Params",
        "func": "if (msg.payload.DO01) {\n    var date = new Date();\n    var year = date.getFullYear();\n    var month = date.getMonth() + 1;\n    var day = date.getDate();\n    var hours = date.getHours().toString().padStart(2, '0');\n    var minutes = date.getMinutes().toString().padStart(2, '0');\n    var seconds = date.getSeconds().toString().padStart(2, '0');\n\n    var fullformat = `${day.toString().padStart(2, '0')}-${month.toString().padStart(2, '0')}-${year}`;\n    var timeformat = `${hours} : ${minutes} : ${seconds}`;\n    msg.time = ` ${fullformat} &nbsp; &nbsp; ${timeformat}`;\n    return msg;\n} \n// else {\n//     msg.payload = \"#c22719\";\n//     var date = new Date();\n//     var year = date.getFullYear();\n//     var month = date.getMonth() + 1;\n//     var day = date.getDate();\n//     var hours = date.getHours().toString().padStart(2, '0');\n//     var minutes = date.getMinutes().toString().padStart(2, '0');\n//     var seconds = date.getSeconds().toString().padStart(2, '0');\n\n//     var fullformat = `${day.toString().padStart(2, '0')}-${month.toString().padStart(2, '0')}-${year}`;\n//     var timeformat = `${hours} : ${minutes} : ${seconds}`;\n//     msg.time = ` ${fullformat} &nbsp; &nbsp; ${timeformat}`;\n//     return msg;\n\n// }\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 1560,
        "wires": [
            [
                "1e3bb9cdc11c016d",
                "dfb656e56dc38732",
                "77860796622739bb",
                "21791de5395f6919",
                "755bd51b9dd86f73",
                "6acaafb6decc174a",
                "f0073cd365516e0e",
                "1d067d189b708766",
                "25f715d543308dc8",
                "5bbcb6e3e84b807d",
                "adc463f5ce737a73",
                "9a4a04ec33f38e07",
                "22060df35ce48f10",
                "d54e527c9bdeef6a",
                "19ac135a601ea259",
                "531a8fd506cc6b18",
                "247ea74f0df15cfa",
                "6223d1c08295888e",
                "2421e89b35edce7c",
                "bed43734a2f55594",
                "dd8c4cd0c9b4a083",
                "4ce38dee764a4538",
                "7ccd9eb9291da019",
                "557ed8db42a5b92b",
                "7ccb11cdd11622ec",
                "5297d8d4d8152057",
                "87c857c8808f3a19",
                "c090d0fdc146d797",
                "2747e0bef079eb3d",
                "5be58c7b09ab0f75",
                "ff3a8471d8730a24",
                "4e8da70f8bf3f19c",
                "c26e38eed09e8708",
                "44962c98c4554660",
                "4abce75a09dffce1",
                "d2af08f8e0163b01"
            ]
        ]
    },
    {
        "id": "097e6545f1a0647a",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 18,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "<b>DO01 </b>     ",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1100,
        "y": 1100,
        "wires": []
    },
    {
        "id": "8ab473647aa9e586",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 24,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "<b>DO02</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1100,
        "y": 1360,
        "wires": []
    },
    {
        "id": "39f69574b6f6e7ed",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 30,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "<b>DO03</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1100,
        "y": 1600,
        "wires": []
    },
    {
        "id": "d614835bea05b552",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 36,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "<b>DO04</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1110,
        "y": 1880,
        "wires": []
    },
    {
        "id": "2d282bba5a4072d4",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 42,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "<b>DO05</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1100,
        "y": 2120,
        "wires": []
    },
    {
        "id": "7e53e6172a3d7d62",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 48,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "<b>DO06</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1180,
        "y": 2440,
        "wires": []
    },
    {
        "id": "ed77e776add62743",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 54,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "<b>DO07</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1240,
        "y": 2720,
        "wires": []
    },
    {
        "id": "0803583005513cfd",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 60,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "<b>DO08</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1280,
        "y": 2980,
        "wires": []
    },
    {
        "id": "b252e1c5fdc2412e",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 66,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "<b>DO09</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1240,
        "y": 3260,
        "wires": []
    },
    {
        "id": "73a525b7ab45fcba",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 72,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "<b>DO10</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1420,
        "y": 3500,
        "wires": []
    },
    {
        "id": "a4a8bf71c857be1d",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 78,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "<b>DO11</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1360,
        "y": 3780,
        "wires": []
    },
    {
        "id": "707babbc54d7db8f",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 84,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "<b>DO12</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1380,
        "y": 4080,
        "wires": []
    },
    {
        "id": "39258180827ac047",
        "type": "mqtt in",
        "z": "93b5a3b37e35c7cc",
        "name": "Receiving Data From Mqtt",
        "topic": "INS/MBIOT_ETH/09995/UTILITY",
        "qos": "0",
        "datatype": "json",
        "broker": "665f18f8041514a1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 1800,
        "wires": [
            [
                "c042c1b64b834396"
            ]
        ]
    },
    {
        "id": "7805a7a86275f4b9",
        "type": "mqtt out",
        "z": "93b5a3b37e35c7cc",
        "name": "MQTTOut",
        "topic": "INS/MBIOT_ETH/09995/CMD",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "665f18f8041514a1",
        "x": 2500,
        "y": 1980,
        "wires": []
    },
    {
        "id": "b926645f85613014",
        "type": "mqtt in",
        "z": "93b5a3b37e35c7cc",
        "name": "ReceivingDataFromMqtt",
        "topic": "INS/MBIOT_ETH/09995/XML_STATUS",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "665f18f8041514a1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1170,
        "y": 4560,
        "wires": [
            [
                "ae6ce2eb8570c1e3"
            ]
        ]
    },
    {
        "id": "ae6ce2eb8570c1e3",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "SendDatatoPopupWindow",
        "func": "if(msg.payload == \"Queued Successfully\"){\n    msg.payload = \"Data Submit Successfully\"\n    msg.topic = \"\";\n}\n\nelse if(msg.payload == \"Unknown Tag\"){\n    msg.payload= \"Unknown tag Please Submit Valid tag\"\n    msg.topic = \"\";\n    \n} else if (msg.payload == \"INVALID PACKET\"){\n    msg.payload = \"Invalid Packet Please Enter Valid Data\"\n    msg.topic = \"\";\n}\n\nconsole.log(msg);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 4560,
        "wires": [
            [
                "8a9d292bfc3c386e"
            ]
        ]
    },
    {
        "id": "8a9d292bfc3c386e",
        "type": "ui_toast",
        "z": "93b5a3b37e35c7cc",
        "position": "dialog",
        "displayTime": "5",
        "highlight": "black",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "<height = 300px>",
        "topic": "",
        "name": "",
        "x": 1850,
        "y": 4560,
        "wires": [
            []
        ],
        "info": "<div id=\"popupbox\"></div>\r\n<style>\r\n#popupbox{\r\n    /* border:10px solid black; */\r\n}\r\n</style>"
    },
    {
        "id": "1e3bb9cdc11c016d",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO01==1){\n    msg.payload =\"green\";\n\n    return msg;\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1060,
        "wires": [
            [
                "81df5bddaf30a17c",
                "097e6545f1a0647a"
            ]
        ]
    },
    {
        "id": "81df5bddaf30a17c",
        "type": "ui_template",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "name": "DO01Btn",
        "order": 19,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator1\">\n</div>\n<style>\n#indicator1{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};  \n    text-align:center; \n    margin-left:40px;\n    margin-top:11px;\n    \n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1420,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "dfb656e56dc38732",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO02==1){\n    msg.payload =\"green\";\n    return msg;\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n}\n// return msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1320,
        "wires": [
            [
                "8ab473647aa9e586",
                "e4b7f32fb26542ee"
            ]
        ]
    },
    {
        "id": "77860796622739bb",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO03==1){\n    msg.payload =\"green\";\n    return msg;\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1560,
        "wires": [
            [
                "39f69574b6f6e7ed",
                "46144e08eab6a8d5"
            ]
        ]
    },
    {
        "id": "21791de5395f6919",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO04==1){\n    msg.payload =\"green\";\n    return msg;\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1840,
        "wires": [
            [
                "d614835bea05b552",
                "b37bc1a12ed926fe"
            ]
        ]
    },
    {
        "id": "755bd51b9dd86f73",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO05==1){\n    msg.payload =\"green\";\n    return msg;\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 2080,
        "wires": [
            [
                "2d282bba5a4072d4",
                "bc83cc7573ba2368"
            ]
        ]
    },
    {
        "id": "9a4a04ec33f38e07",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO06==1){\n    msg.payload =\"green\";\n    return msg;\n\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 2400,
        "wires": [
            [
                "7e53e6172a3d7d62",
                "d20c5e5ddee146eb"
            ]
        ]
    },
    {
        "id": "6acaafb6decc174a",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO07==1){\n    msg.payload =\"green\";\n    return msg;\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 2680,
        "wires": [
            [
                "ed77e776add62743",
                "fb5ee9f07156e7ed"
            ]
        ]
    },
    {
        "id": "f0073cd365516e0e",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO08==1){\n    msg.payload =\"green\";\n    return msg;\n\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2960,
        "wires": [
            [
                "0803583005513cfd",
                "d28cc8e6c198908d"
            ]
        ]
    },
    {
        "id": "1d067d189b708766",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO09==1){\n    msg.payload =\"green\";\n    return msg;\n\n\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 3240,
        "wires": [
            [
                "b252e1c5fdc2412e",
                "238fd7cd227cc0bd"
            ]
        ]
    },
    {
        "id": "25f715d543308dc8",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO10==1){\n    msg.payload =\"green\";\n    return msg;\n\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 3500,
        "wires": [
            [
                "73a525b7ab45fcba",
                "233d05c5febb95ed"
            ]
        ]
    },
    {
        "id": "5bbcb6e3e84b807d",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO11==1){\n    msg.payload =\"green\";\n    return msg;\n\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 3800,
        "wires": [
            [
                "a4a8bf71c857be1d",
                "9b9d4f3937b506d1"
            ]
        ]
    },
    {
        "id": "adc463f5ce737a73",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO12==1){\n    msg.payload =\"green\";\n    return msg;\n\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 4100,
        "wires": [
            [
                "707babbc54d7db8f",
                "0ac509448179b865"
            ]
        ]
    },
    {
        "id": "e4b7f32fb26542ee",
        "type": "ui_template",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "name": "DO02Btn",
        "order": 25,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator2\">\n</div>\n<style>\n#indicator2{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};\n    margin-left:40px;\n    margin-top:11px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1420,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "46144e08eab6a8d5",
        "type": "ui_template",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "name": "DO03Btn",
        "order": 31,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator3\">\n</div>\n<style>\n#indicator3{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}}; \n    margin-left:40px;\n    margin-top:11px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1420,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "b37bc1a12ed926fe",
        "type": "ui_template",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "name": "DO04Btn",
        "order": 37,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator4\">\n</div>\n<style>\n#indicator4{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};\n    margin-left:40px;\n    margin-top:11px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1450,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "bc83cc7573ba2368",
        "type": "ui_template",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "name": "DO05Btn",
        "order": 43,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator5\">\n</div>\n<style>\n#indicator5{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};\n    margin-left:40px;\n    margin-top:11px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1460,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "d20c5e5ddee146eb",
        "type": "ui_template",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "name": "DO06Btn",
        "order": 49,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator6\">\n</div>\n<style>\n#indicator6{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};  \n    margin-left:40px;\n    margin-top:11px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1540,
        "y": 2400,
        "wires": [
            []
        ]
    },
    {
        "id": "fb5ee9f07156e7ed",
        "type": "ui_template",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "name": "DO07Btn",
        "order": 55,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator7\">\n</div>\n<style>\n#indicator7{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};\n    margin-left:40px;\n    margin-top:11px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1540,
        "y": 2680,
        "wires": [
            []
        ]
    },
    {
        "id": "d28cc8e6c198908d",
        "type": "ui_template",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "name": "DO08Btn",
        "order": 61,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator8\">\n</div>\n<style>\n#indicator8{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};\n    margin-left:40px;\n    margin-top:11px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1580,
        "y": 2960,
        "wires": [
            []
        ]
    },
    {
        "id": "238fd7cd227cc0bd",
        "type": "ui_template",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "name": "DO09Btn",
        "order": 67,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator9\">\n</div>\n<style>\n#indicator9{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}}; \n    margin-left:40px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1560,
        "y": 3240,
        "wires": [
            []
        ]
    },
    {
        "id": "233d05c5febb95ed",
        "type": "ui_template",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "name": "DO10Btn",
        "order": 73,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator10\">\n</div>\n<style>\n#indicator10{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}}; \n    margin-left:40px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1600,
        "y": 3500,
        "wires": [
            []
        ]
    },
    {
        "id": "9b9d4f3937b506d1",
        "type": "ui_template",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "name": "DO11Btn",
        "order": 79,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator11\">\n</div>\n<style>\n#indicator11{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};\n    margin-left:40px;\n    margin-top:11px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1340,
        "y": 3800,
        "wires": [
            []
        ]
    },
    {
        "id": "0ac509448179b865",
        "type": "ui_template",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "name": "DO12Btn",
        "order": 85,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator12\">\n</div>\n<style>\n#indicator12{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};\n    margin-left:40px;\n    margin-top:11px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1620,
        "y": 4100,
        "wires": [
            []
        ]
    },
    {
        "id": "723203c5310246c6",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 14,
        "width": 3,
        "height": 1,
        "name": "heading Commads",
        "label": "",
        "format": "<font size = 5>Commands",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1210,
        "y": 4460,
        "wires": []
    },
    {
        "id": "a152310c994cb5e9",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 11,
        "width": 3,
        "height": 1,
        "name": "heading parameter",
        "label": "",
        "format": "<font size = 5>Parameter",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 970,
        "y": 4460,
        "wires": [],
        "info": "<h1>\r\nClick\r\n</h1>"
    },
    {
        "id": "247a9a21387c6204",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 13,
        "width": 2,
        "height": 1,
        "name": "heading Status",
        "label": "",
        "format": "<font size = 5>Status",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1440,
        "y": 4460,
        "wires": []
    },
    {
        "id": "0f42e1a3d44efa52",
        "type": "ui_button",
        "z": "93b5a3b37e35c7cc",
        "name": "Home Button",
        "group": "1cec39bef7c1040b",
        "order": 5,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-home fa-3x",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1270,
        "y": 4400,
        "wires": [
            [
                "b9f538dd5a416d64"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "0ddf79a7262b0457",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "Digital Outputs Label",
        "label": "<font size=6>Digital Outputs",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1000,
        "y": 4400,
        "wires": []
    },
    {
        "id": "9766b941b0690b56",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 91,
        "width": 18,
        "height": 1,
        "name": "Below space text",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1210,
        "y": 4680,
        "wires": []
    },
    {
        "id": "bc99b37c351c3807",
        "type": "ui_ui_control",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "events": "all",
        "x": 1760,
        "y": 4400,
        "wires": [
            []
        ]
    },
    {
        "id": "b9f538dd5a416d64",
        "type": "change",
        "z": "93b5a3b37e35c7cc",
        "name": "link tabs change node",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Dashboard\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 4400,
        "wires": [
            [
                "bc99b37c351c3807"
            ]
        ]
    },
    {
        "id": "22060df35ce48f10",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.msg)\n{\n    if(msg.payload.DO01==1){\n    msg.payload =\"Off\";\n    msg.enabled = false;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = false;\n    return msg;\n}\n}else{\nif(msg.payload.DO01==1){\n    msg.payload =\"Off\";\n    msg.enabled = true;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = true;\n    return msg;\n}\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1020,
        "wires": [
            [
                "4e6c77198c926e86"
            ]
        ]
    },
    {
        "id": "4e6c77198c926e86",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1010,
        "y": 1020,
        "wires": [
            [
                "143e5bc64e6679b5"
            ]
        ]
    },
    {
        "id": "143e5bc64e6679b5",
        "type": "ui_button",
        "z": "93b5a3b37e35c7cc",
        "name": "swithc1",
        "group": "1cec39bef7c1040b",
        "order": 20,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "bin",
        "topic": "topic",
        "topicType": "msg",
        "x": 1180,
        "y": 1020,
        "wires": [
            [
                "198ad1ae158eb9cd",
                "e715775ec5239186"
            ]
        ]
    },
    {
        "id": "e715775ec5239186",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 23",
        "func": "if(msg.payload){\n    msg.enabled = false\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 920,
        "wires": [
            [
                "143e5bc64e6679b5"
            ]
        ]
    },
    {
        "id": "198ad1ae158eb9cd",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1350,
        "y": 1020,
        "wires": [
            [
                "eaa213deb98f643f"
            ]
        ]
    },
    {
        "id": "eaa213deb98f643f",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 24",
        "func": "if(msg.payload==\"On\"){\n    msg.payload = {\"name\" : \"DO01\", \"value\" : 1};\n}\nelse{\n    msg.payload = {\"name\" : \"DO01\", \"value\" : 0};\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1020,
        "wires": [
            [
                "c811aa6049bb6272"
            ]
        ]
    },
    {
        "id": "c811aa6049bb6272",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "SendingDatatoMqtt",
        "func": "var status = msg.payload;\nmsg.payload = `$MBT:3,${status.name},${status.value}#`;\nmsg.topic = `INS/MBIOT_ETH/09995/CMD`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 1020,
        "wires": [
            [
                "7805a7a86275f4b9"
            ]
        ]
    },
    {
        "id": "d54e527c9bdeef6a",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.msg)\n{\n    if(msg.payload.DO02==1){\n    msg.payload =\"Off\";\n    msg.enabled = false;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = false;\n    return msg;\n}\n}else{\nif(msg.payload.DO02==1){\n    msg.payload =\"Off\";\n    msg.enabled = true;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = true;\n    return msg;\n}\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1280,
        "wires": [
            [
                "6e65bad3d602f344"
            ]
        ]
    },
    {
        "id": "6e65bad3d602f344",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 950,
        "y": 1280,
        "wires": [
            [
                "aaae6a7ebcbd1b1c"
            ]
        ]
    },
    {
        "id": "aaae6a7ebcbd1b1c",
        "type": "ui_button",
        "z": "93b5a3b37e35c7cc",
        "name": "switch2",
        "group": "1cec39bef7c1040b",
        "order": 26,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "bin",
        "topic": "topic",
        "topicType": "msg",
        "x": 1170,
        "y": 1280,
        "wires": [
            [
                "3d686af847b0e4cd",
                "71c11ec658f483f8"
            ]
        ]
    },
    {
        "id": "71c11ec658f483f8",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 25",
        "func": "if(msg.payload){\n    msg.enabled = false\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1260,
        "wires": [
            [
                "aaae6a7ebcbd1b1c"
            ]
        ]
    },
    {
        "id": "3d686af847b0e4cd",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1350,
        "y": 1280,
        "wires": [
            [
                "1fd3532160c65a48"
            ]
        ]
    },
    {
        "id": "1fd3532160c65a48",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 26",
        "func": "if(msg.payload==\"On\"){\n    msg.payload = {\"name\" : \"DO02\", \"value\" : 1};\n}\nelse{\n    msg.payload = {\"name\" : \"DO02\", \"value\" : 0};\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 1280,
        "wires": [
            [
                "a7e2016b3f16e21e"
            ]
        ]
    },
    {
        "id": "19ac135a601ea259",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.msg)\n{\n    if(msg.payload.DO03==1){\n    msg.payload =\"Off\";\n    msg.enabled = false;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = false;\n    return msg;\n}\n}else{\nif(msg.payload.DO03==1){\n    msg.payload =\"Off\";\n    msg.enabled = true;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = true;\n    return msg;\n}\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1520,
        "wires": [
            [
                "781fa80ef13d1527"
            ]
        ]
    },
    {
        "id": "781fa80ef13d1527",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1010,
        "y": 1520,
        "wires": [
            [
                "f105a4200a6a1d67"
            ]
        ]
    },
    {
        "id": "f105a4200a6a1d67",
        "type": "ui_button",
        "z": "93b5a3b37e35c7cc",
        "name": "switch3",
        "group": "1cec39bef7c1040b",
        "order": 32,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "bin",
        "topic": "topic",
        "topicType": "msg",
        "x": 1240,
        "y": 1520,
        "wires": [
            [
                "10770bf037292538",
                "f22336dd024ef7fe"
            ]
        ]
    },
    {
        "id": "f22336dd024ef7fe",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 27",
        "func": "if(msg.payload){\n    msg.enabled = false\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1500,
        "wires": [
            [
                "f105a4200a6a1d67"
            ]
        ]
    },
    {
        "id": "10770bf037292538",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1430,
        "y": 1520,
        "wires": [
            [
                "34f08fbd044be923"
            ]
        ]
    },
    {
        "id": "34f08fbd044be923",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 28",
        "func": "if(msg.payload==\"On\"){\n    msg.payload = {\"name\" : \"DO03\", \"value\" : 1};\n}\nelse{\n    msg.payload = {\"name\" : \"DO03\", \"value\" : 0};\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 1520,
        "wires": [
            [
                "d9384abc136365b1"
            ]
        ]
    },
    {
        "id": "d9384abc136365b1",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "SendingDatatoMqtt",
        "func": "var status = msg.payload;\nmsg.payload = `$MBT:3,${status.name},${status.value}#`;\nmsg.topic = `INS/MBIOT_ETH/09995/CMD`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1870,
        "y": 1520,
        "wires": [
            [
                "7805a7a86275f4b9"
            ]
        ]
    },
    {
        "id": "a7e2016b3f16e21e",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "SendingDatatoMqtt",
        "func": "var status = msg.payload;\nmsg.payload = `$MBT:3,${status.name},${status.value}#`;\nmsg.topic = `INS/MBIOT_ETH/09995/CMD`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 1280,
        "wires": [
            [
                "7805a7a86275f4b9"
            ]
        ]
    },
    {
        "id": "531a8fd506cc6b18",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if (msg.msg) {\n    if (msg.payload.DO04 == 1) {\n        msg.payload = \"Off\";\n        msg.enabled = false;\n        return msg;\n    } else {\n        msg.payload = \"On\";\n        msg.enabled = false;\n        return msg;\n    }\n} else {\n    if (msg.payload.DO04 == 1) {\n        msg.payload = \"Off\";\n        msg.enabled = true;\n        return msg;\n    } else {\n        msg.payload = \"On\";\n        msg.enabled = true;\n        return msg;\n    }\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1800,
        "wires": [
            [
                "f4d5dfddd2a5e5d0"
            ]
        ]
    },
    {
        "id": "f4d5dfddd2a5e5d0",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1000,
        "y": 1800,
        "wires": [
            [
                "9a83c5c03ab9e1d0"
            ]
        ]
    },
    {
        "id": "9a83c5c03ab9e1d0",
        "type": "ui_button",
        "z": "93b5a3b37e35c7cc",
        "name": "switch4",
        "group": "1cec39bef7c1040b",
        "order": 38,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "bin",
        "topic": "topic",
        "topicType": "msg",
        "x": 1220,
        "y": 1800,
        "wires": [
            [
                "99c651a04131dc11",
                "cc04b9ee5ba8f855"
            ]
        ]
    },
    {
        "id": "cc04b9ee5ba8f855",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 29",
        "func": "if(msg.payload){\n    msg.enabled = false\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 1780,
        "wires": [
            [
                "9a83c5c03ab9e1d0"
            ]
        ]
    },
    {
        "id": "99c651a04131dc11",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1410,
        "y": 1800,
        "wires": [
            [
                "a79c1cefc9d9b873"
            ]
        ]
    },
    {
        "id": "a79c1cefc9d9b873",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 30",
        "func": "if(msg.payload==\"On\"){\n    msg.payload = {\"name\" : \"DO04\", \"value\" : 1};\n}\nelse{\n    msg.payload = {\"name\" : \"DO04\", \"value\" : 0};\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 1800,
        "wires": [
            [
                "494fec9ab930d710"
            ]
        ]
    },
    {
        "id": "494fec9ab930d710",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "SendingDatatoMqtt",
        "func": "var status = msg.payload;\nmsg.payload = `$MBT:3,${status.name},${status.value}#`;\nmsg.topic = `INS/MBIOT_ETH/09995/CMD`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1830,
        "y": 1800,
        "wires": [
            [
                "7805a7a86275f4b9"
            ]
        ]
    },
    {
        "id": "247ea74f0df15cfa",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.msg)\n{\n    if(msg.payload.DO05==1){\n    msg.payload =\"Off\";\n    msg.enabled = false;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = false;\n    return msg;\n}\n}else{\nif(msg.payload.DO05==1){\n    msg.payload =\"Off\";\n    msg.enabled = true;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = true;\n    return msg;\n}\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 2040,
        "wires": [
            [
                "7a258b73d6940f92"
            ]
        ]
    },
    {
        "id": "7a258b73d6940f92",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1050,
        "y": 2040,
        "wires": [
            [
                "e6ce55d3c0297c77"
            ]
        ]
    },
    {
        "id": "1a36d463576c01f5",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 31",
        "func": "if(msg.payload){\n    msg.enabled = false\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 2020,
        "wires": [
            [
                "e6ce55d3c0297c77"
            ]
        ]
    },
    {
        "id": "e6ce55d3c0297c77",
        "type": "ui_button",
        "z": "93b5a3b37e35c7cc",
        "name": "switch5",
        "group": "1cec39bef7c1040b",
        "order": 44,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "bin",
        "topic": "topic",
        "topicType": "msg",
        "x": 1280,
        "y": 2040,
        "wires": [
            [
                "c708ec53dd637db5",
                "1a36d463576c01f5"
            ]
        ]
    },
    {
        "id": "c708ec53dd637db5",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1470,
        "y": 2040,
        "wires": [
            [
                "d00c8f90ce3c6c7e"
            ]
        ]
    },
    {
        "id": "d00c8f90ce3c6c7e",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 32",
        "func": "if(msg.payload==\"On\"){\n    msg.payload = {\"name\" : \"DO05\", \"value\" : 1};\n}\nelse{\n    msg.payload = {\"name\" : \"DO05\", \"value\" : 0};\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 2040,
        "wires": [
            [
                "8ec9d54a2476c932"
            ]
        ]
    },
    {
        "id": "8ec9d54a2476c932",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "SendingDatatoMqtt",
        "func": "var status = msg.payload;\nmsg.payload = `$MBT:3,${status.name},${status.value}#`;\nmsg.topic = `INS/MBIOT_ETH/09995/CMD`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 2040,
        "wires": [
            [
                "7805a7a86275f4b9"
            ]
        ]
    },
    {
        "id": "557ed8db42a5b92b",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.msg)\n{\n    if(msg.payload.DO06==1){\n    msg.payload =\"Off\";\n    msg.enabled = false;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = false;\n    return msg;\n}\n}else{\nif(msg.payload.DO06==1){\n    msg.payload =\"Off\";\n    msg.enabled = true;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = true;\n    return msg;\n}\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 2360,
        "wires": [
            [
                "c25005eaee6553ba"
            ]
        ]
    },
    {
        "id": "c25005eaee6553ba",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1090,
        "y": 2360,
        "wires": [
            [
                "fa6a6d2ebed89821"
            ]
        ]
    },
    {
        "id": "acbf3b85eb18c588",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 33",
        "func": "if(msg.payload){\n    msg.enabled = false\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 2340,
        "wires": [
            [
                "fa6a6d2ebed89821"
            ]
        ]
    },
    {
        "id": "fa6a6d2ebed89821",
        "type": "ui_button",
        "z": "93b5a3b37e35c7cc",
        "name": "switch6",
        "group": "1cec39bef7c1040b",
        "order": 50,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "bin",
        "topic": "topic",
        "topicType": "msg",
        "x": 1300,
        "y": 2360,
        "wires": [
            [
                "4050d85a3e626a94",
                "acbf3b85eb18c588"
            ]
        ]
    },
    {
        "id": "4050d85a3e626a94",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1490,
        "y": 2360,
        "wires": [
            [
                "6f6472b928d1ac2e"
            ]
        ]
    },
    {
        "id": "6f6472b928d1ac2e",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 34",
        "func": "if(msg.payload==\"On\"){\n    msg.payload = {\"name\" : \"DO06\", \"value\" : 1};\n}\nelse{\n    msg.payload = {\"name\" : \"DO06\", \"value\" : 0};\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 2360,
        "wires": [
            [
                "75367140fdcd5473"
            ]
        ]
    },
    {
        "id": "75367140fdcd5473",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "SendingDatatoMqtt",
        "func": "var status = msg.payload;\nmsg.payload = `$MBT:3,${status.name},${status.value}#`;\nmsg.topic = `INS/MBIOT_ETH/09995/CMD`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 2360,
        "wires": [
            [
                "7805a7a86275f4b9"
            ]
        ]
    },
    {
        "id": "6223d1c08295888e",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.msg)\n{\n    if(msg.payload.DO07==1){\n    msg.payload =\"Off\";\n    msg.enabled = false;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = false;\n    return msg;\n}\n}else{\nif(msg.payload.DO07==1){\n    msg.payload =\"Off\";\n    msg.enabled = true;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = true;\n    return msg;\n}\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 2640,
        "wires": [
            [
                "2b5dc1ab5cc09785"
            ]
        ]
    },
    {
        "id": "2b5dc1ab5cc09785",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1150,
        "y": 2640,
        "wires": [
            [
                "778c8ca0f518269a"
            ]
        ]
    },
    {
        "id": "a0f8fd95e70255dc",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 35",
        "func": "if(msg.payload){\n    msg.enabled = false\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 2620,
        "wires": [
            [
                "778c8ca0f518269a"
            ]
        ]
    },
    {
        "id": "778c8ca0f518269a",
        "type": "ui_button",
        "z": "93b5a3b37e35c7cc",
        "name": "switch7",
        "group": "1cec39bef7c1040b",
        "order": 56,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "bin",
        "topic": "topic",
        "topicType": "msg",
        "x": 1340,
        "y": 2640,
        "wires": [
            [
                "40df3f03a8c5b342",
                "a0f8fd95e70255dc"
            ]
        ]
    },
    {
        "id": "40df3f03a8c5b342",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1530,
        "y": 2640,
        "wires": [
            [
                "dc8a5602e85c30dd"
            ]
        ]
    },
    {
        "id": "dc8a5602e85c30dd",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 36",
        "func": "if(msg.payload==\"On\"){\n    msg.payload = {\"name\" : \"DO07\", \"value\" : 1};\n}\nelse{\n    msg.payload = {\"name\" : \"DO07\", \"value\" : 0};\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 2640,
        "wires": [
            [
                "2ff3e6c7a0aba385"
            ]
        ]
    },
    {
        "id": "2ff3e6c7a0aba385",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "SendingDatatoMqtt",
        "func": "var status = msg.payload;\nmsg.payload = `$MBT:3,${status.name},${status.value}#`;\nmsg.topic = `INS/MBIOT_ETH/09995/CMD`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 2640,
        "wires": [
            [
                "7805a7a86275f4b9"
            ]
        ]
    },
    {
        "id": "bed43734a2f55594",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.msg)\n{\n    if(msg.payload.DO08==1){\n    msg.payload =\"Off\";\n    msg.enabled = false;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = false;\n    return msg;\n}\n}else{\nif(msg.payload.DO08==1){\n    msg.payload =\"Off\";\n    msg.enabled = true;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = true;\n    return msg;\n}\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2920,
        "wires": [
            [
                "d09dea93ac82f41e"
            ]
        ]
    },
    {
        "id": "d09dea93ac82f41e",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1210,
        "y": 2920,
        "wires": [
            [
                "aa04f49960b9b323"
            ]
        ]
    },
    {
        "id": "bfa36e8fa196aa68",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 37",
        "func": "if(msg.payload){\n    msg.enabled = false\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 2840,
        "wires": [
            [
                "aa04f49960b9b323"
            ]
        ]
    },
    {
        "id": "aa04f49960b9b323",
        "type": "ui_button",
        "z": "93b5a3b37e35c7cc",
        "name": "switch8",
        "group": "1cec39bef7c1040b",
        "order": 62,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "bin",
        "topic": "topic",
        "topicType": "msg",
        "x": 1400,
        "y": 2920,
        "wires": [
            [
                "a3f8473831d10895",
                "bfa36e8fa196aa68"
            ]
        ]
    },
    {
        "id": "a3f8473831d10895",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1590,
        "y": 2920,
        "wires": [
            [
                "27781bf25e59c0e1"
            ]
        ]
    },
    {
        "id": "27781bf25e59c0e1",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 38",
        "func": "if(msg.payload==\"On\"){\n    msg.payload = {\"name\" : \"DO08\", \"value\" : 1};\n}\nelse{\n    msg.payload = {\"name\" : \"DO08\", \"value\" : 0};\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 2920,
        "wires": [
            [
                "7fad648d28e77057"
            ]
        ]
    },
    {
        "id": "7fad648d28e77057",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "SendingDatatoMqtt",
        "func": "var status = msg.payload;\nmsg.payload = `$MBT:3,${status.name},${status.value}#`;\nmsg.topic = `INS/MBIOT_ETH/09995/CMD`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2010,
        "y": 2920,
        "wires": [
            [
                "7805a7a86275f4b9"
            ]
        ]
    },
    {
        "id": "2421e89b35edce7c",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if (msg.msg) {\n    if (msg.payload.DO09 == 1) {\n        msg.payload = \"Off\";\n        msg.enabled = false;\n        return msg;\n    } else {\n        msg.payload = \"On\";\n        msg.enabled = false;\n        return msg;\n    }\n} else {\n    if (msg.payload.DO09 == 1) {\n        msg.payload = \"Off\";\n        msg.enabled = true;\n        return msg;\n    } else {\n        msg.payload = \"On\";\n        msg.enabled = true;\n        return msg;\n    }\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 3200,
        "wires": [
            [
                "857ce5e0c5b0a52b"
            ]
        ]
    },
    {
        "id": "857ce5e0c5b0a52b",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1210,
        "y": 3200,
        "wires": [
            [
                "22250404588294bb"
            ]
        ]
    },
    {
        "id": "6ae893f7206f96ed",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 39",
        "func": "if(msg.payload){\n    msg.enabled = false\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 3180,
        "wires": [
            [
                "22250404588294bb"
            ]
        ]
    },
    {
        "id": "22250404588294bb",
        "type": "ui_button",
        "z": "93b5a3b37e35c7cc",
        "name": "switch9",
        "group": "1cec39bef7c1040b",
        "order": 68,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "bin",
        "topic": "topic",
        "topicType": "msg",
        "x": 1400,
        "y": 3200,
        "wires": [
            [
                "5b6bb78ccff69acf",
                "6ae893f7206f96ed"
            ]
        ]
    },
    {
        "id": "5b6bb78ccff69acf",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1590,
        "y": 3200,
        "wires": [
            [
                "48abe66a1289042c"
            ]
        ]
    },
    {
        "id": "48abe66a1289042c",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 40",
        "func": "if(msg.payload==\"On\"){\n    msg.payload = {\"name\" : \"DO09\", \"value\" : 1};\n}\nelse{\n    msg.payload = {\"name\" : \"DO09\", \"value\" : 0};\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 3200,
        "wires": [
            [
                "485c322cfa6b569b"
            ]
        ]
    },
    {
        "id": "485c322cfa6b569b",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "SendingDatatoMqtt",
        "func": "var status = msg.payload;\nmsg.payload = `$MBT:3,${status.name},${status.value}#`;\nmsg.topic = `INS/MBIOT_ETH/09995/CMD`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2010,
        "y": 3200,
        "wires": [
            [
                "7805a7a86275f4b9"
            ]
        ]
    },
    {
        "id": "dd8c4cd0c9b4a083",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.msg)\n{\n    if(msg.payload.DO10==1){\n    msg.payload =\"Off\";\n    msg.enabled = false;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = false;\n    return msg;\n}\n}else{\nif(msg.payload.DO10==1){\n    msg.payload =\"Off\";\n    msg.enabled = true;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = true;\n    return msg;\n}\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 3460,
        "wires": [
            [
                "17f2921edf7c5b0d"
            ]
        ]
    },
    {
        "id": "17f2921edf7c5b0d",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1210,
        "y": 3460,
        "wires": [
            [
                "369c9d927bda99af"
            ]
        ]
    },
    {
        "id": "6d2932613056bea8",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 41",
        "func": "if(msg.payload){\n    msg.enabled = false\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 3440,
        "wires": [
            [
                "369c9d927bda99af"
            ]
        ]
    },
    {
        "id": "369c9d927bda99af",
        "type": "ui_button",
        "z": "93b5a3b37e35c7cc",
        "name": "switch10",
        "group": "1cec39bef7c1040b",
        "order": 74,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "bin",
        "topic": "topic",
        "topicType": "msg",
        "x": 1400,
        "y": 3460,
        "wires": [
            [
                "4d55fad10c385755",
                "6d2932613056bea8"
            ]
        ]
    },
    {
        "id": "4d55fad10c385755",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1590,
        "y": 3460,
        "wires": [
            [
                "7ff18b0f92094965"
            ]
        ]
    },
    {
        "id": "7ff18b0f92094965",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 42",
        "func": "if(msg.payload==\"On\"){\n    msg.payload = {\"name\" : \"DO10\", \"value\" : 1};\n}\nelse{\n    msg.payload = {\"name\" : \"DO10\", \"value\" : 0};\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 3460,
        "wires": [
            [
                "eb1de47f34cf6afd"
            ]
        ]
    },
    {
        "id": "eb1de47f34cf6afd",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "SendingDatatoMqtt",
        "func": "var status = msg.payload;\nmsg.payload = `$MBT:3,${status.name},${status.value}#`;\nmsg.topic = `INS/MBIOT_ETH/09995/CMD`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2010,
        "y": 3460,
        "wires": [
            [
                "7805a7a86275f4b9"
            ]
        ]
    },
    {
        "id": "4ce38dee764a4538",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.msg)\n{\n    if(msg.payload.DO11==1){\n    msg.payload =\"Off\";\n    msg.enabled = false;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = false;\n    return msg;\n}\n}else{\nif(msg.payload.DO11==1){\n    msg.payload =\"Off\";\n    msg.enabled = true;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = true;\n    return msg;\n}\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 3720,
        "wires": [
            [
                "ab4152f8c1eb62d5"
            ]
        ]
    },
    {
        "id": "ab4152f8c1eb62d5",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1210,
        "y": 3720,
        "wires": [
            [
                "56fb9d4c339689f3"
            ]
        ]
    },
    {
        "id": "8e0b203fc75f19b8",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 43",
        "func": "if(msg.payload){\n    msg.enabled = false\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 3720,
        "wires": [
            [
                "56fb9d4c339689f3"
            ]
        ]
    },
    {
        "id": "56fb9d4c339689f3",
        "type": "ui_button",
        "z": "93b5a3b37e35c7cc",
        "name": "switch11",
        "group": "1cec39bef7c1040b",
        "order": 80,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "bin",
        "topic": "topic",
        "topicType": "msg",
        "x": 1420,
        "y": 3720,
        "wires": [
            [
                "a07e943bfba32a5b",
                "8e0b203fc75f19b8"
            ]
        ]
    },
    {
        "id": "a07e943bfba32a5b",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1610,
        "y": 3720,
        "wires": [
            [
                "ea069e9b65cb7179"
            ]
        ]
    },
    {
        "id": "ea069e9b65cb7179",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 44",
        "func": "if(msg.payload==\"On\"){\n    msg.payload = {\"name\" : \"DO11\", \"value\" : 1};\n}\nelse{\n    msg.payload = {\"name\" : \"DO11\", \"value\" : 0};\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1790,
        "y": 3720,
        "wires": [
            [
                "095a1cb0155842ed"
            ]
        ]
    },
    {
        "id": "095a1cb0155842ed",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "SendingDatatoMqtt",
        "func": "var status = msg.payload;\nmsg.payload = `$MBT:3,${status.name},${status.value}#`;\nmsg.topic = `INS/MBIOT_ETH/09995/CMD`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2010,
        "y": 3720,
        "wires": [
            [
                "7805a7a86275f4b9"
            ]
        ]
    },
    {
        "id": "7ccd9eb9291da019",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.msg)\n{\n    if(msg.payload.DO12==1){\n    msg.payload =\"Off\";\n    msg.enabled = false;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = false;\n    return msg;\n}\n}else{\nif(msg.payload.DO12==1){\n    msg.payload =\"Off\";\n    msg.enabled = true;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = true;\n    return msg;\n}\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 4040,
        "wires": [
            [
                "6e3c7c403c076b55"
            ]
        ]
    },
    {
        "id": "6e3c7c403c076b55",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1270,
        "y": 4040,
        "wires": [
            [
                "259a5b9416b397ec"
            ]
        ]
    },
    {
        "id": "84679a682c7ccc8f",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 45",
        "func": "if(msg.payload){\n    msg.enabled = false\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 4020,
        "wires": [
            [
                "259a5b9416b397ec"
            ]
        ]
    },
    {
        "id": "259a5b9416b397ec",
        "type": "ui_button",
        "z": "93b5a3b37e35c7cc",
        "name": "switch12",
        "group": "1cec39bef7c1040b",
        "order": 86,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "bin",
        "topic": "topic",
        "topicType": "msg",
        "x": 1460,
        "y": 4040,
        "wires": [
            [
                "6a1327205f22bc1e",
                "84679a682c7ccc8f"
            ]
        ]
    },
    {
        "id": "6a1327205f22bc1e",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1650,
        "y": 4040,
        "wires": [
            [
                "5e482e1cf4281036"
            ]
        ]
    },
    {
        "id": "5e482e1cf4281036",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 46",
        "func": "if(msg.payload==\"On\"){\n    msg.payload = {\"name\" : \"DO12\", \"value\" : 1};\n}\nelse{\n    msg.payload = {\"name\" : \"DO12\", \"value\" : 0};\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 4040,
        "wires": [
            [
                "6790821b08ed1fee"
            ]
        ]
    },
    {
        "id": "6790821b08ed1fee",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "SendingDatatoMqtt",
        "func": "var status = msg.payload;\nmsg.payload = `$MBT:3,${status.name},${status.value}#`;\nmsg.topic = `INS/MBIOT_ETH/09995/CMD`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2070,
        "y": 4040,
        "wires": [
            [
                "7805a7a86275f4b9"
            ]
        ]
    },
    {
        "id": "7ccb11cdd11622ec",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "g": "ed1a3249c92f181e",
        "group": "1cec39bef7c1040b",
        "order": 17,
        "width": 5,
        "height": 1,
        "name": "DI01time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 220,
        "y": 680,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "2747e0bef079eb3d",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "g": "ed1a3249c92f181e",
        "group": "1cec39bef7c1040b",
        "order": 23,
        "width": 5,
        "height": 1,
        "name": "DI02time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 360,
        "y": 680,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "c26e38eed09e8708",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "g": "ed1a3249c92f181e",
        "group": "1cec39bef7c1040b",
        "order": 29,
        "width": 5,
        "height": 1,
        "name": "DI03time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 500,
        "y": 680,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "5297d8d4d8152057",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "g": "ed1a3249c92f181e",
        "group": "1cec39bef7c1040b",
        "order": 35,
        "width": 5,
        "height": 1,
        "name": "DI04time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 220,
        "y": 740,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "5be58c7b09ab0f75",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "g": "ed1a3249c92f181e",
        "group": "1cec39bef7c1040b",
        "order": 41,
        "width": 5,
        "height": 1,
        "name": "DI05time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 360,
        "y": 740,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "44962c98c4554660",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "g": "ed1a3249c92f181e",
        "group": "1cec39bef7c1040b",
        "order": 47,
        "width": 5,
        "height": 1,
        "name": "DI06time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 500,
        "y": 740,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "87c857c8808f3a19",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "g": "ed1a3249c92f181e",
        "group": "1cec39bef7c1040b",
        "order": 53,
        "width": 5,
        "height": 1,
        "name": "DI07time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 220,
        "y": 800,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "ff3a8471d8730a24",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "g": "ed1a3249c92f181e",
        "group": "1cec39bef7c1040b",
        "order": 59,
        "width": 5,
        "height": 1,
        "name": "DI08time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 360,
        "y": 800,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "4abce75a09dffce1",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "g": "ed1a3249c92f181e",
        "group": "1cec39bef7c1040b",
        "order": 65,
        "width": 5,
        "height": 1,
        "name": "DI09time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 500,
        "y": 800,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "c090d0fdc146d797",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "g": "ed1a3249c92f181e",
        "group": "1cec39bef7c1040b",
        "order": 71,
        "width": 5,
        "height": 1,
        "name": "DI10time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 220,
        "y": 860,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "4e8da70f8bf3f19c",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "g": "ed1a3249c92f181e",
        "group": "1cec39bef7c1040b",
        "order": 77,
        "width": 5,
        "height": 1,
        "name": "DI11time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 360,
        "y": 860,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "d2af08f8e0163b01",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "g": "ed1a3249c92f181e",
        "group": "1cec39bef7c1040b",
        "order": 83,
        "width": 5,
        "height": 1,
        "name": "DI12time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 500,
        "y": 860,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "88851bf8ee2d6b5b",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 9,
        "width": 4,
        "height": 1,
        "name": "Time Stamps",
        "label": "",
        "format": "<font size = 5><margin-left = 10px><margin-left=10px>Time Stamp",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1650,
        "y": 4460,
        "wires": []
    },
    {
        "id": "3e0ef5771284c7ad",
        "type": "ui_button",
        "z": "93b5a3b37e35c7cc",
        "name": "Digital Output Reports Button",
        "group": "1cec39bef7c1040b",
        "order": 4,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-solid fa-table fa-3x",
        "payload": "MainDashboard",
        "payloadType": "flow",
        "topic": "topic",
        "topicType": "msg",
        "x": 1340,
        "y": 4360,
        "wires": [
            [
                "e0f01e0345e4bd9a"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "e0f01e0345e4bd9a",
        "type": "change",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Digital Output Report\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 4360,
        "wires": [
            [
                "bc99b37c351c3807"
            ]
        ]
    },
    {
        "id": "579d4613dd8d7101",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "AccessingDataFromDB",
        "func": "msg.topic = \"select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'DI' order by TIMESTAMP DESC LIMIT 1\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 760,
        "wires": [
            [
                "8d408f483e776d57"
            ]
        ]
    },
    {
        "id": "8d408f483e776d57",
        "type": "mysql",
        "z": "93b5a3b37e35c7cc",
        "mydb": "ea4292e54e9739dd",
        "name": "",
        "x": 1200,
        "y": 840,
        "wires": [
            [
                "f68f5ed028ed151a"
            ]
        ]
    },
    {
        "id": "ed6216e152a63cf4",
        "type": "inject",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.3",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 750,
        "y": 760,
        "wires": [
            [
                "579d4613dd8d7101"
            ]
        ]
    },
    {
        "id": "f68f5ed028ed151a",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 85",
        "func": "\nvar data = msg.payload;\nvar Time = data[0].TIMESTAMP;\n\nvar date = new Date(Time);\nvar year = date.getFullYear();\nvar month = date.getMonth() + 1;\nvar day = date.getDate();\nvar hours = date.getHours().toString().padStart(2, '0');\nvar minutes = date.getMinutes().toString().padStart(2, '0');\nvar seconds = date.getSeconds().toString().padStart(2, '0');\n\nvar fullformat = `${day.toString().padStart(2, '0')}-${month.toString().padStart(2, '0')}-${year}`;\nvar timeformat = `${hours}:${minutes}:${seconds}`;\n\nmsg.time = ` ${fullformat} &nbsp; &nbsp; ${timeformat}`;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 340,
        "wires": [
            [
                "7ccb11cdd11622ec",
                "2747e0bef079eb3d",
                "c26e38eed09e8708",
                "5297d8d4d8152057",
                "44962c98c4554660",
                "5be58c7b09ab0f75",
                "87c857c8808f3a19",
                "ff3a8471d8730a24",
                "4abce75a09dffce1",
                "c090d0fdc146d797",
                "4e8da70f8bf3f19c",
                "d2af08f8e0163b01",
                "a2cad441bbf0394a",
                "c2d7f9b5b3607ac0",
                "5305a0276eb9a4f7",
                "9240868f6aefc84b",
                "5a856417ad75943e",
                "ef7a0cafc91b75e3",
                "c1f1afecd01f0ecc",
                "f6786387d6950929",
                "7270f7b848ed21d5",
                "ac17263c9e948096",
                "c88fedf4abb30604",
                "2c036232d5074534"
            ]
        ]
    },
    {
        "id": "a2cad441bbf0394a",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Sending Historic Data to DO01",
        "func": "\nvar data = msg.payload;\nvar DO01 = data[0].RAWPACKETS.DO01; \n\nmsg.payload.DO01 = DO01;\nmsg.msg = 1;\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 20,
        "wires": [
            [
                "1e3bb9cdc11c016d",
                "22060df35ce48f10"
            ]
        ]
    },
    {
        "id": "c2d7f9b5b3607ac0",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Sending Historic Data to DO02",
        "func": "\nvar data = msg.payload;\nvar DO02 = data[0].RAWPACKETS.DO02; \n\nmsg.payload.DO02 = DO02;\nmsg.msg = 1\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 80,
        "wires": [
            [
                "dfb656e56dc38732",
                "d54e527c9bdeef6a"
            ]
        ]
    },
    {
        "id": "5305a0276eb9a4f7",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Sending Historic Data to DO03",
        "func": "\nvar data = msg.payload;\nvar DO03 = data[0].RAWPACKETS.DO03; \n\nmsg.payload.DO03 = DO03;\nmsg.msg = 1;\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 140,
        "wires": [
            [
                "77860796622739bb",
                "19ac135a601ea259"
            ]
        ]
    },
    {
        "id": "9240868f6aefc84b",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Sending Historic Data to DO04",
        "func": "\nvar data = msg.payload;\nvar DO04 = data[0].RAWPACKETS.DO04; \n\nmsg.payload.DO04 = DO04;\nmsg.msg = 1\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 200,
        "wires": [
            [
                "21791de5395f6919",
                "531a8fd506cc6b18"
            ]
        ]
    },
    {
        "id": "5a856417ad75943e",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Sending Historic Data to DO05",
        "func": "\nvar data = msg.payload;\nvar DO05 = data[0].RAWPACKETS.DO05; \n\nmsg.payload.DO05 = DO05;\nmsg.msg = 1\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 260,
        "wires": [
            [
                "755bd51b9dd86f73",
                "247ea74f0df15cfa",
                "557ed8db42a5b92b"
            ]
        ]
    },
    {
        "id": "ef7a0cafc91b75e3",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Sending Historic Data to DO06",
        "func": "\nvar data = msg.payload;\nvar DO06 = data[0].RAWPACKETS.DO06; \n\nmsg.payload.DO06 = DO06;\nmsg.msg = 1\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 320,
        "wires": [
            [
                "9a4a04ec33f38e07"
            ]
        ]
    },
    {
        "id": "c1f1afecd01f0ecc",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Sending Historic Data to D007",
        "func": "\nvar data = msg.payload;\nvar DO07 = data[0].RAWPACKETS.DO07; \n\nmsg.payload.DO07 = DO07;\nmsg.msg = 1\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 380,
        "wires": [
            [
                "6acaafb6decc174a",
                "6223d1c08295888e"
            ]
        ]
    },
    {
        "id": "f6786387d6950929",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Sending Historic Data to DO08",
        "func": "\nvar data = msg.payload;\nvar DO08 = data[0].RAWPACKETS.DO08; \n\nmsg.payload.DO08 = DO08;\nmsg.msg = 1\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 440,
        "wires": [
            [
                "f0073cd365516e0e",
                "bed43734a2f55594"
            ]
        ]
    },
    {
        "id": "7270f7b848ed21d5",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Sending Historic Data to DO09",
        "func": "\nvar data = msg.payload;\nvar DO09 = data[0].RAWPACKETS.DO09; \n\nmsg.payload.DO09 = DO09;\nmsg.msg = 1\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 500,
        "wires": [
            [
                "1d067d189b708766",
                "2421e89b35edce7c"
            ]
        ]
    },
    {
        "id": "ac17263c9e948096",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Sending Historic Data to DO10",
        "func": "\nvar data = msg.payload;\nvar DO10 = data[0].RAWPACKETS.DO10; \n\nmsg.payload.DO10 = DO10;\nmsg.msg = 1\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 560,
        "wires": [
            [
                "25f715d543308dc8",
                "dd8c4cd0c9b4a083"
            ]
        ]
    },
    {
        "id": "c88fedf4abb30604",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Sending Historic Data to DO11",
        "func": "\nvar data = msg.payload;\nvar DO11 = data[0].RAWPACKETS.DO11; \n\nmsg.payload.DO11 = DO11;\nmsg.msg = 1\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 620,
        "wires": [
            [
                "5bbcb6e3e84b807d",
                "4ce38dee764a4538"
            ]
        ]
    },
    {
        "id": "2c036232d5074534",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Sending Historic Data to DO12",
        "func": "\nvar data = msg.payload;\nvar DO12 = data[0].RAWPACKETS.DO12; \n\nmsg.payload.D012 = DO12;\nmsg.msg = 1\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 680,
        "wires": [
            [
                "adc463f5ce737a73",
                "7ccd9eb9291da019"
            ]
        ]
    },
    {
        "id": "f06e039a98ee4b0d",
        "type": "ui_button",
        "z": "220c4ff864c32f49",
        "g": "899c7b1d76378fe8",
        "name": "HomeButton",
        "group": "d1a79b5b1b683bcd",
        "order": 4,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-home fa-3x",
        "payload": "MainDashboard",
        "payloadType": "flow",
        "topic": "topic",
        "topicType": "msg",
        "x": 1110,
        "y": 180,
        "wires": [
            [
                "0babae2e670d5bcf"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "0babae2e670d5bcf",
        "type": "change",
        "z": "220c4ff864c32f49",
        "g": "899c7b1d76378fe8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Dashboard\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1440,
        "y": 180,
        "wires": [
            [
                "c559c76d6f0d031b"
            ]
        ]
    },
    {
        "id": "c559c76d6f0d031b",
        "type": "ui_ui_control",
        "z": "220c4ff864c32f49",
        "g": "899c7b1d76378fe8",
        "name": "",
        "events": "all",
        "x": 1740,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "c31788c767930c2c",
        "type": "mqtt in",
        "z": "220c4ff864c32f49",
        "name": "",
        "topic": "INS/MBIOT_ETH/09995/UTILITY",
        "qos": "0",
        "datatype": "json",
        "broker": "665f18f8041514a1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 520,
        "wires": [
            [
                "1462819a03133904"
            ]
        ]
    },
    {
        "id": "1462819a03133904",
        "type": "function",
        "z": "220c4ff864c32f49",
        "name": "Allotting Values to Digital Tags",
        "func": "if(msg.payload.RV){\n    // console.log(msg.payload);\n    // var status = msg.payload;\n    // msg.payload = [\n    //     status\n    // ];\n  var date = new Date();\n    var year = date.getFullYear();\n    var month = date.getMonth() + 1;\n    var day = date.getDate();\n    var hours = date.getHours().toString().padStart(2, '0');\n    var minutes = date.getMinutes().toString().padStart(2, '0');\n    var seconds = date.getSeconds().toString().padStart(2, '0');\n\n    var fullformat = `${day.toString().padStart(2, '0')}-${month.toString().padStart(2, '0')}-${year}`;\n    var timeformat = `${hours}:${minutes}:${seconds}`;\n    msg.time = ` ${fullformat} &nbsp; &nbsp; ${timeformat}`;\n    msg.msg = 1;\n    return msg;\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 800,
        "wires": [
            [
                "d0010c9e4a06adbb",
                "90d2368b500f4080",
                "25e13ce4f50eb485",
                "c355f3adcfca9452",
                "15560cbb2c270bf2",
                "98773619f302047a",
                "7c9effe526e56bcb",
                "a6335f6ad976504f",
                "dc757ea9c5908196",
                "0b686daa74307867",
                "cfb6dbd6f3f9c0e9",
                "60147517bc133b70",
                "6be6cb2672047f41",
                "2c570846ad550a2f",
                "e62cf6fd2a924f40",
                "262fe69e071036a9",
                "1852ea907cb1834e",
                "6ec0682ddc34f516",
                "ef8bbddf1e05c949",
                "bc2042b14260a298",
                "fdb933d6e8eda600",
                "ac355dd78d50341f",
                "3162e2433e420403",
                "11b08a249089cfec",
                "391a8edae11647c8",
                "2d69bde789f6e5be",
                "3e9ba444b9b4db35",
                "f1b837ebf715177c",
                "121f4cc47ab8effc",
                "1af3db15a25f14fa",
                "400682529edcfd18",
                "3e58ca0a56de892e",
                "05075f785ca6fcc2"
            ]
        ]
    },
    {
        "id": "306fcad3d8f3fe66",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "b287cac207f7a873",
        "group": "c0839fee6b778437",
        "order": 13,
        "width": 4,
        "height": 1,
        "name": "Wh",
        "label": "<b>Wh</b>",
        "format": "&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1350,
        "y": 1200,
        "wires": []
    },
    {
        "id": "c20fdf237f5682bc",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "b287cac207f7a873",
        "group": "c0839fee6b778437",
        "order": 17,
        "width": 4,
        "height": 1,
        "name": "Freq",
        "label": "<b> Freq</b>",
        "format": "&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1350,
        "y": 1260,
        "wires": []
    },
    {
        "id": "e55d5a524ae49380",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "b287cac207f7a873",
        "group": "c0839fee6b778437",
        "order": 21,
        "width": 4,
        "height": 1,
        "name": "PF",
        "label": "<b>PF</b>",
        "format": "&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1350,
        "y": 1320,
        "wires": []
    },
    {
        "id": "80eeb2e416e46c25",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "58cd1db56c8bd316",
        "group": "c0839fee6b778437",
        "order": 43,
        "width": 4,
        "height": 1,
        "name": "RA",
        "label": "<bordrer = 1px solid  red><b>RA</b>",
        "format": "&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1365,
        "y": 1460,
        "wires": [],
        "l": false
    },
    {
        "id": "8ab68da31f195a09",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "58cd1db56c8bd316",
        "group": "c0839fee6b778437",
        "order": 47,
        "width": 4,
        "height": 1,
        "name": "BA",
        "label": "<b>BA</b>",
        "format": "&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1350,
        "y": 1500,
        "wires": []
    },
    {
        "id": "645262c5c0f5eb98",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "58cd1db56c8bd316",
        "group": "c0839fee6b778437",
        "order": 51,
        "width": 4,
        "height": 1,
        "name": "TA",
        "label": "<b>TA</b>",
        "format": "&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1350,
        "y": 1540,
        "wires": []
    },
    {
        "id": "953d9618f3398874",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "58cd1db56c8bd316",
        "group": "c0839fee6b778437",
        "order": 55,
        "width": 4,
        "height": 1,
        "name": "YA",
        "label": "<b>YA</b>",
        "format": "&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1350,
        "y": 1580,
        "wires": []
    },
    {
        "id": "02816f40541446b1",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "10fb4113ae3f7f6b",
        "group": "c0839fee6b778437",
        "order": 38,
        "width": 4,
        "height": 1,
        "name": "VLN",
        "label": "<b>VLN</b>",
        "format": "&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1370,
        "y": 1700,
        "wires": []
    },
    {
        "id": "dbd49a8b18d5940c",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "10fb4113ae3f7f6b",
        "group": "c0839fee6b778437",
        "order": 26,
        "width": 4,
        "height": 1,
        "name": "RV",
        "label": "<b>RV</b>",
        "format": "&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1370,
        "y": 1740,
        "wires": []
    },
    {
        "id": "8059502cd03a9597",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "10fb4113ae3f7f6b",
        "group": "c0839fee6b778437",
        "order": 30,
        "width": 4,
        "height": 1,
        "name": "YV",
        "label": "<b>YV</b>",
        "format": "&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1370,
        "y": 1780,
        "wires": []
    },
    {
        "id": "1e723bafbc1f19a1",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "10fb4113ae3f7f6b",
        "group": "c0839fee6b778437",
        "order": 34,
        "width": 4,
        "height": 1,
        "name": "BV",
        "label": "<b>BV</b>",
        "format": "&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1370,
        "y": 1820,
        "wires": []
    },
    {
        "id": "d0010c9e4a06adbb",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "6a1247cd5a634ac3",
        "name": "Wh Accessing Data Function",
        "func": "// create one variable and assign it the WH value;\nvar Wh = msg.payload.Wh;\n\n// create object\nvar msg1 = {};\n\n// inject variable value to the payload of object\nmsg1.payload = Wh;\nmsg1.topic = \"Wh\"\n\n// give output as a msg1\nconsole.log(msg1);\nreturn msg1;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 440,
        "wires": [
            [
                "6da3df05f31abdbe"
            ]
        ]
    },
    {
        "id": "6da3df05f31abdbe",
        "type": "ui_chart",
        "z": "220c4ff864c32f49",
        "g": "6a1247cd5a634ac3",
        "name": "",
        "group": "d1a79b5b1b683bcd",
        "order": 8,
        "width": 6,
        "height": 4,
        "label": "Wh",
        "chartType": "line",
        "legend": "true",
        "xformat": "DD-MM-YYYY HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#d93abc",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1430,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "90d2368b500f4080",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "6a1247cd5a634ac3",
        "name": "Freq Accessing Data Function",
        "func": "// create one variable and assign it the Freq value;\nvar Freq = msg.payload.Freq;\n\n// create object\nvar msg2 = {};\n\n// inject variable value to the payload of object\nmsg2.payload = Freq;\nmsg2.topic = \"Freq\"\n\n// give output as a msg2\nreturn msg2;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 500,
        "wires": [
            [
                "986f187ad72614d2"
            ]
        ]
    },
    {
        "id": "25e13ce4f50eb485",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "6a1247cd5a634ac3",
        "name": "PF Accessing Data Function",
        "func": "// create one variable and assign it the PF value;\nvar PF = msg.payload.PF;\n\n// create object\nvar msg3 = {};\n\n// inject variable value to the payload of object\nmsg3.payload = PF;\nmsg3.topic = \"PF\"\n\n// give output as a msg3\nreturn msg3;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 560,
        "wires": [
            [
                "6f9950eecd75576a"
            ]
        ]
    },
    {
        "id": "986f187ad72614d2",
        "type": "ui_chart",
        "z": "220c4ff864c32f49",
        "g": "6a1247cd5a634ac3",
        "name": "",
        "group": "d1a79b5b1b683bcd",
        "order": 9,
        "width": 6,
        "height": 4,
        "label": "Frequency (Hz)",
        "chartType": "line",
        "legend": "true",
        "xformat": "DD-MM-YYYY HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#4bec56",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1460,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "6f9950eecd75576a",
        "type": "ui_chart",
        "z": "220c4ff864c32f49",
        "g": "6a1247cd5a634ac3",
        "name": "PF",
        "group": "d1a79b5b1b683bcd",
        "order": 10,
        "width": 6,
        "height": 4,
        "label": "PF",
        "chartType": "line",
        "legend": "true",
        "xformat": "DD-MM-YYYY HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#f03c28",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1430,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "c355f3adcfca9452",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "c29e176bee6df1d2",
        "name": "RA Accessing Data Function",
        "func": "// create one variable and assign it the RA value;\nvar RA = msg.payload.RA;\n\n// create object\nvar msg8 = {};\n\n// inject variable value to the payload of object\nmsg8.payload = RA;\nmsg8.topic = \"RA\"\n\n// give output as a msg5\nreturn msg8;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 720,
        "wires": [
            [
                "a650a9dd7fa6f4bf"
            ]
        ]
    },
    {
        "id": "15560cbb2c270bf2",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "c29e176bee6df1d2",
        "name": "YA Accessing Data Function",
        "func": "// create one variable and assign it the YA value;\nvar YA = msg.payload.YA;\n\n// create object\nvar msg9 = {};\n\n// inject variable value to the payload of object\nmsg9.payload = YA;\nmsg9.topic = \"YA\"\n\n// give output as a msg6\nreturn msg9;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 760,
        "wires": [
            [
                "a650a9dd7fa6f4bf"
            ]
        ]
    },
    {
        "id": "98773619f302047a",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "c29e176bee6df1d2",
        "name": "BA Accessing Data Function",
        "func": "// create one variable and assign it the BA value;\nvar BA = msg.payload.BA;\n\n// create object\nvar msg10 = {};\n\n// inject variable value to the payload of object\nmsg10.payload = BA;\nmsg10.topic = \"BA\"\n\n// give output as a msg7\nreturn msg10;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 800,
        "wires": [
            [
                "a650a9dd7fa6f4bf"
            ]
        ]
    },
    {
        "id": "7c9effe526e56bcb",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "c29e176bee6df1d2",
        "name": "TA Accessing Data Function",
        "func": "// create one variable and assign it the TA value;\nvar TA = msg.payload.TA;\n\n// create object\nvar msg11 = {};\n\n// inject variable value to the payload of object\nmsg11.payload = TA;\nmsg11.topic = \"TA\"\n\n// give output as a msg8\nreturn msg11;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 840,
        "wires": [
            [
                "a650a9dd7fa6f4bf"
            ]
        ]
    },
    {
        "id": "a650a9dd7fa6f4bf",
        "type": "ui_chart",
        "z": "220c4ff864c32f49",
        "g": "c29e176bee6df1d2",
        "name": "RA,YA,BA,TA",
        "group": "d1a79b5b1b683bcd",
        "order": 22,
        "width": 20,
        "height": 4,
        "label": "Current (Amps)",
        "chartType": "line",
        "legend": "true",
        "xformat": "DD-MM-YYYY HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#8941e1",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1660,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "a6335f6ad976504f",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "7fdf43f5d8a02fad",
        "name": "RV Accessing Data Function",
        "func": "// create one variable and assign it the RA value;\nvar RV = msg.payload.RV;\n\n// create object\nvar msg4 = {};\n\n\n// inject variable value to the payload of object\nmsg4.payload = RV;\nmsg4.topic = \"RV\"\n\n// give output as a msg1\nreturn msg4;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 960,
        "wires": [
            [
                "676732ce881b45d4"
            ]
        ]
    },
    {
        "id": "dc757ea9c5908196",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "7fdf43f5d8a02fad",
        "name": "BV Accessing Data Function",
        "func": "// create one variable and assign it the BV value;\nvar BV = msg.payload.BV;\n\n// create object\nvar msg6 = {};\n\n// inject variable value to the payload of object\nmsg6.payload = BV;\nmsg6.topic = \"BV\"\n\n// give output as a msg3\nreturn msg6;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1040,
        "wires": [
            [
                "676732ce881b45d4"
            ]
        ]
    },
    {
        "id": "0b686daa74307867",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "7fdf43f5d8a02fad",
        "name": "VLN Accessing Data Function",
        "func": "// create one variable and assign it the TA value;\nvar VLN = msg.payload.VLN;\n\n// create object\nvar msg7 = {};\n\n// inject variable value to the payload of object\nmsg7.payload = VLN;\nmsg7.topic = \"VLN\"\n\n// give output as a msg4\nreturn msg7;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1080,
        "wires": [
            [
                "676732ce881b45d4"
            ]
        ]
    },
    {
        "id": "676732ce881b45d4",
        "type": "ui_chart",
        "z": "220c4ff864c32f49",
        "g": "7fdf43f5d8a02fad",
        "name": "RV,YV,BV,VLN",
        "group": "d1a79b5b1b683bcd",
        "order": 16,
        "width": 20,
        "height": 4,
        "label": "Voltage (Volt)",
        "chartType": "line",
        "legend": "true",
        "xformat": "DD-MM-YYYY HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#16c3d0",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1680,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "6e2ad98c9e83b117",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "738c62c6244a1991",
        "group": "d1a79b5b1b683bcd",
        "order": 29,
        "width": 22,
        "height": 1,
        "name": "Below Space Blank Text",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 310,
        "y": 1760,
        "wires": []
    },
    {
        "id": "cfb6dbd6f3f9c0e9",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "b287cac207f7a873",
        "name": "Alloting Value to wh ",
        "func": "\n\n// A string with leading zeros\nvar str = msg.payload.Wh;\n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\n// Print the result\nmsg.payload = formatNumber(str);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 1200,
        "wires": [
            [
                "306fcad3d8f3fe66"
            ]
        ]
    },
    {
        "id": "60147517bc133b70",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "b287cac207f7a873",
        "name": "Alloting Value to Freq",
        "func": "\n\n// A string with leading zeros\nvar str = msg.payload.Freq;\n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\n// Print the result\nmsg.payload = formatNumber(str);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 1260,
        "wires": [
            [
                "c20fdf237f5682bc"
            ]
        ]
    },
    {
        "id": "6be6cb2672047f41",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "b287cac207f7a873",
        "name": "Alloting Value to PF",
        "func": "\n\n// A string with leading zeros\nvar str = msg.payload.PF;\n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\n// Print the result\nmsg.payload = formatNumber(str);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 1320,
        "wires": [
            [
                "e55d5a524ae49380"
            ]
        ]
    },
    {
        "id": "2c570846ad550a2f",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "58cd1db56c8bd316",
        "name": "Alloting Value to RA",
        "func": "\n\n// A string with leading zeros\nvar str = msg.payload.RA;\n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\n// Print the result\nmsg.payload = formatNumber(str);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 1460,
        "wires": [
            [
                "80eeb2e416e46c25"
            ]
        ]
    },
    {
        "id": "e62cf6fd2a924f40",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "58cd1db56c8bd316",
        "name": "Alloting Value to BA",
        "func": "\n\n// A string with leading zeros\nvar str = msg.payload.BA;\n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\n\n// Print the result\nmsg.payload = formatNumber(str);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 1500,
        "wires": [
            [
                "8ab68da31f195a09"
            ]
        ]
    },
    {
        "id": "262fe69e071036a9",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "58cd1db56c8bd316",
        "name": "Alloting Value to TA",
        "func": "\n\n// A string with leading zeros\nvar str = msg.payload.TA;\n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\n\n// Print the result\nmsg.payload = formatNumber(str);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 1540,
        "wires": [
            [
                "645262c5c0f5eb98"
            ]
        ]
    },
    {
        "id": "1852ea907cb1834e",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "58cd1db56c8bd316",
        "name": "Alloting Value to YA",
        "func": "\n\n// A string with leading zeros\nvar str = msg.payload.YA;\n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\n// Print the result\nmsg.payload = formatNumber(str);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 1580,
        "wires": [
            [
                "953d9618f3398874"
            ]
        ]
    },
    {
        "id": "6ec0682ddc34f516",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "10fb4113ae3f7f6b",
        "name": "Alloting Value to VLN",
        "func": "\n\n// A string with leading zeros\nvar str = msg.payload.VLN;\n\nfunction formatNumber(input){\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\n// Print the result\nmsg.payload = formatNumber(str);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 1700,
        "wires": [
            [
                "02816f40541446b1"
            ]
        ]
    },
    {
        "id": "ef8bbddf1e05c949",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "10fb4113ae3f7f6b",
        "name": "Alloting Value to RV",
        "func": "\n\n// A string with leading zeros\nvar str = msg.payload.RV;\n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\n\n// Print the result\nmsg.payload = formatNumber(str);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 1740,
        "wires": [
            [
                "dbd49a8b18d5940c"
            ]
        ]
    },
    {
        "id": "bc2042b14260a298",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "10fb4113ae3f7f6b",
        "name": "Alloting Value to YV",
        "func": "\n\n// A string with leading zeros\nvar str = msg.payload.YV;\n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\n// Print the result\nmsg.payload = formatNumber(str);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 1780,
        "wires": [
            [
                "8059502cd03a9597"
            ]
        ]
    },
    {
        "id": "fdb933d6e8eda600",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "10fb4113ae3f7f6b",
        "name": "Alloting Value to BV",
        "func": "\n\n// A string with leading zeros\nvar str = msg.payload.BV;\n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\n// Print the result\nmsg.payload = formatNumber(str);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 1820,
        "wires": [
            [
                "1e723bafbc1f19a1"
            ]
        ]
    },
    {
        "id": "ac355dd78d50341f",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "7fdf43f5d8a02fad",
        "name": "YV Accessing Data Function",
        "func": "// create one variable and assign it the YV value;\nvar YV = msg.payload.YV;\n\n// create object\nvar msg5 = {};\n\n// inject variable value to the payload of object\nmsg5.payload = YV;\nmsg5.topic = \"YV\"\n\n// give output as a msg2\nreturn msg5;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1000,
        "wires": [
            [
                "676732ce881b45d4"
            ]
        ]
    },
    {
        "id": "068ede4fe0a64759",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "738c62c6244a1991",
        "group": "c0839fee6b778437",
        "order": 3,
        "width": 5,
        "height": 1,
        "name": "blank space in  wh",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 290,
        "y": 1660,
        "wires": []
    },
    {
        "id": "5d5fc8360254ea06",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "738c62c6244a1991",
        "group": "c0839fee6b778437",
        "order": 59,
        "width": 5,
        "height": 1,
        "name": "Below Blank Space",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 290,
        "y": 1720,
        "wires": []
    },
    {
        "id": "a0da38d1318027fd",
        "type": "ui_button",
        "z": "220c4ff864c32f49",
        "g": "899c7b1d76378fe8",
        "name": "Energy Reports Button",
        "group": "d1a79b5b1b683bcd",
        "order": 2,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-solid fa-table fa-3x",
        "payload": "MainDashboard",
        "payloadType": "flow",
        "topic": "topic",
        "topicType": "msg",
        "x": 1140,
        "y": 240,
        "wires": [
            [
                "35e89134809098e9"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "35e89134809098e9",
        "type": "change",
        "z": "220c4ff864c32f49",
        "g": "899c7b1d76378fe8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Energy Meter Reports\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1440,
        "y": 240,
        "wires": [
            [
                "c559c76d6f0d031b"
            ]
        ]
    },
    {
        "id": "3162e2433e420403",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "8c4079981c186fed",
        "group": "c0839fee6b778437",
        "order": 12,
        "width": 5,
        "height": 1,
        "name": "Wh time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 660,
        "y": 1560,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "11b08a249089cfec",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "8c4079981c186fed",
        "group": "c0839fee6b778437",
        "order": 16,
        "width": 5,
        "height": 1,
        "name": "Freq time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 660,
        "y": 1600,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "391a8edae11647c8",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "8c4079981c186fed",
        "group": "c0839fee6b778437",
        "order": 20,
        "width": 5,
        "height": 1,
        "name": "Pf time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 660,
        "y": 1640,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "2d69bde789f6e5be",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "8c4079981c186fed",
        "group": "c0839fee6b778437",
        "order": 37,
        "width": 5,
        "height": 1,
        "name": "VLN time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 660,
        "y": 1680,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "3e9ba444b9b4db35",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "8c4079981c186fed",
        "group": "c0839fee6b778437",
        "order": 25,
        "width": 5,
        "height": 1,
        "name": "RV time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 660,
        "y": 1720,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "f1b837ebf715177c",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "8c4079981c186fed",
        "group": "c0839fee6b778437",
        "order": 29,
        "width": 5,
        "height": 1,
        "name": "YV time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 660,
        "y": 1760,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "121f4cc47ab8effc",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "8c4079981c186fed",
        "group": "c0839fee6b778437",
        "order": 33,
        "width": 5,
        "height": 1,
        "name": "BV time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 660,
        "y": 1800,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "1af3db15a25f14fa",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "8c4079981c186fed",
        "group": "c0839fee6b778437",
        "order": 42,
        "width": 5,
        "height": 1,
        "name": "RA time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 660,
        "y": 1840,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "400682529edcfd18",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "8c4079981c186fed",
        "group": "c0839fee6b778437",
        "order": 46,
        "width": 5,
        "height": 1,
        "name": "BA time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 660,
        "y": 1880,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "3e58ca0a56de892e",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "8c4079981c186fed",
        "group": "c0839fee6b778437",
        "order": 50,
        "width": 5,
        "height": 1,
        "name": "TA time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 660,
        "y": 1920,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "05075f785ca6fcc2",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "8c4079981c186fed",
        "group": "c0839fee6b778437",
        "order": 54,
        "width": 5,
        "height": 1,
        "name": "YA time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 660,
        "y": 1960,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "de3d2820115acc35",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "738c62c6244a1991",
        "group": "c0839fee6b778437",
        "order": 58,
        "width": 4,
        "height": 1,
        "name": "blank space in  voltage ",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 300,
        "y": 1540,
        "wires": []
    },
    {
        "id": "438731f209a28a35",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "738c62c6244a1991",
        "group": "c0839fee6b778437",
        "order": 63,
        "width": 5,
        "height": 1,
        "name": "blank space in  Current",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 300,
        "y": 1600,
        "wires": []
    },
    {
        "id": "e703ecbfbc0b3793",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "899c7b1d76378fe8",
        "group": "c0839fee6b778437",
        "order": 7,
        "width": 3,
        "height": 1,
        "name": "headingTimeStamp",
        "label": "",
        "format": "<font size = 5>TimeStamp",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 470,
        "y": 240,
        "wires": [],
        "info": "<h1>\r\nClick\r\n</h1>"
    },
    {
        "id": "3abff9fdd9b5975c",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "899c7b1d76378fe8",
        "group": "c0839fee6b778437",
        "order": 8,
        "width": 3,
        "height": 1,
        "name": "heading parameter",
        "label": "",
        "format": "<font size = 5>Parameter",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 690,
        "y": 240,
        "wires": [],
        "info": "<h1>\r\nClick\r\n</h1>"
    },
    {
        "id": "6642574b6690b376",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "899c7b1d76378fe8",
        "group": "c0839fee6b778437",
        "order": 9,
        "width": 2,
        "height": 1,
        "name": "heading Values",
        "label": "",
        "format": "<font size = 5>Values",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 920,
        "y": 240,
        "wires": [],
        "info": "<h1>\r\nClick\r\n</h1>"
    },
    {
        "id": "0ca5da9384a12bd2",
        "type": "ui_button",
        "z": "220c4ff864c32f49",
        "g": "899c7b1d76378fe8",
        "name": "Energy Charts Button",
        "group": "d1a79b5b1b683bcd",
        "order": 3,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-bar-chart fa-3x",
        "payload": "MainDashboard",
        "payloadType": "flow",
        "topic": "topic",
        "topicType": "msg",
        "x": 1140,
        "y": 300,
        "wires": [
            [
                "587cac37468cd90a"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "587cac37468cd90a",
        "type": "change",
        "z": "220c4ff864c32f49",
        "g": "899c7b1d76378fe8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Energy Meter Chart Reports\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 300,
        "wires": [
            [
                "c559c76d6f0d031b"
            ]
        ]
    },
    {
        "id": "1fab5aefe0ed1b8b",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "899c7b1d76378fe8",
        "group": "c0839fee6b778437",
        "order": 1,
        "width": 11,
        "height": 1,
        "name": "Energy Monitoring System ",
        "label": "<b><font size = 6>Energy Monitoring System </b>",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 740,
        "y": 180,
        "wires": []
    },
    {
        "id": "13153683200d70c3",
        "type": "function",
        "z": "220c4ff864c32f49",
        "name": "AccessingDataFromDB",
        "func": "msg.topic = \"select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'E' order by TIMESTAMP DESC LIMIT 10\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 380,
        "wires": [
            [
                "9c1d088714e782fe"
            ]
        ]
    },
    {
        "id": "9c1d088714e782fe",
        "type": "mysql",
        "z": "220c4ff864c32f49",
        "mydb": "ea4292e54e9739dd",
        "name": "",
        "x": 560,
        "y": 380,
        "wires": [
            [
                "c72cd92806c2138e",
                "1ce283f858ae95a7",
                "7df4f5d74f90f96c",
                "35b79cb040549c6d",
                "7f590f011b08301f"
            ]
        ]
    },
    {
        "id": "5f892214961b38e6",
        "type": "inject",
        "z": "220c4ff864c32f49",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.4",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 380,
        "wires": [
            [
                "13153683200d70c3"
            ]
        ]
    },
    {
        "id": "c72cd92806c2138e",
        "type": "function",
        "z": "220c4ff864c32f49",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nvar _pFHistory = [];\nfor (let i = 0; i < data.length; i++){\n\n    let _pFPacket = {\n        x      : data[i].TIMESTAMP,  \n        y      : data[i].RAWPACKETS.PF\n    }\n\n  function convertDateTimeToMillisec(dateTimeString) {\n    // Parse the date and time string\n    const dateObject = new Date(dateTimeString);\n\n    // Get the milliseconds since epoch\n    const milliseconds = dateObject.getTime();\n\n    return milliseconds;\n  }\n\n  // Example usage\n  const dateTimeString = _pFPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n  \n  _pFPacket.x = milliseconds;\n\n    _pFHistory.push(_pFPacket);\n}\n\nvar msg14 = {};\nmsg14.payload = [{\n    \"series\": [\"PF\"],\n    \"data\": [\n        _pFHistory\n    ],\n    \"labels\": [\"PF\"]\n}]\n\nreturn msg14;\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 580,
        "wires": [
            [
                "6f9950eecd75576a"
            ]
        ]
    },
    {
        "id": "1ce283f858ae95a7",
        "type": "function",
        "z": "220c4ff864c32f49",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nvar _fREQHistory = [];\nfor (let i = 0; i < data.length; i++){\n\n    let _fREQPacket = {\n        x      : data[i].TIMESTAMP,  \n        y      : data[i].RAWPACKETS.Freq\n    }\n\n  function convertDateTimeToMillisec(dateTimeString) {\n    // Parse the date and time string\n    const dateObject = new Date(dateTimeString);\n\n    // Get the milliseconds since epoch\n    const milliseconds = dateObject.getTime();\n\n    return milliseconds;\n  }\n\n  // Example usage\n  const dateTimeString = _fREQPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n  \n  _fREQPacket.x = milliseconds;\n\n    _fREQHistory.push(_fREQPacket);\n}\n\nvar msg13 = {};\nmsg13.payload = [{\n    \"series\": [\"Freq\"],\n    \"data\": [\n        _fREQHistory\n    ],\n    \"labels\": [\"\"]\n}]\n\nreturn msg13;\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 520,
        "wires": [
            [
                "986f187ad72614d2"
            ]
        ]
    },
    {
        "id": "7df4f5d74f90f96c",
        "type": "function",
        "z": "220c4ff864c32f49",
        "name": "Working On Data Receive From DB",
        "func": "var data = msg.payload;\n// console.log(data);\nvar _wH01History = [];\nfor (let i = 0; i < data.length; i++){\n\n    let _wHPacket = {\n        x      : data[i].TIMESTAMP,  \n        y      : data[i].RAWPACKETS.Wh\n    }\n\n    _wH01History.push(_wHPacket);\n\n}\nvar msg12 = {};\nmsg12.payload = [{\n    \"series\": [\"Wh\"],\n    \"data\": [\n        _wH01History\n    ],\n    \"labels\": [\"\"]\n}]\n\nreturn msg12;\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 440,
        "wires": [
            [
                "6da3df05f31abdbe"
            ]
        ]
    },
    {
        "id": "a5aea6e5bdd59d28",
        "type": "function",
        "z": "220c4ff864c32f49",
        "name": "AccessingDataFromDB",
        "func": "msg.topic = \"select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'E' order by TIMESTAMP DESC LIMIT 1\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2140,
        "wires": [
            [
                "30907577276b1051"
            ]
        ]
    },
    {
        "id": "30907577276b1051",
        "type": "mysql",
        "z": "220c4ff864c32f49",
        "mydb": "ea4292e54e9739dd",
        "name": "",
        "x": 700,
        "y": 2140,
        "wires": [
            [
                "2c3ae855aa4b64dd",
                "aeeb0a45d3483623",
                "1d5b0c398927650e",
                "3a12dc9f314a0b50",
                "3ba725d00c7a821f",
                "4dce73029b6de31b",
                "143d85a76ac997e7",
                "ae163bf297f7ddc5",
                "79fbdecb73c0139a",
                "a456e6b39f9db687",
                "948fe2f8e8728d53",
                "539d055d0d050161"
            ]
        ]
    },
    {
        "id": "bbb0a4738db70aa4",
        "type": "inject",
        "z": "220c4ff864c32f49",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.3",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 2140,
        "wires": [
            [
                "a5aea6e5bdd59d28"
            ]
        ]
    },
    {
        "id": "2c3ae855aa4b64dd",
        "type": "function",
        "z": "220c4ff864c32f49",
        "name": "function 83",
        "func": "\nvar data = msg.payload;\nvar Time = data[0].TIMESTAMP;\n\nvar date = new Date(Time);\nvar year = date.getFullYear();\nvar month = date.getMonth() + 1;\nvar day = date.getDate();\nvar hours = date.getHours().toString().padStart(2, '0');\nvar minutes = date.getMinutes().toString().padStart(2, '0');\nvar seconds = date.getSeconds().toString().padStart(2, '0');\n\nvar fullformat = `${day.toString().padStart(2, '0')}-${month.toString().padStart(2, '0')}-${year}`;\nvar timeformat = `${hours}:${minutes}:${seconds}`;\n\nmsg.time = ` ${fullformat} &nbsp; &nbsp; ${timeformat}`;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 2140,
        "wires": [
            [
                "3162e2433e420403",
                "11b08a249089cfec",
                "391a8edae11647c8",
                "2d69bde789f6e5be",
                "3e9ba444b9b4db35",
                "f1b837ebf715177c",
                "1af3db15a25f14fa",
                "400682529edcfd18",
                "3e58ca0a56de892e",
                "05075f785ca6fcc2",
                "121f4cc47ab8effc"
            ]
        ]
    },
    {
        "id": "aeeb0a45d3483623",
        "type": "function",
        "z": "220c4ff864c32f49",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nvar Wh =  data[0].RAWPACKETS.Wh;  //msg.payload.AI01;\n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\nmsg.payload = formatNumber(Wh);\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 1960,
        "wires": [
            [
                "306fcad3d8f3fe66"
            ]
        ]
    },
    {
        "id": "1d5b0c398927650e",
        "type": "function",
        "z": "220c4ff864c32f49",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nvar Freq =  data[0].RAWPACKETS.Freq;  //msg.payload.AI01;\n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\nmsg.payload = formatNumber(Freq);\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 2020,
        "wires": [
            [
                "c20fdf237f5682bc"
            ]
        ]
    },
    {
        "id": "3a12dc9f314a0b50",
        "type": "function",
        "z": "220c4ff864c32f49",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nvar PF =  data[0].RAWPACKETS.PF;  //msg.payload.AI01;\n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\nmsg.payload = formatNumber(PF);\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 2060,
        "wires": [
            [
                "e55d5a524ae49380"
            ]
        ]
    },
    {
        "id": "3ba725d00c7a821f",
        "type": "function",
        "z": "220c4ff864c32f49",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nvar RA =  data[0].RAWPACKETS.RA;  //msg.payload.AI01;\n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\nmsg.payload = formatNumber(RA);\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 2140,
        "wires": [
            [
                "80eeb2e416e46c25"
            ]
        ]
    },
    {
        "id": "4dce73029b6de31b",
        "type": "function",
        "z": "220c4ff864c32f49",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nvar BA =  data[0].RAWPACKETS.BA;\n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\nmsg.payload = formatNumber(BA);\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 2200,
        "wires": [
            [
                "8ab68da31f195a09"
            ]
        ]
    },
    {
        "id": "143d85a76ac997e7",
        "type": "function",
        "z": "220c4ff864c32f49",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nvar TA =  data[0].RAWPACKETS.TA; \n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\nmsg.payload = formatNumber(TA);\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 2240,
        "wires": [
            [
                "645262c5c0f5eb98"
            ]
        ]
    },
    {
        "id": "ae163bf297f7ddc5",
        "type": "function",
        "z": "220c4ff864c32f49",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nvar YA =  data[0].RAWPACKETS.YA;\n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\nmsg.payload = formatNumber(YA);\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 2280,
        "wires": [
            [
                "953d9618f3398874"
            ]
        ]
    },
    {
        "id": "79fbdecb73c0139a",
        "type": "function",
        "z": "220c4ff864c32f49",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nvar VLN =  data[0].RAWPACKETS.VLN; \n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\nmsg.payload = formatNumber(VLN);\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 2320,
        "wires": [
            [
                "02816f40541446b1"
            ]
        ]
    },
    {
        "id": "a456e6b39f9db687",
        "type": "function",
        "z": "220c4ff864c32f49",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nvar RV =  data[0].RAWPACKETS.RV; \n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\nmsg.payload = formatNumber(RV);\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 2360,
        "wires": [
            [
                "dbd49a8b18d5940c"
            ]
        ]
    },
    {
        "id": "948fe2f8e8728d53",
        "type": "function",
        "z": "220c4ff864c32f49",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nvar YV =  data[0].RAWPACKETS.YV;\n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\nmsg.payload = formatNumber(YV);\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 2400,
        "wires": [
            [
                "8059502cd03a9597"
            ]
        ]
    },
    {
        "id": "539d055d0d050161",
        "type": "function",
        "z": "220c4ff864c32f49",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nvar BV =  data[0].RAWPACKETS.BV;\n\nfunction formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n}\n\nmsg.payload = formatNumber(BV);\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 2440,
        "wires": [
            [
                "1e723bafbc1f19a1"
            ]
        ]
    },
    {
        "id": "35b79cb040549c6d",
        "type": "function",
        "z": "220c4ff864c32f49",
        "name": "[RA, YA, BA  and TA] Data Receive From DB",
        "func": "var data = msg.payload;\n\nvar _rAHistory = [];\nvar _yAHistory = [];\nvar _bAHistory = [];\nvar _tAHistory = [];\n\n/**\n * @description \"RA History\"\n */\nfor (let i = 0; i < data.length; i++){\n  let _rAPacket = {\n    x : data[i].TIMESTAMP,  \n    y : data[i].RAWPACKETS.RA\n  }\n\n  const dateTimeString = _rAPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n  \n  _rAPacket.x = milliseconds;\n  _rAHistory.push(_rAPacket);\n}\n\n/**\n * @description \"YA History\"\n */\nfor (let i = 0; i < data.length; i++) {\n  let _yAPacket = {\n    x : data[i].TIMESTAMP,\n    y : data[i].RAWPACKETS.YA\n  }\n\n  const dateTimeString = _yAPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n\n  _yAPacket.x = milliseconds;\n  _yAHistory.push(_yAPacket);\n}\n\n/**\n * @description \"BA History\"\n */\nfor (let i = 0; i < data.length; i++) {\n\n  let _bAPacket = {\n    x : data[i].TIMESTAMP,\n    y : data[i].RAWPACKETS.BA\n  }\n\n  const dateTimeString = _bAPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n\n  _bAPacket.x = milliseconds;\n  _bAHistory.push(_bAPacket);\n}\n\n/**\n * @description \"TA History\"\n */\nfor (let i = 0; i < data.length; i++) {\n  let _tAPacket = {\n    x : data[i].TIMESTAMP,\n    y : data[i].RAWPACKETS.TA\n  }\n\n  const dateTimeString = _tAPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n\n  _tAPacket.x = milliseconds;\n  _tAHistory.push(_tAPacket);\n}\n\n/**\n* @description \"Convert Date to Milliseconds\"\n* @param {string | number | Date} dateTimeString\n*/\nfunction convertDateTimeToMillisec(dateTimeString) {\n  // Parse the date and time string\n  const dateObject = new Date(dateTimeString);\n\n  // Get the milliseconds since epoch\n  const milliseconds = dateObject.getTime();\n  return milliseconds;\n}\n\n// console.log(\"RA History\");\n// console.log(_rAHistory);\n// console.log(\"YA History\");\n// console.log(_yAHistory);\n// console.log(\"BA History\");\n// console.log(_bAHistory);\n// console.log(\"TA History\");\n// console.log(_tAHistory);\n\nvar msg1 = {};\nmsg1.payload = [{\n    \"series\": [\"RA\", \"YA\", \"BA\", \"TA\"],\n    \"data\": [\n      _rAHistory,\n      _yAHistory,\n      _bAHistory,\n      _tAHistory\n    ],\n    \"labels\": [\"\"]\n}];\n\nconsole.log(msg1.payload);\n\nmsg1.topic = \"A\"\nreturn msg1;\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 680,
        "wires": [
            [
                "a650a9dd7fa6f4bf"
            ]
        ]
    },
    {
        "id": "7f590f011b08301f",
        "type": "function",
        "z": "220c4ff864c32f49",
        "name": "[RV, YV, BV  and VLN] Data Receive From DB",
        "func": "var data = msg.payload;\n\nvar _rVHistory = [];\nvar _yVHistory = [];\nvar _bVHistory = [];\nvar _vLNHistory = [];\n\n\n/**\n * @description \"RV History\"\n */\nfor (let i = 0; i < data.length; i++){\n  let _rVPacket = {\n    x : data[i].TIMESTAMP,  \n    y : data[i].RAWPACKETS.RV\n  }\n\n\n  const dateTimeString = _rVPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n  \n  _rVPacket.x = milliseconds;\n  _rVHistory.push(_rVPacket);\n}\n\n\n/**\n * @description \"YV History\"\n */\nfor (let i = 0; i < data.length; i++) {\n  let _yVPacket = {\n    x : data[i].TIMESTAMP,\n    y : data[i].RAWPACKETS.YV\n  }\n\n\n  const dateTimeString = _yVPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n\n  _yVPacket.x = milliseconds;\n  _yVHistory.push(_yVPacket);\n}\n\n\n/**\n * @description \"BV History\"\n */\nfor (let i = 0; i < data.length; i++) {\n\n  let _bVPacket = {\n    x : data[i].TIMESTAMP,\n    y : data[i].RAWPACKETS.BV\n  }\n\n  const dateTimeString = _bVPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n\n  _bVPacket.x = milliseconds;\n  _bVHistory.push(_bVPacket);\n}\n\n\n/**\n * @description \"VLN History\"\n */\nfor (let i = 0; i < data.length; i++) {\n  let _vLNPacket = {\n    x : data[i].TIMESTAMP,\n    y : data[i].RAWPACKETS.VLN\n  }\n\n  const dateTimeString = _vLNPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n\n  _vLNPacket.x = milliseconds;\n  _vLNHistory.push(_vLNPacket);\n}\n\n\n/**\n* @description \"Convert Date to Milliseconds\"\n* @paRVm {string | number | Date} dateTimeString\n*/\nfunction convertDateTimeToMillisec(dateTimeString) {\n  // Parse the date and time string\n  const dateObject = new Date(dateTimeString);\n\n  // Get the milliseconds since epoch\n  const milliseconds = dateObject.getTime();\n  return milliseconds;\n}\n\n\n// console.log(\"RV History\");\n// console.log(_rVHistory);\n// console.log(\"YV History\");\n// console.log(_yVHistory);\n// console.log(\"BV History\");\n// console.log(_bVHistory);\n// console.log(\"TA History\");\n// console.log(_vLNHistory);\n\nvar msg2 = {};\nmsg2.payload = [{\n    \"series\": [\"RV\", \"YV\", \"BV\", \"VLN\"],\n    \"data\": [\n      _rVHistory,\n      _yVHistory,\n      _bVHistory,\n      _vLNHistory\n    ],\n    \"labels\": [\"\"]\n}];\n\n\nmsg2.topic = \"A\"\n\nreturn msg2;\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1160,
        "wires": [
            [
                "676732ce881b45d4"
            ]
        ]
    },
    {
        "id": "ba4a827cddab8804",
        "type": "function",
        "z": "28a1f791cc37d4af",
        "name": "AccessingDataFromDB",
        "func": "if(msg.type){\n\n    var startdate = msg.payload.startDate;\n    var enddate = msg.payload.endDate\n    function extractDate(dateString) {\n        // Parse the input date string with timezone information\n        const inputDate = new Date(dateString);\n\n        // Extract the date part without time\n        const outputDate = inputDate.toISOString().slice(0, 10);\n\n        return outputDate;\n    }\n\n    // Define two input date strings\n    const inputDateStr1 = startdate;\n\n    const inputDateStr2 = enddate;\n\n    // Extract and print the date parts\n    var outputDate1 = extractDate(inputDateStr1);\n    var outputDate2 = extractDate(inputDateStr2);\n\n  \n    var startdt = outputDate1;\n    var enddt = outputDate2;\n\n    msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where TIMESTAMP between \"${startdt + ' 00:00:00'}\"  and  \"${enddt + ' 23:59:59'}\" AND  IOTYPE = 'AI';`\n    // msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'AI';`\n    return msg;\n\n}else{\n\nvar startdate = msg.payload.startDate;\nvar enddate = msg.payload.endDate\nfunction extractDate(dateString) {\n    // Parse the input date string with timezone information\n    const inputDate = new Date(dateString);\n\n    // Extract the date part without time\n    const outputDate = inputDate.toISOString().slice(0, 10);\n\n    return outputDate;\n}\n\n// Define two input date strings\nconst inputDateStr1 = startdate;\n\nconst inputDateStr2 = enddate;\n\n// Extract and print the date parts\nvar outputDate1 = extractDate(inputDateStr1);\nvar outputDate2 = extractDate(inputDateStr2);\n\nfunction getNextDay(dateString) {\n    // Create a Date object from the provided string\n    var date = new Date(dateString);\n\n    // Add one day to the date\n    date.setDate(date.getDate() + 1);\n\n    // Format the date in YYYY-MM-DD format\n    var nextDay = date.toISOString().slice(0, 10);\n\n    return nextDay;\n}\n\n// Example usage:\nvar todayString = outputDate1; // Replace with your dynamic string\nvar tomorrow = getNextDay(todayString);\nvar startdt = tomorrow;\n\nvar lastdayString = outputDate2;\nvar lastday = getNextDay(lastdayString);\n\nvar enddt = lastday;\n\nmsg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where TIMESTAMP between \"${startdt + ' 00:00:00'}\"  and  \"${enddt + ' 23:59:59'}\" AND  IOTYPE = 'AI';`\n// msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'AI';`\nreturn msg;\n\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 360,
        "wires": [
            [
                "9272c6e9fcb9ac1f"
            ]
        ]
    },
    {
        "id": "9272c6e9fcb9ac1f",
        "type": "mysql",
        "z": "28a1f791cc37d4af",
        "mydb": "ea4292e54e9739dd",
        "name": "Database",
        "x": 660,
        "y": 360,
        "wires": [
            [
                "3e60949afaf52918"
            ]
        ]
    },
    {
        "id": "3e60949afaf52918",
        "type": "function",
        "z": "28a1f791cc37d4af",
        "name": "WorkingOnDataReceiveFromDB",
        "func": "\n\nvar data = msg.payload;\nvar len = data.length;\n\nif(len == 0){\n\n  msg.payload = \"No Record Found\";\n  msg.topic = '';\n  msg.msg = 1;\n  return msg;\n\n}else{\n\n  var _aiHistory = [];\n  function formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n  }\n\n\n  for (let i = 0; i < data.length; i++) {\n\n    function convertDateTime(dateTimeString) {\n      // Create a Date object from the input string (assuming UTC timezone)\n      const dateObj = new Date(dateTimeString);\n\n      // Get year, month, day, hours, minutes, and seconds\n      const year = dateObj.getFullYear();\n      const month = String(dateObj.getMonth() + 1).padStart(2, '0'); // Add leading zero for single-digit months\n      const day = String(dateObj.getDate()).padStart(2, '0');\n      const hours = String(dateObj.getHours()).padStart(2, '0');\n      const minutes = String(dateObj.getMinutes()).padStart(2, '0');\n      const seconds = String(dateObj.getSeconds()).padStart(2, '0');\n\n      // Format the date and time in the desired format\n      return `${day}-${month}-${year} ${hours}:${minutes}:${seconds}`;\n    }\n\n    // Sample input string\n    const dateTimeString = data[i].TIMESTAMP;\n\n    // Convert the date and time\n    const formattedDateTime = convertDateTime(dateTimeString);\n\n    let _aiPacket = {\n      TIMESTAMP: formattedDateTime,\n      COMM: data[i].RAWPACKETS.COMM,\n      DEVICEID: data[i].RAWPACKETS.DEVID,\n      AI01: data[i].RAWPACKETS.AI01,\n      AI02: data[i].RAWPACKETS.AI02,\n      AI03: data[i].RAWPACKETS.AI03,\n      AI04: data[i].RAWPACKETS.AI04,\n      AI05: data[i].RAWPACKETS.AI05,\n      AI06: data[i].RAWPACKETS.AI06,\n      AI07: data[i].RAWPACKETS.AI07,\n      AI08: data[i].RAWPACKETS.AI08\n    }\n\n    _aiPacket.AI01 = formatNumber(_aiPacket.AI01);\n    _aiPacket.AI02 = formatNumber(_aiPacket.AI02);\n    _aiPacket.AI03 = formatNumber(_aiPacket.AI03);\n    _aiPacket.AI04 = formatNumber(_aiPacket.AI04);\n    _aiPacket.AI05 = formatNumber(_aiPacket.AI05);\n    _aiPacket.AI06 = formatNumber(_aiPacket.AI06);\n    _aiPacket.AI07 = formatNumber(_aiPacket.AI07);\n    _aiPacket.AI08 = formatNumber(_aiPacket.AI08);\n\n    _aiHistory.push(_aiPacket);\n  }\n\n  msg.payload = _aiHistory;\n\n  return msg;\n\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 360,
        "wires": [
            [
                "c40b29475836fe86",
                "ca3c97725f2ac953",
                "a2d89e6686d1608f",
                "20629fff4207f8c7"
            ]
        ]
    },
    {
        "id": "ca3c97725f2ac953",
        "type": "excel",
        "z": "28a1f791cc37d4af",
        "name": "Excel file",
        "file": "d:\\VaibhavWorkSpace\\New Microsoft Excel Worksheet.xlsx",
        "x": 1480,
        "y": 160,
        "wires": [
            [
                "730961cb05ae3f80"
            ]
        ]
    },
    {
        "id": "c5210555f0c56796",
        "type": "ui_table",
        "z": "28a1f791cc37d4af",
        "group": "e5356d149c2603da",
        "name": "",
        "order": 11,
        "width": 30,
        "height": 10,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1450,
        "y": 380,
        "wires": []
    },
    {
        "id": "c40b29475836fe86",
        "type": "ui_template",
        "z": "28a1f791cc37d4af",
        "group": "e5356d149c2603da",
        "name": "",
        "order": 6,
        "width": 3,
        "height": 1,
        "format": "<style>\n   .tabulator-col-content{\n    background-color: green !important;\n    padding: 10px;\n   }\n    </style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1300,
        "y": 360,
        "wires": [
            [
                "c5210555f0c56796"
            ]
        ]
    },
    {
        "id": "8fee521ae997a3f0",
        "type": "ui_button",
        "z": "28a1f791cc37d4af",
        "g": "3c594854df33e109",
        "name": "Home Button",
        "group": "e5356d149c2603da",
        "order": 8,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-home fa-3x",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 550,
        "y": 80,
        "wires": [
            [
                "7270a12ffdbaebda"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "7270a12ffdbaebda",
        "type": "change",
        "z": "28a1f791cc37d4af",
        "g": "3c594854df33e109",
        "name": "link tabs change node",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Analog Inputs\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 80,
        "wires": [
            [
                "22e20e1ab129d3b3"
            ]
        ]
    },
    {
        "id": "22e20e1ab129d3b3",
        "type": "ui_ui_control",
        "z": "28a1f791cc37d4af",
        "g": "3c594854df33e109",
        "name": "",
        "events": "all",
        "x": 1040,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "22c4f5a3c1818d34",
        "type": "ui_template",
        "z": "28a1f791cc37d4af",
        "group": "e5356d149c2603da",
        "name": "AI01 Template",
        "order": 4,
        "width": 3,
        "height": 1,
        "format": "\n<style>\n        form {\n          display: flex;\n          flex-direction: row;\n          flex-wrap: nowrap !important;\n          align-items: center;\n          justify-content: space-between;\n          padding: 20px;\n          padding-bottom: 20px !important;\n            }\n\n\n        label {\n          font-weight: bolder;\n          font-size : 24px !important;\n          display: block;\n          margin: auto 5px auto 5px;\n          font-weight: bold;\n      \n        }\n\n        input[type=\"date\"] {\n          display: block !important;\n          /* width: 100% !important;  */\n          padding: 8px;\n          border: 1px solid #ccc;\n          border-radius: 3px;\n          padding: 10px;\n        }\n\n        .ng-pristine ng-invalid ng-invalid-required{\n            display: flex;\n            justify-content:space-between;\n            align-item: center;\n            flex-direction: row;\n\n        }\n      .nr-dashboard-form .formElement {\n          /* width: 238px !important; */\n          margin-top: 20px;\n\n      }\n\n      .nr-dashboard-form .form-control {\n          /* width: 96% !important; */\n          display: flex;\n          justify-content: flex-start;\n          margin-top: -20px;\n      }\n\n      .nr-dashboard-form form{\n        flex-wrap : nowrap !important;\n      }\n\n      .nr-dashboard-form-button{\n        width : auto !important;\n      }\n\ninput,button{\n  width : 100% !important;\n  padding: 20px;\n}\n\nmd-input-container, form div{\n  width: 300px !important;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 220,
        "y": 600,
        "wires": [
            [
                "77de75936c813305"
            ]
        ]
    },
    {
        "id": "77de75936c813305",
        "type": "ui_form",
        "z": "28a1f791cc37d4af",
        "name": "",
        "label": "",
        "group": "e5356d149c2603da",
        "order": 10,
        "width": 30,
        "height": 1,
        "options": [
            {
                "label": "StartDate",
                "value": "startDate",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "EndDate",
                "value": "endDate",
                "type": "date",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "startDate": "",
            "endDate": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 190,
        "y": 360,
        "wires": [
            [
                "ba4a827cddab8804"
            ]
        ]
    },
    {
        "id": "d6fea3974346b169",
        "type": "ui_button",
        "z": "28a1f791cc37d4af",
        "g": "3c594854df33e109",
        "name": "Analog Input Charts",
        "group": "e5356d149c2603da",
        "order": 7,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-bar-chart fa-3x",
        "payload": "MainDashboard",
        "payloadType": "flow",
        "topic": "topic",
        "topicType": "msg",
        "x": 580,
        "y": 140,
        "wires": [
            [
                "9b53f6bfe9350abb"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "9b53f6bfe9350abb",
        "type": "change",
        "z": "28a1f791cc37d4af",
        "g": "3c594854df33e109",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Analog Input Charts Reports\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 140,
        "wires": [
            [
                "22e20e1ab129d3b3"
            ]
        ]
    },
    {
        "id": "c64942540da092fc",
        "type": "ui_text",
        "z": "28a1f791cc37d4af",
        "g": "3c594854df33e109",
        "group": "e5356d149c2603da",
        "order": 2,
        "width": 13,
        "height": 1,
        "name": "Analog Input Reports",
        "label": "<b><font size = 6>Analog Input Report</b>",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 580,
        "y": 200,
        "wires": []
    },
    {
        "id": "1b8a2aaa8e358706",
        "type": "inject",
        "z": "28a1f791cc37d4af",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 300,
        "wires": [
            [
                "966b31c9391a0409"
            ]
        ]
    },
    {
        "id": "966b31c9391a0409",
        "type": "function",
        "z": "28a1f791cc37d4af",
        "name": "AccessingDataFromDB",
        "func": "\n\n    msg.topic = \"select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'AI' order by TIMESTAMP DESC LIMIT 20;\"\n    return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 300,
        "wires": [
            [
                "9272c6e9fcb9ac1f"
            ]
        ]
    },
    {
        "id": "a2d89e6686d1608f",
        "type": "function",
        "z": "28a1f791cc37d4af",
        "name": "function 88",
        "func": "if(msg.msg){\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 520,
        "wires": [
            [
                "1dd830ca153ead74"
            ]
        ]
    },
    {
        "id": "20629fff4207f8c7",
        "type": "ui_template",
        "z": "28a1f791cc37d4af",
        "group": "15d5938965253a38",
        "name": "",
        "order": 31,
        "width": 0,
        "height": 0,
        "format": "<button id=\"downloadExcelBtn\">Download Excel</button>\n<script>\n    const XLSX = global.get('XLSX');\n    \n    document.getElementById('downloadExcelBtn').addEventListener('click', function() {\n// Sample data object\nconst data = [\n{ name: 'John Doe', age: 30, city: 'New York' },\n{ name: 'Jane Smith', age: 25, city: 'Los Angeles' },\n{ name: 'Mike Johnson', age: 35, city: 'Chicago' }\n];\n\n// Convert data object to worksheet\nconst worksheet = XLSX.utils.json_to_sheet(data);\n\n// Create a new workbook and append the worksheet\nconst workbook = XLSX.utils.book_new();\nXLSX.utils.book_append_sheet(workbook, worksheet, 'Sheet1');\n\n// Convert workbook to binary array\nconst wbout = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\n\n// Create a blob from the binary array\nconst blob = new Blob([wbout], { type: 'application/octet-stream' });\n\n// Create an invisible anchor element and trigger the download\nconst url = URL.createObjectURL(blob);\nconst anchor = document.createElement('a');\nanchor.href = url;\nanchor.download = 'data.xlsx';\ndocument.body.appendChild(anchor);\nanchor.click();\ndocument.body.removeChild(anchor);\nURL.revokeObjectURL(url);\n});\n\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1360,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "730961cb05ae3f80",
        "type": "file in",
        "z": "28a1f791cc37d4af",
        "name": "",
        "filename": "d:\\VaibhavWorkSpace\\New Microsoft Excel Worksheet.xlsx",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1620,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "c63262de463e71d3",
        "type": "function",
        "z": "28a1f791cc37d4af",
        "name": "function 91",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "1dd830ca153ead74",
        "type": "ui_toast",
        "z": "28a1f791cc37d4af",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1170,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "4133d89a8324da5e",
        "type": "function",
        "z": "8ef2b9c6e0a1e471",
        "name": "AccessingDataFromDB",
        "func": "if (msg.type) {\n\n    var startdate = msg.payload.startDate;\n    var enddate = msg.payload.endDate\n    function extractDate(dateString) {\n        // Parse the input date string with timezone information\n        const inputDate = new Date(dateString);\n\n        // Extract the date part without time\n        const outputDate = inputDate.toISOString().slice(0, 10);\n\n        return outputDate;\n    }\n\n    // Define two input date strings\n    const inputDateStr1 = startdate;\n\n    const inputDateStr2 = enddate;\n\n    // Extract and print the date parts\n    var outputDate1 = extractDate(inputDateStr1);\n    var outputDate2 = extractDate(inputDateStr2);\n\n\n    var startdt = outputDate1;\n    var enddt = outputDate2;\n\n    msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where TIMESTAMP between \"${startdt + ' 00:00:00'}\"  and  \"${enddt + ' 23:59:59'}\" AND  IOTYPE = 'DI';`\n    // msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'AI';`\n    return msg;\n\n} else {\n\n    var startdate = msg.payload.startDate;\n    var enddate = msg.payload.endDate\n    function extractDate(dateString) {\n        // Parse the input date string with timezone information\n        const inputDate = new Date(dateString);\n\n        // Extract the date part without time\n        const outputDate = inputDate.toISOString().slice(0, 10);\n\n        return outputDate;\n    }\n\n    // Define two input date strings\n    const inputDateStr1 = startdate;\n\n    const inputDateStr2 = enddate;\n\n    // Extract and print the date parts\n    var outputDate1 = extractDate(inputDateStr1);\n    var outputDate2 = extractDate(inputDateStr2);\n\n    function getNextDay(dateString) {\n        // Create a Date object from the provided string\n        var date = new Date(dateString);\n\n        // Add one day to the date\n        date.setDate(date.getDate() + 1);\n\n        // Format the date in YYYY-MM-DD format\n        var nextDay = date.toISOString().slice(0, 10);\n\n        return nextDay;\n    }\n\n    // Example usage:\n    var todayString = outputDate1; // Replace with your dynamic string\n    var tomorrow = getNextDay(todayString);\n    var startdt = tomorrow;\n\n    var lastdayString = outputDate2;\n    var lastday = getNextDay(lastdayString);\n\n    var enddt = lastday;\n\n    msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where TIMESTAMP between \"${startdt + ' 00:00:00'}\"  and  \"${enddt + ' 23:59:59'}\" AND  IOTYPE = 'DI';`\n    // msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'AI';`\n    return msg;\n\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 320,
        "wires": [
            [
                "c3aac0976604f74f"
            ]
        ]
    },
    {
        "id": "c3aac0976604f74f",
        "type": "mysql",
        "z": "8ef2b9c6e0a1e471",
        "mydb": "ea4292e54e9739dd",
        "name": "Database",
        "x": 740,
        "y": 320,
        "wires": [
            [
                "8a28085f66699537"
            ]
        ]
    },
    {
        "id": "8a28085f66699537",
        "type": "function",
        "z": "8ef2b9c6e0a1e471",
        "name": "WorkingOnDataReceiveFromDB",
        "func": "\n\n\nvar data = msg.payload;\nvar len = data.length;\nif(len == 0){\n  msg.payload = \"No Record Found\";\n  msg.topic = '';\n  msg.msg = 1;\n  return msg;\n}else{\n  var _aiHistory = [];\n\n  function formatNumber(input) {\n    let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n    let num = parseFloat(numStr);\n    return num.toFixed(2);\n  }\n\n  for (let i = 0; i < data.length; i++) {\n\n    function convertDateTime(dateTimeString) {\n      // Create a Date object from the input string (assuming UTC timezone)\n      const dateObj = new Date(dateTimeString);\n\n\n\n      // Get year, month, day, hours, minutes, and seconds\n      const year = dateObj.getFullYear();\n      const month = String(dateObj.getMonth() + 1).padStart(2, '0'); // Add leading zero for single-digit months\n      const day = String(dateObj.getDate()).padStart(2, '0');\n      const hours = String(dateObj.getHours()).padStart(2, '0');\n      const minutes = String(dateObj.getMinutes()).padStart(2, '0');\n      const seconds = String(dateObj.getSeconds()).padStart(2, '0');\n\n      // Format the date and time in the desired format\n      return `${day}-${month}-${year} ${hours}:${minutes}:${seconds}`;\n    }\n\n    // Sample input string\n    const dateTimeString = data[i].TIMESTAMP;\n\n    // Convert the date and time\n    const formattedDateTime = convertDateTime(dateTimeString);\n\n\n    let _aiPacket = {\n      TIMESTAMP: formattedDateTime,\n      COMM: data[i].RAWPACKETS.COMM,\n      DEVICEID: data[i].RAWPACKETS.DEVID,\n      DI01: data[i].RAWPACKETS.DI01,\n      DI02: data[i].RAWPACKETS.DI02,\n      DI03: data[i].RAWPACKETS.DI03,\n      DI04: data[i].RAWPACKETS.DI04,\n      DI05: data[i].RAWPACKETS.DI05,\n      DI06: data[i].RAWPACKETS.DI06,\n      DI07: data[i].RAWPACKETS.DI07,\n      DI08: data[i].RAWPACKETS.DI08,\n      DI09: data[i].RAWPACKETS.DI09,\n      DI10: data[i].RAWPACKETS.DI10,\n      DI11: data[i].RAWPACKETS.DI11,\n      DI12: data[i].RAWPACKETS.DI12\n    }\n    \n\n     if(_aiPacket.DI01 == 1){\n      _aiPacket.DI01 = 'On'\n    }else{\n      _aiPacket.DI01 = 'Off'\n    }\n\n    if (_aiPacket.DI02 == 1) {\n      _aiPacket.DI02 = 'On'\n    } else {\n      _aiPacket.DI02 = 'Off'\n    }\n\n\n     if (_aiPacket.DI03 == 1) {\n      _aiPacket.DI03 = 'On'\n    } else {\n      _aiPacket.DI03 = 'Off'\n    }\n\n     if (_aiPacket.DI04 == 1) {\n      _aiPacket.DI04 = 'On'\n    } else {\n      _aiPacket.DI04 = 'Off'\n    }\n\n     if (_aiPacket.DI05 == 1) {\n      _aiPacket.DI05 = 'On'\n    } else {\n      _aiPacket.DI05 = 'Off'\n    }\n\n     if (_aiPacket.DI06 == 1) {\n      _aiPacket.DI06 = 'On'\n    } else {\n      _aiPacket.DI06 = 'Off'\n    }\n\n     if (_aiPacket.DI07 == 1) {\n      _aiPacket.DI07 = 'On'\n    } else {\n      _aiPacket.DI07 = 'Off'\n    }\n\n     if (_aiPacket.DI08 == 1) {\n      _aiPacket.DI08 = 'On'\n    } else {\n      _aiPacket.DI08 = 'Off'\n    }\n\n     if (_aiPacket.DI09 == 1) {\n      _aiPacket.DI09 = 'On'\n    } else {\n      _aiPacket.DI09 = 'Off'\n    }\n\n     if (_aiPacket.DI10 == 1) {\n      _aiPacket.DI10 = 'On'\n    } else {\n      _aiPacket.DI10 = 'Off'\n    }\n\n     if (_aiPacket.DI11 == 1) {\n      _aiPacket.DI11 = 'On'\n    } else {\n      _aiPacket.DI11 = 'Off'\n    }\n\n     if (_aiPacket.DI12 == 1) {\n      _aiPacket.DI12 = 'On'\n    } else {\n      _aiPacket.DI12 = 'Off'\n    }\n\n    _aiHistory.push(_aiPacket);\n  }\n\n  msg.payload = _aiHistory;\n\n  return msg;\n\n}\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 320,
        "wires": [
            [
                "0f7ac1a07eb7b3b1",
                "e7d0552442e57199",
                "7095337ae8623478"
            ]
        ]
    },
    {
        "id": "e7d0552442e57199",
        "type": "excel",
        "z": "8ef2b9c6e0a1e471",
        "name": "Excel file",
        "file": "d:\\VaibhavWorkSpace\\datafrommysql.xlsx",
        "x": 1460,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "8ee6625e81c78422",
        "type": "ui_table",
        "z": "8ef2b9c6e0a1e471",
        "group": "a63dce05bd491489",
        "name": "",
        "order": 10,
        "width": 30,
        "height": 10,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1470,
        "y": 420,
        "wires": []
    },
    {
        "id": "0f7ac1a07eb7b3b1",
        "type": "ui_template",
        "z": "8ef2b9c6e0a1e471",
        "group": "a63dce05bd491489",
        "name": "",
        "order": 3,
        "width": 3,
        "height": 1,
        "format": "<style>\n   .tabulator-col-content{\n    background-color: green !important;\n    padding: 10px;\n   }\n    </style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1300,
        "y": 420,
        "wires": [
            [
                "8ee6625e81c78422"
            ]
        ]
    },
    {
        "id": "5cc7a6606a59ef55",
        "type": "ui_button",
        "z": "8ef2b9c6e0a1e471",
        "name": "Home Button",
        "group": "a63dce05bd491489",
        "order": 7,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-home fa-3x",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 850,
        "y": 200,
        "wires": [
            [
                "f96745e2cb7a5f42"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "f96745e2cb7a5f42",
        "type": "change",
        "z": "8ef2b9c6e0a1e471",
        "name": "link tabs change node",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Digital Inputs\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 200,
        "wires": [
            [
                "22f7a0a4285e00c3"
            ]
        ]
    },
    {
        "id": "22f7a0a4285e00c3",
        "type": "ui_ui_control",
        "z": "8ef2b9c6e0a1e471",
        "name": "",
        "events": "all",
        "x": 1340,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "ae5947ef138adf6c",
        "type": "ui_template",
        "z": "8ef2b9c6e0a1e471",
        "group": "a63dce05bd491489",
        "name": "Template",
        "order": 5,
        "width": 3,
        "height": 1,
        "format": "\n<style>\n\n        form {\n          display: flex;\n          flex-direction: row;\n          flex-wrap: nowrap !important;\n          align-items: center;\n          justify-content: space-between;\n          padding: 20px;\n          padding-bottom: 20px !important;\n            }\n\n\n        label {\n          font-weight: bolder;\n          font-size : 24px !important;\n          display: block;\n          margin: auto 5px auto 5px;\n          font-weight: bold;\n      \n        }\n\n        input[type=\"date\"] {\n          display: block !important;\n          /* width: 100% !important;  */\n          padding: 8px;\n          border: 1px solid #ccc;\n          border-radius: 3px;\n          padding: 10px;\n        }\n\n        .ng-pristine ng-invalid ng-invalid-required{\n            display: flex;\n            justify-content:space-between;\n            align-item: center;\n            flex-direction: row;\n\n        }\n      .nr-dashboard-form .formElement {\n          /* width: 238px !important; */\n          margin-top: 20px;\n\n      }\n\n      .nr-dashboard-form .form-control {\n          /* width: 96% !important; */\n          display: flex;\n          justify-content: flex-start;\n          margin-top: -20px;\n      }\n\n      .nr-dashboard-form form{\n        flex-wrap : nowrap !important;\n      }\n\n      .nr-dashboard-form-button{\n        width : auto !important;\n      }\n\ninput,button{\n  width : 100% !important;\n  padding: 20px;\n}\n\nmd-input-container, form div{\n  width: 300px !important;\n  \n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 80,
        "y": 320,
        "wires": [
            [
                "146f3fb6f0974622"
            ]
        ]
    },
    {
        "id": "146f3fb6f0974622",
        "type": "ui_form",
        "z": "8ef2b9c6e0a1e471",
        "name": "",
        "label": "",
        "group": "a63dce05bd491489",
        "order": 9,
        "width": 30,
        "height": 1,
        "options": [
            {
                "label": "StartDate",
                "value": "startDate",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "EndDate",
                "value": "endDate",
                "type": "date",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "startDate": "",
            "endDate": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 270,
        "y": 320,
        "wires": [
            [
                "4133d89a8324da5e"
            ]
        ]
    },
    {
        "id": "f6c1ffed266a9694",
        "type": "ui_text",
        "z": "8ef2b9c6e0a1e471",
        "group": "a63dce05bd491489",
        "order": 1,
        "width": 13,
        "height": 1,
        "name": "Digital Input Reports",
        "label": "<b><font size = 6>Digital Input  Report</b>",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 860,
        "y": 140,
        "wires": []
    },
    {
        "id": "ed9ef8f5c3c39a05",
        "type": "inject",
        "z": "8ef2b9c6e0a1e471",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 260,
        "wires": [
            [
                "37b8568b715ccf0e"
            ]
        ]
    },
    {
        "id": "37b8568b715ccf0e",
        "type": "function",
        "z": "8ef2b9c6e0a1e471",
        "name": "AccessingDataFromDB",
        "func": "\n\n    msg.topic = \"select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'DI' order by TIMESTAMP DESC LIMIT 20;\"\n    return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 260,
        "wires": [
            [
                "c3aac0976604f74f"
            ]
        ]
    },
    {
        "id": "e5eb4a1c63cdced0",
        "type": "ui_toast",
        "z": "8ef2b9c6e0a1e471",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1250,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "7095337ae8623478",
        "type": "function",
        "z": "8ef2b9c6e0a1e471",
        "name": "function 90",
        "func": "if(msg.msg){\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 500,
        "wires": [
            [
                "e5eb4a1c63cdced0"
            ]
        ]
    },
    {
        "id": "6d20673dd351214a",
        "type": "function",
        "z": "f08276ee447f37b8",
        "name": "AccessingDataFromDB",
        "func": "if (msg.type) {\n\n    var startdate = msg.payload.startDate;\n    var enddate = msg.payload.endDate\n    function extractDate(dateString) {\n        // Parse the input date string with timezone information\n        const inputDate = new Date(dateString);\n\n        // Extract the date part without time\n        const outputDate = inputDate.toISOString().slice(0, 10);\n\n        return outputDate;\n    }\n\n    // Define two input date strings\n    const inputDateStr1 = startdate;\n\n    const inputDateStr2 = enddate;\n\n    // Extract and print the date parts\n    var outputDate1 = extractDate(inputDateStr1);\n    var outputDate2 = extractDate(inputDateStr2);\n\n\n    var startdt = outputDate1;\n    var enddt = outputDate2;\n\n    msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where TIMESTAMP between \"${startdt + ' 00:00:00'}\"  and  \"${enddt + ' 23:59:59'}\" AND  IOTYPE = 'DO';`\n    // msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'AI';`\n    return msg;\n\n} else {\n\n    var startdate = msg.payload.startDate;\n    var enddate = msg.payload.endDate\n    function extractDate(dateString) {\n        // Parse the input date string with timezone information\n        const inputDate = new Date(dateString);\n\n        // Extract the date part without time\n        const outputDate = inputDate.toISOString().slice(0, 10);\n\n        return outputDate;\n    }\n\n    // Define two input date strings\n    const inputDateStr1 = startdate;\n\n    const inputDateStr2 = enddate;\n\n    // Extract and print the date parts\n    var outputDate1 = extractDate(inputDateStr1);\n    var outputDate2 = extractDate(inputDateStr2);\n\n    function getNextDay(dateString) {\n        // Create a Date object from the provided string\n        var date = new Date(dateString);\n\n        // Add one day to the date\n        date.setDate(date.getDate() + 1);\n\n        // Format the date in YYYY-MM-DD format\n        var nextDay = date.toISOString().slice(0, 10);\n\n        return nextDay;\n    }\n\n    // Example usage:\n    var todayString = outputDate1; // Replace with your dynamic string\n    var tomorrow = getNextDay(todayString);\n    var startdt = tomorrow;\n\n    var lastdayString = outputDate2;\n    var lastday = getNextDay(lastdayString);\n\n    var enddt = lastday;\n\n    msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where TIMESTAMP between \"${startdt + ' 00:00:00'}\"  and  \"${enddt + ' 23:59:59'}\" AND  IOTYPE = 'DO';`\n    // msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'AI';`\n    return msg;\n\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 360,
        "wires": [
            [
                "edf97005d16cf013"
            ]
        ]
    },
    {
        "id": "edf97005d16cf013",
        "type": "mysql",
        "z": "f08276ee447f37b8",
        "mydb": "ea4292e54e9739dd",
        "name": "Database",
        "x": 780,
        "y": 360,
        "wires": [
            [
                "86e28ff85155d35f"
            ]
        ]
    },
    {
        "id": "86e28ff85155d35f",
        "type": "function",
        "z": "f08276ee447f37b8",
        "name": "WorkingOnDataReceiveFromDB",
        "func": "\nvar data = msg.payload;\nvar len = data.length;\nif(len == 0){\nmsg.payload = \"No Record Found \";\nmsg.topic = '';\nmsg.msg = 1;\nreturn msg;\n}else{\n\n  var _aiHistory = [];\n  for (let i = 0; i < data.length; i++) {\n\n    function convertDateTime(dateTimeString) {\n      // Create a Date object from the input string (assuming UTC timezone)\n      const dateObj = new Date(dateTimeString);\n\n      // Get year, month, day, hours, minutes, and seconds\n      const year = dateObj.getFullYear();\n      const month = String(dateObj.getMonth() + 1).padStart(2, '0'); // Add leading zero for single-digit months\n      const day = String(dateObj.getDate()).padStart(2, '0');\n      const hours = String(dateObj.getHours()).padStart(2, '0');\n      const minutes = String(dateObj.getMinutes()).padStart(2, '0');\n      const seconds = String(dateObj.getSeconds()).padStart(2, '0');\n\n      // Format the date and time in the desired format\n      return `${day}-${month}-${year} ${hours}:${minutes}:${seconds}`;\n    }\n\n    function formatNumber(input) {\n      let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n      let num = parseFloat(numStr);\n      return num.toFixed(2);\n    }\n\n    // Sample input string\n    const dateTimeString = data[i].TIMESTAMP;\n\n    // Convert the date and time\n    const formattedDateTime = convertDateTime(dateTimeString);\n\n    let _aiPacket = {\n      TIMESTAMP: formattedDateTime,\n      COMM: data[i].RAWPACKETS.COMM,\n      DEVICEID: data[i].RAWPACKETS.DEVID,\n      DO01: data[i].RAWPACKETS.DO01,\n      DO02: data[i].RAWPACKETS.DO02,\n      DO03: data[i].RAWPACKETS.DO03,\n      DO04: data[i].RAWPACKETS.DO04,\n      DO05: data[i].RAWPACKETS.DO05,\n      DO06: data[i].RAWPACKETS.DO06,\n      DO07: data[i].RAWPACKETS.DO07,\n      DO08: data[i].RAWPACKETS.DO08,\n      DO09: data[i].RAWPACKETS.DO09,\n      DO10: data[i].RAWPACKETS.DO10,\n      DO11: data[i].RAWPACKETS.DO11,\n      DO12: data[i].RAWPACKETS.DO12,\n\n    }\n    \n    if(_aiPacket.DO01 == 1){\n      _aiPacket.DO01 = 'On'\n    }else{\n      _aiPacket.DO01 = 'Off'\n    }\n\n    if (_aiPacket.DO02 == 1) {\n      _aiPacket.DO02 = 'On'\n    } else {\n      _aiPacket.DO02 = 'Off'\n    }\n\n\n     if (_aiPacket.DO03 == 1) {\n      _aiPacket.DO03 = 'On'\n    } else {\n      _aiPacket.DO03 = 'Off'\n    }\n\n     if (_aiPacket.DO04 == 1) {\n      _aiPacket.DO04 = 'On'\n    } else {\n      _aiPacket.DO04 = 'Off'\n    }\n\n     if (_aiPacket.DO05 == 1) {\n      _aiPacket.DO05 = 'On'\n    } else {\n      _aiPacket.DO05 = 'Off'\n    }\n\n     if (_aiPacket.DO06 == 1) {\n      _aiPacket.DO06 = 'On'\n    } else {\n      _aiPacket.DO06 = 'Off'\n    }\n\n     if (_aiPacket.DO07 == 1) {\n      _aiPacket.DO07 = 'On'\n    } else {\n      _aiPacket.DO07 = 'Off'\n    }\n\n     if (_aiPacket.DO08 == 1) {\n      _aiPacket.DO08 = 'On'\n    } else {\n      _aiPacket.DO08 = 'Off'\n    }\n\n     if (_aiPacket.DO09 == 1) {\n      _aiPacket.DO09 = 'On'\n    } else {\n      _aiPacket.DO09 = 'Off'\n    }\n\n     if (_aiPacket.DO10 == 1) {\n      _aiPacket.DO10 = 'On'\n    } else {\n      _aiPacket.DO10 = 'Off'\n    }\n\n     if (_aiPacket.DO11 == 1) {\n      _aiPacket.DO11 = 'On'\n    } else {\n      _aiPacket.DO11 = 'Off'\n    }\n\n     if (_aiPacket.DO12 == 1) {\n      _aiPacket.DO12 = 'On'\n    } else {\n      _aiPacket.DO12 = 'Off'\n    }\n\n\n    _aiHistory.push(_aiPacket);\n  }\n\n  msg.payload = _aiHistory;\n\n  return msg;\n\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 360,
        "wires": [
            [
                "b9ad55ba531b331b",
                "6c3971c5a42c18ef",
                "300d4fa88c2232da"
            ]
        ]
    },
    {
        "id": "6c3971c5a42c18ef",
        "type": "excel",
        "z": "f08276ee447f37b8",
        "name": "Excel file",
        "file": "d:\\VaibhavWorkSpace\\New Microsoft Excel Worksheet.xlsx",
        "x": 1500,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "ad472b2a14dee44a",
        "type": "ui_table",
        "z": "f08276ee447f37b8",
        "group": "edb81bbef5b2de26",
        "name": "",
        "order": 9,
        "width": 30,
        "height": 9,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1510,
        "y": 420,
        "wires": []
    },
    {
        "id": "b9ad55ba531b331b",
        "type": "ui_template",
        "z": "f08276ee447f37b8",
        "group": "edb81bbef5b2de26",
        "name": "",
        "order": 4,
        "width": 3,
        "height": 1,
        "format": "<style>\n   .tabulator-col-content{\n    background-color: green !important;\n    padding: 10px;\n   }\n    </style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1320,
        "y": 420,
        "wires": [
            [
                "ad472b2a14dee44a"
            ]
        ]
    },
    {
        "id": "9d9c6ee877ffc032",
        "type": "ui_button",
        "z": "f08276ee447f37b8",
        "name": "Home Button",
        "group": "edb81bbef5b2de26",
        "order": 6,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-home fa-3x",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 950,
        "y": 180,
        "wires": [
            [
                "cac05f7206ca628b"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "cac05f7206ca628b",
        "type": "change",
        "z": "f08276ee447f37b8",
        "name": "link tabs change node",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Digital Outputs\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 180,
        "wires": [
            [
                "c518fbdc9f8ec59a"
            ]
        ]
    },
    {
        "id": "c518fbdc9f8ec59a",
        "type": "ui_ui_control",
        "z": "f08276ee447f37b8",
        "name": "",
        "events": "all",
        "x": 1440,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "4485a657c4acce04",
        "type": "ui_template",
        "z": "f08276ee447f37b8",
        "group": "edb81bbef5b2de26",
        "name": "AI01 Template",
        "order": 5,
        "width": 3,
        "height": 1,
        "format": "\n<style>\n\n        form {\n          display: flex;\n          flex-direction: row;\n          flex-wrap: nowrap !important;\n          align-items: center;\n          justify-content: space-between;\n          padding: 20px;\n          padding-bottom: 20px !important;\n            }\n\n\n        label {\n          font-weight: bolder;\n          font-size : 24px !important;\n          display: block;\n          margin: auto 5px auto 5px;\n          font-weight: bold;\n      \n        }\n\n        input[type=\"date\"] {\n          display: block !important;\n          /* width: 100% !important;  */\n          padding: 8px;\n          border: 1px solid #ccc;\n          border-radius: 3px;\n          padding: 10px;\n        }\n\n        .ng-pristine ng-invalid ng-invalid-required{\n            display: flex;\n            justify-content:space-between;\n            align-item: center;\n            flex-direction: row;\n\n        }\n      .nr-dashboard-form .formElement {\n          /* width: 238px !important; */\n          margin-top: 20px;\n\n      }\n\n      .nr-dashboard-form .form-control {\n          /* width: 96% !important; */\n          display: flex;\n          justify-content: flex-start;\n          margin-top: -20px;\n      }\n\n      .nr-dashboard-form form{\n        flex-wrap : nowrap !important;\n      }\n\n      .nr-dashboard-form-button{\n        width : auto !important;\n      }\n\ninput,button{\n  width : 100% !important;\n  padding: 20px;\n}\n\nmd-input-container, form div{\n  width: 300px !important;\n  \n}\n\n     \n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 80,
        "y": 360,
        "wires": [
            [
                "1f6f3788cc1e3466"
            ]
        ]
    },
    {
        "id": "1f6f3788cc1e3466",
        "type": "ui_form",
        "z": "f08276ee447f37b8",
        "name": "",
        "label": "",
        "group": "edb81bbef5b2de26",
        "order": 8,
        "width": 30,
        "height": 1,
        "options": [
            {
                "label": "StartDate",
                "value": "startDate",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "EndDate",
                "value": "endDate",
                "type": "date",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "startDate": "",
            "endDate": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 270,
        "y": 360,
        "wires": [
            [
                "6d20673dd351214a"
            ]
        ]
    },
    {
        "id": "ebb026ccd5d2d768",
        "type": "ui_text",
        "z": "f08276ee447f37b8",
        "group": "edb81bbef5b2de26",
        "order": 2,
        "width": 13,
        "height": 1,
        "name": "Digital Output Reports",
        "label": "<b><font size = 6>Digital Output  Report</b>",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 940,
        "y": 120,
        "wires": []
    },
    {
        "id": "ed404c77f3c55197",
        "type": "inject",
        "z": "f08276ee447f37b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 260,
        "wires": [
            [
                "0ef6190275f0c839"
            ]
        ]
    },
    {
        "id": "0ef6190275f0c839",
        "type": "function",
        "z": "f08276ee447f37b8",
        "name": "AccessingDataFromDB",
        "func": "\n\n    msg.topic = \"select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'DO' order by TIMESTAMP DESC LIMIT 20;\"\n    return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 260,
        "wires": [
            [
                "edf97005d16cf013"
            ]
        ]
    },
    {
        "id": "4681f838b033b904",
        "type": "ui_toast",
        "z": "f08276ee447f37b8",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1410,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "300d4fa88c2232da",
        "type": "function",
        "z": "f08276ee447f37b8",
        "name": "function 89",
        "func": "if(msg.msg){\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 540,
        "wires": [
            [
                "4681f838b033b904"
            ]
        ]
    },
    {
        "id": "89733edce486ce07",
        "type": "function",
        "z": "25c4b31e8f5c3feb",
        "name": "AccessingDataFromDB",
        "func": "if (msg.type) {\n\n    var startdate = msg.payload.startDate;\n    var enddate = msg.payload.endDate\n    function extractDate(dateString) {\n        // Parse the input date string with timezone information\n        const inputDate = new Date(dateString);\n\n        // Extract the date part without time\n        const outputDate = inputDate.toISOString().slice(0, 10);\n\n        return outputDate;\n    }\n\n    // Define two input date strings\n    const inputDateStr1 = startdate;\n\n    const inputDateStr2 = enddate;\n\n    // Extract and print the date parts\n    var outputDate1 = extractDate(inputDateStr1);\n    var outputDate2 = extractDate(inputDateStr2);\n\n\n    var startdt = outputDate1;\n    var enddt = outputDate2;\n\n    msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where TIMESTAMP between \"${startdt + ' 00:00:00'}\"  and  \"${enddt + ' 23:59:59'}\" AND  IOTYPE = 'E';`\n    // msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'AI';`\n    return msg;\n\n} else {\n\n    var startdate = msg.payload.startDate;\n    var enddate = msg.payload.endDate\n    function extractDate(dateString) {\n        // Parse the input date string with timezone information\n        const inputDate = new Date(dateString);\n\n        // Extract the date part without time\n        const outputDate = inputDate.toISOString().slice(0, 10);\n\n        return outputDate;\n    }\n\n    // Define two input date strings\n    const inputDateStr1 = startdate;\n\n    const inputDateStr2 = enddate;\n\n    // Extract and print the date parts\n    var outputDate1 = extractDate(inputDateStr1);\n    var outputDate2 = extractDate(inputDateStr2);\n\n    function getNextDay(dateString) {\n        // Create a Date object from the provided string\n        var date = new Date(dateString);\n\n        // Add one day to the date\n        date.setDate(date.getDate() + 1);\n\n        // Format the date in YYYY-MM-DD format\n        var nextDay = date.toISOString().slice(0, 10);\n\n        return nextDay;\n    }\n\n    // Example usage:\n    var todayString = outputDate1; // Replace with your dynamic string\n    var tomorrow = getNextDay(todayString);\n    var startdt = tomorrow;\n\n    var lastdayString = outputDate2;\n    var lastday = getNextDay(lastdayString);\n\n    var enddt = lastday;\n\n    msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where TIMESTAMP between \"${startdt + ' 00:00:00'}\"  and  \"${enddt + ' 23:59:59'}\" AND  IOTYPE = 'E';`\n    // msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'AI';`\n    return msg;\n\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 380,
        "wires": [
            [
                "5d0b34f7289bb914"
            ]
        ]
    },
    {
        "id": "5d0b34f7289bb914",
        "type": "mysql",
        "z": "25c4b31e8f5c3feb",
        "mydb": "ea4292e54e9739dd",
        "name": "Database",
        "x": 720,
        "y": 380,
        "wires": [
            [
                "359b15a649a36cdd"
            ]
        ]
    },
    {
        "id": "359b15a649a36cdd",
        "type": "function",
        "z": "25c4b31e8f5c3feb",
        "name": "WorkingOnDataReceiveFromDB",
        "func": "\n\nvar _aiHistory = [];\nvar data = msg.payload;\nvar len = data.length;\nif(len ===0){\nmsg.payload = \"No Record Found\";\nmsg.topic = \"\";\nmsg.msg = 1\nreturn msg;\n\n\n}else{\n  for (let i = 0; i < data.length; i++) {\n\n    function convertDateTime(dateTimeString) {\n      // Create a Date object from the input string (assuming UTC timezone)\n      const dateObj = new Date(dateTimeString);\n\n      // Get year, month, day, hours, minutes, and seconds\n      const year = dateObj.getFullYear();\n      const month = String(dateObj.getMonth() + 1).padStart(2, '0'); // Add leading zero for single-digit months\n      const day = String(dateObj.getDate()).padStart(2, '0');\n      const hours = String(dateObj.getHours()).padStart(2, '0');\n      const minutes = String(dateObj.getMinutes()).padStart(2, '0');\n      const seconds = String(dateObj.getSeconds()).padStart(2, '0');\n\n      // Format the date and time in the desired format\n      return `${day}-${month}-${year} ${hours}:${minutes}:${seconds}`;\n    }\n\n    function formatNumber(input) {\n      let numStr = input.replace(/^(-?)0+(?=\\d)/, '$1');\n      let num = parseFloat(numStr);\n      return num.toFixed(2);\n    }\n\n    // Sample input string\n    const dateTimeString = data[i].TIMESTAMP;\n\n    // Convert the date and time\n    const formattedDateTime = convertDateTime(dateTimeString);\n\n\n    let _aiPacket = {\n      TIMESTAMP: formattedDateTime,\n      COMM: data[i].RAWPACKETS.COMM,\n      DEVICEID: data[i].RAWPACKETS.DEVID,\n      Wh: data[i].RAWPACKETS.Wh,\n      PF: data[i].RAWPACKETS.PF,\n      Freq: data[i].RAWPACKETS.RV,\n      RV: data[i].RAWPACKETS.RV,\n      YV: data[i].RAWPACKETS.YV,\n      BV: data[i].RAWPACKETS.BV,\n      VLN: data[i].RAWPACKETS.VLN,\n      RA: data[i].RAWPACKETS.RA,\n      YA: data[i].RAWPACKETS.YA,\n      BA: data[i].RAWPACKETS.BA,\n      TA: data[i].RAWPACKETS.TA\n    }\n    var Devicid = parseInt(_aiPacket.DEVICEID);\n    _aiPacket.DEVICEID = Devicid;\n\n    var Comm = parseInt(_aiPacket.COMM);\n    _aiPacket.COMM = Comm;\n\n    var Wh = formatNumber(_aiPacket.Wh);\n    _aiPacket.Wh = parseInt(Wh);\n\n    var PF = formatNumber(_aiPacket.PF)\n    _aiPacket.PF = parseInt(PF);\n\n    var FREQ = formatNumber(_aiPacket.Freq);\n    _aiPacket.Freq = parseInt(FREQ);\n\n    var RV = formatNumber(_aiPacket.RV)\n    _aiPacket.RV = parseInt(RV);\n\n    var YV = formatNumber(_aiPacket.YV);\n    _aiPacket.YV = parseInt(YV);\n\n    var BV = formatNumber(_aiPacket.BV);\n    _aiPacket.BV = parseInt(BV);\n\n    var VLN = formatNumber(_aiPacket.VLN);\n    _aiPacket.VLN = parseInt(VLN);\n\n    var RA = formatNumber(_aiPacket.RA);\n    _aiPacket.RA = parseInt(RA);\n\n    var YA = formatNumber(_aiPacket.YA);\n    _aiPacket.YA = parseInt(YA);\n\n    var BA = formatNumber(_aiPacket.BA);\n    _aiPacket.BA = parseInt(BA);\n\n    var TA = formatNumber(_aiPacket.TA);\n    _aiPacket.TA = parseInt(TA);\n\n    _aiHistory.push(_aiPacket);\n  }\n  msg.payload = _aiHistory;\n\n  return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 380,
        "wires": [
            [
                "e96bce6bd3504a44",
                "d0225f74f63a1d20",
                "786c4fd14cd76ad5"
            ]
        ]
    },
    {
        "id": "d0225f74f63a1d20",
        "type": "excel",
        "z": "25c4b31e8f5c3feb",
        "name": "Excel file",
        "file": "d:\\VaibhavWorkSpace\\datafrommysql.xlsx",
        "x": 1660,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "15f7a7bcc1019b7d",
        "type": "ui_table",
        "z": "25c4b31e8f5c3feb",
        "group": "41333f3402391294",
        "name": "",
        "order": 13,
        "width": 30,
        "height": 10,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 970,
        "y": 440,
        "wires": []
    },
    {
        "id": "e96bce6bd3504a44",
        "type": "ui_template",
        "z": "25c4b31e8f5c3feb",
        "group": "41333f3402391294",
        "name": "",
        "order": 4,
        "width": 3,
        "height": 1,
        "format": "<style>\n   .tabulator-col-content{\n    background-color: green !important;\n    padding: 10px;\n   }\n    </style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 800,
        "y": 440,
        "wires": [
            [
                "15f7a7bcc1019b7d"
            ]
        ]
    },
    {
        "id": "c44cb2ae8449419f",
        "type": "ui_button",
        "z": "25c4b31e8f5c3feb",
        "name": "Home Button",
        "group": "41333f3402391294",
        "order": 7,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-home fa-3x",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 830,
        "y": 260,
        "wires": [
            [
                "05d3727c3ab1906b"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "05d3727c3ab1906b",
        "type": "change",
        "z": "25c4b31e8f5c3feb",
        "name": "link tabs change node",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Energy Meter\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 260,
        "wires": [
            [
                "66c23612651ed3c0"
            ]
        ]
    },
    {
        "id": "66c23612651ed3c0",
        "type": "ui_ui_control",
        "z": "25c4b31e8f5c3feb",
        "name": "",
        "events": "all",
        "x": 1320,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "9e332bc03a77c71a",
        "type": "ui_template",
        "z": "25c4b31e8f5c3feb",
        "group": "41333f3402391294",
        "name": "Template",
        "order": 2,
        "width": 3,
        "height": 1,
        "format": "\n<style>\n\n        form {\n          display: flex;\n          flex-direction: row;\n          flex-wrap: nowrap !important;\n          align-items: center;\n          justify-content: space-between;\n          padding: 20px;\n          padding-bottom: 20px !important;\n            }\n\n\n        label {\n          font-weight: bolder;\n          font-size : 24px !important;\n          display: block;\n          margin: auto 5px auto 5px;\n          font-weight: bold;\n      \n        }\n\n        input[type=\"date\"] {\n          display: block !important;\n          /* width: 100% !important;  */\n          padding: 8px;\n          border: 1px solid #ccc;\n          border-radius: 3px;\n          padding: 10px;\n        }\n\n        .ng-pristine ng-invalid ng-invalid-required{\n            display: flex;\n            justify-content:space-between;\n            align-item: center;\n            flex-direction: row;\n\n        }\n      .nr-dashboard-form .formElement {\n          /* width: 238px !important; */\n          margin-top: 20px;\n\n      }\n\n      .nr-dashboard-form .form-control {\n          /* width: 96% !important; */\n          display: flex;\n          justify-content: flex-start;\n          margin-top: -20px;\n      }\n\n      .nr-dashboard-form form{\n        flex-wrap : nowrap !important;\n      }\n\n      .nr-dashboard-form-button{\n        width : auto !important;\n      }\n\ninput,button{\n  width : 100% !important;\n  padding: 20px;\n}\n\nmd-input-container, form div{\n  width: 300px !important;\n  \n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 60,
        "y": 380,
        "wires": [
            [
                "930cfdf089d65604"
            ]
        ]
    },
    {
        "id": "930cfdf089d65604",
        "type": "ui_form",
        "z": "25c4b31e8f5c3feb",
        "name": "",
        "label": "",
        "group": "41333f3402391294",
        "order": 10,
        "width": 25,
        "height": 1,
        "options": [
            {
                "label": "StartDate",
                "value": "startDate",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "EndDate",
                "value": "endDate",
                "type": "date",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "startDate": "",
            "endDate": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 250,
        "y": 380,
        "wires": [
            [
                "89733edce486ce07"
            ]
        ]
    },
    {
        "id": "dc57c34374e17e30",
        "type": "ui_text",
        "z": "25c4b31e8f5c3feb",
        "group": "41333f3402391294",
        "order": 3,
        "width": 13,
        "height": 1,
        "name": "Energy M Reports",
        "label": "<b><font size = 6>Energy Monitoring System Reports</b>",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 510,
        "y": 500,
        "wires": []
    },
    {
        "id": "437bad5d23ee6763",
        "type": "ui_button",
        "z": "25c4b31e8f5c3feb",
        "name": "Energy Charts Button",
        "group": "41333f3402391294",
        "order": 6,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-bar-chart fa-3x",
        "payload": "MainDashboard",
        "payloadType": "flow",
        "topic": "topic",
        "topicType": "msg",
        "x": 860,
        "y": 300,
        "wires": [
            [
                "808387af3630f169"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "808387af3630f169",
        "type": "change",
        "z": "25c4b31e8f5c3feb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Energy Meter Chart Reports\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 300,
        "wires": [
            [
                "66c23612651ed3c0"
            ]
        ]
    },
    {
        "id": "7e01e80865db2d77",
        "type": "inject",
        "z": "25c4b31e8f5c3feb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 70,
        "y": 300,
        "wires": [
            [
                "a65b37dfab059654"
            ]
        ]
    },
    {
        "id": "5479ae9b6be007e5",
        "type": "function",
        "z": "25c4b31e8f5c3feb",
        "name": "function 81",
        "func": "var date = msg.payload;\n    date = new Date(date);\n    date = date.toISOString();\nvar msg = {};\nmsg.type = 1;\nmsg.payload = {\n    startDate : date,\n    endDate : date\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "a65b37dfab059654",
        "type": "function",
        "z": "25c4b31e8f5c3feb",
        "name": "AccessingDataFromDB",
        "func": "\n\n    msg.topic = \"select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'E' order by TIMESTAMP DESC LIMIT 20;\"\n    return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 300,
        "wires": [
            [
                "5d0b34f7289bb914"
            ]
        ]
    },
    {
        "id": "ca2556fd147c8dec",
        "type": "ui_toast",
        "z": "25c4b31e8f5c3feb",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1390,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "786c4fd14cd76ad5",
        "type": "function",
        "z": "25c4b31e8f5c3feb",
        "name": "function 87",
        "func": "if(msg.msg){\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 540,
        "wires": [
            [
                "ca2556fd147c8dec"
            ]
        ]
    },
    {
        "id": "d6c7e727e7e970b2",
        "type": "function",
        "z": "faed5b70a0f086fc",
        "name": "AccessingDataFromDB",
        "func": "\nvar startdate = msg.payload.StartDate;\n\nvar enddate = msg.payload.EndDate;\n\nvar value = msg.payload.Option;\n\n\nfunction extractDate(dateString) {\n    // Parse the input date string with timezone information\n    const inputDate = new Date(dateString);\n    // Extract the date part without time\n    const outputDate = inputDate.toISOString().slice(0, 10);\n    return outputDate;\n    \n}\n\n// Define two input date strings\nconst inputDateStr1 = startdate ;\nconst inputDateStr2 = enddate;\n\n// Extract and print the date parts\nvar outputDate1 = extractDate(inputDateStr1);\nvar outputDate2 = extractDate(inputDateStr2);\n\nmsg.value = value;\nmsg.topic = `select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${outputDate1 + ' 00:00:00'}\"  and  \"${outputDate2 +' 23:59:59'}\" AND IOTYPE = 'E';`\n// msg.topic = `select  RAWPACKETS from iotdevicedata where IOTYPE = 'E';`\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 300,
        "wires": [
            [
                "e27c18027537a47b"
            ]
        ]
    },
    {
        "id": "e27c18027537a47b",
        "type": "mysql",
        "z": "faed5b70a0f086fc",
        "mydb": "ea4292e54e9739dd",
        "name": "Database",
        "x": 860,
        "y": 300,
        "wires": [
            [
                "2a13ae4384e9468b"
            ]
        ]
    },
    {
        "id": "2a13ae4384e9468b",
        "type": "function",
        "z": "faed5b70a0f086fc",
        "name": "WorkingOnDataReceiveFromDB",
        "func": "\nvar data = msg.payload;\nvar len = data.length;\nconsole.log(\"len\");\nconsole.log(len);\nif(len==0){\n  msg.payload = \"No Record Found\";\n  msg.topic = '';\n  msg.msg = 1;\n  return msg;\n}else{\n\nvar option = msg.value;\n\n  var _aiHistory = [];\n\nfor (let i = 0; i < data.length; i++){\n\n    let _aiPacket = {\n        a      : option,\n        x      : data[i].TIMESTAMP,  \n        y      : data[i].RAWPACKETS[option]\n    }\n\n  function convertDateTimeToMillisec(dateTimeString) {\n    // Parse the date and time string\n    const dateObject = new Date(dateTimeString);\n\n    // Get the milliseconds since epoch\n    const milliseconds = dateObject.getTime();\n\n    return milliseconds;\n  }\n\n  // Example usage\n  const dateTimeString = _aiPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n  \n  _aiPacket.x = milliseconds;\n\n  _aiHistory.push(_aiPacket);\n}\n\nmsg.payload = [{\n  \"series\": [option],\n    \"data\": [\n        _aiHistory\n    ],\n    \"labels\": [\"\"]\n}]\nmsg.msg = 0;\nreturn msg;\n}\n\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 300,
        "wires": [
            [
                "2af33a0598ff587d",
                "61d850409836906a",
                "60f6a62ccbfb4b14"
            ]
        ]
    },
    {
        "id": "d2a0437ae2f3db6c",
        "type": "ui_chart",
        "z": "faed5b70a0f086fc",
        "name": "Chart",
        "group": "511b53e5bae63045",
        "order": 12,
        "width": 28,
        "height": 14,
        "label": "<font size=5>Chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "DD-MM-YYYY HH:MM:SS",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#4ba0e2",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1570,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "8ec2d01836059c0d",
        "type": "function",
        "z": "faed5b70a0f086fc",
        "name": "function 50",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 300,
        "wires": [
            [
                "d6c7e727e7e970b2"
            ]
        ]
    },
    {
        "id": "c7568c05efc20f9e",
        "type": "ui_template",
        "z": "faed5b70a0f086fc",
        "group": "511b53e5bae63045",
        "name": "",
        "order": 7,
        "width": 28,
        "height": 4,
        "format": "<script>    \n    this.scope.collectDataFromInput = function (){\n        var obj = {};\n        obj.StartDate = document.getElementById(\"statrtdt\").value;\n        obj.EndDate = document.getElementById(\"enddt\").value;\n        obj.Option = document.getElementById(\"select\").value;\n        return obj;\n    }\n</script> \n<form>\n    <label>Start Date </label>\n        <input type=\"date\" id=\"statrtdt\" >\n        <label>End Date </label>\n        <input type=\"date\" id=\"enddt\">\n        <label>Parameter</label>\n        <select id=\"select\">\n        <option>Wh</option>\n        <option>PF</option>\n        <option>Freq</option>\n        <option>TA</option>\n        <option>BA</option>\n        <option>RA</option>\n        <option>YA</option>\n        <option>RV</option>\n        <option>YV</option>\n        <option>BV</option>\n        <option>VLN</option>\n    </select>\n    <button ng-click=\"send({payload:collectDataFromInput()})\"> Submit</button>\n</form>\n\n<style>\n    form {\n        min-width:990px;\n        margin:auto;\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-between !important;\n        /* margin: 20px auto;  */\n        /* border: 1px solid #ccc;\n        border-radius: 5px; */\n        padding: 20px;\n        padding-bottom: 20px !important;\n        /* margin: 10px ; */\n    }\n\n    label {\n        font-weight: bolder;\n        font-size: 18px !important;\n        display: block;\n        /* Display labels on new lines */\n        margin: auto 5px auto 5px;\n        /* margin-bottom: 5px; Add space between labels and inputs */\n        font-weight: bold;\n        /* Emphasize labels */\n        margin-left: 20px;\n    }\n\n    /* Input styling */\n    input[type=\"date\"], select{\n        display: block !important;\n        width: 100% !important; //Make inputs fill the available space\n        padding: 8px;\n        /* Add padding for comfort */\n        border: 1px solid #ccc;\n        /* Consistent border style */\n        border-radius: 3px;\n        /* Rounded corners for inputs */\n        padding: 10px;\n        text-align: center;\n    }\n    input[type=\"date\"]:placeholder{\n        font-size: 20px;\n    }\n   \n   /* select{\n       margin-left: 20px;\n   } */\n button{\n    background-color: #4CAF50;\n     Green\n    color: white;\n    padding: 15px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    margin: 4px 30px 2px;\n    cursor: pointer;\n    border: none;\n    width: 100px;\n    /* margin-left: 20px; */\n  }\n\nbutton:hover{\n    background-color: #56fc03;\n}\n  \n    /* Adjusting label spacing (optional) */\n    label:nth-child(even) {\n        /* Target every other label (for even spacing) */\n        margin-right: 10px;\n        /* Add some space between label and colon */\n    } \n\n    button, input, select, textarea,label {\n    font-size: 146% !important;\n    }\n    </style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 200,
        "y": 300,
        "wires": [
            [
                "8ec2d01836059c0d"
            ]
        ]
    },
    {
        "id": "2af33a0598ff587d",
        "type": "excel",
        "z": "faed5b70a0f086fc",
        "name": "Excel file",
        "file": "d:\\VaibhavWorkSpace\\datafrommysql.xlsx",
        "x": 1560,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "88b1ca0e895ba580",
        "type": "ui_text",
        "z": "faed5b70a0f086fc",
        "group": "511b53e5bae63045",
        "order": 28,
        "width": 0,
        "height": 0,
        "name": "Blank Text",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 270,
        "y": 380,
        "wires": []
    },
    {
        "id": "520dfe933423a618",
        "type": "ui_button",
        "z": "faed5b70a0f086fc",
        "name": "HomeButton",
        "group": "511b53e5bae63045",
        "order": 5,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-home fa-2x",
        "payload": "MainDashboard",
        "payloadType": "flow",
        "topic": "topic",
        "topicType": "msg",
        "x": 930,
        "y": 100,
        "wires": [
            [
                "a6f850c2c1d55d7c"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "a6f850c2c1d55d7c",
        "type": "change",
        "z": "faed5b70a0f086fc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Energy Meter\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 100,
        "wires": [
            [
                "9da8a8701ad7aa04"
            ]
        ]
    },
    {
        "id": "58e9a9b904cea205",
        "type": "ui_button",
        "z": "faed5b70a0f086fc",
        "name": "Energy Reports Button",
        "group": "511b53e5bae63045",
        "order": 4,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-solid fa-table fa-2x",
        "payload": "MainDashboard",
        "payloadType": "flow",
        "topic": "topic",
        "topicType": "msg",
        "x": 960,
        "y": 160,
        "wires": [
            [
                "49b3e9c213925330"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "49b3e9c213925330",
        "type": "change",
        "z": "faed5b70a0f086fc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Energy Meter Reports\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 160,
        "wires": [
            [
                "9da8a8701ad7aa04"
            ]
        ]
    },
    {
        "id": "9da8a8701ad7aa04",
        "type": "ui_ui_control",
        "z": "faed5b70a0f086fc",
        "name": "",
        "events": "all",
        "x": 1560,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "5bb7eff3137d46c1",
        "type": "ui_text",
        "z": "faed5b70a0f086fc",
        "group": "511b53e5bae63045",
        "order": 2,
        "width": 13,
        "height": 1,
        "name": "EMS",
        "label": "<b><font size = 6>Energy Monitoring System Report Chart</b>",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 750,
        "y": 140,
        "wires": []
    },
    {
        "id": "0f2c8299e3c34c5e",
        "type": "inject",
        "z": "faed5b70a0f086fc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 220,
        "wires": [
            [
                "657ab00d32f34aa0"
            ]
        ]
    },
    {
        "id": "657ab00d32f34aa0",
        "type": "function",
        "z": "faed5b70a0f086fc",
        "name": "AccessingDataFromDB",
        "func": "\n    msg.value = 'Wh';\n    msg.topic = \"select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'E' order by TIMESTAMP DESC LIMIT 20;\"\n    return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 220,
        "wires": [
            [
                "e27c18027537a47b"
            ]
        ]
    },
    {
        "id": "61d850409836906a",
        "type": "function",
        "z": "faed5b70a0f086fc",
        "name": "function 86",
        "func": "if(msg.msg==1){\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 540,
        "wires": [
            [
                "75cdeb2086ad3418"
            ]
        ]
    },
    {
        "id": "75cdeb2086ad3418",
        "type": "ui_toast",
        "z": "faed5b70a0f086fc",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1550,
        "y": 540,
        "wires": [
            [
                "37cf6b7432362a80"
            ]
        ]
    },
    {
        "id": "60f6a62ccbfb4b14",
        "type": "function",
        "z": "faed5b70a0f086fc",
        "name": "function 93",
        "func": "if(msg.msg==0){\nreturn msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 420,
        "wires": [
            [
                "d2a0437ae2f3db6c"
            ]
        ]
    },
    {
        "id": "37cf6b7432362a80",
        "type": "function",
        "z": "faed5b70a0f086fc",
        "name": "function 94",
        "func": "msg.payload = [];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 540,
        "wires": [
            [
                "d2a0437ae2f3db6c"
            ]
        ]
    },
    {
        "id": "7c2f610fb7b87e6d",
        "type": "ui_text",
        "z": "8fb86a9dc773c141",
        "g": "4070b953011d2414",
        "group": "9c2b5219b658e16a",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "AI01",
        "label": "<b><font size=5px>AI01</b>",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 350,
        "y": 320,
        "wires": []
    },
    {
        "id": "6be7ee57b67b2561",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "g": "4070b953011d2414",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nif(data[0]){\n\nvar _ai01History = [];\nfor (let i = 0; i < data.length; i++){\n\n    let _aiPacket = {\n        x      : data[i].TIMESTAMP,  \n        y      : data[i].RAWPACKETS.AI01\n    }\n\n  function convertDateTimeToMillisec(dateTimeString) {\n    // Parse the date and time string\n    const dateObject = new Date(dateTimeString);\n\n    // Get the milliseconds since epoch\n    const milliseconds = dateObject.getTime();\n\n    return milliseconds;\n  }\n\n  // Example usage\n  const dateTimeString = _aiPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n  \n  _aiPacket.x = milliseconds;\n\n    _ai01History.push(_aiPacket);\n}\n\nmsg.payload = [{\n    \"series\": [\"A\"],\n    \"data\": [\n        _ai01History\n    ],\n    \"labels\": [\"\"]\n}]\n\nreturn msg;\n}\nelse{\n  msg.payload = 1;\n  return msg;\n}\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 220,
        "wires": [
            [
                "2fa952376df75ad4",
                "06f4a841d4b12137"
            ]
        ]
    },
    {
        "id": "43c3ce145ccebe59",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "g": "4070b953011d2414",
        "name": "Accessing Data From DB",
        "func": "var startdate = msg.payload.StartDate;\nvar enddate = msg.payload.EndDate;\n\nmsg.topic = `select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${startdate + 'T00:00:00'}\"  and  \"${enddate +'T23:59:59'}\" AND IOTYPE = 'AI';`\n// console.log(`AI01: select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${outputDate1 + 'T00:00:00'}\"  and  \"${outputDate2 +'T23:59:59'}\" AND IOTYPE = 'AI';`);\n// msg.topic = `select  RAWPACKETS from iotdevicedata where IOTYPE = 'E';`\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 340,
        "wires": [
            [
                "7add3a842c24fe5e"
            ]
        ]
    },
    {
        "id": "7add3a842c24fe5e",
        "type": "mysql",
        "z": "8fb86a9dc773c141",
        "g": "4070b953011d2414",
        "mydb": "ea4292e54e9739dd",
        "name": "Database",
        "x": 1060,
        "y": 220,
        "wires": [
            [
                "6be7ee57b67b2561"
            ]
        ]
    },
    {
        "id": "5d38e399e35b7448",
        "type": "ui_template",
        "z": "8fb86a9dc773c141",
        "g": "4070b953011d2414",
        "group": "9c2b5219b658e16a",
        "name": "AI01 Template",
        "order": 1,
        "width": 3,
        "height": 1,
        "format": "<!-- <script>\n  this.scope.collectDataFromInput = function (){\n        var obj1 = {};\n        obj1.StartDate = document.getElementById(\"statrtdt\").value;\n        obj1.EndDate = document.getElementById(\"enddt\").value;\n        return obj1;\n    }\n\n</script> -->\n\n\n<style>\n\n  form {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    /* margin: 20px auto;  */\n    /* border: 1px solid #ccc;\n    border-radius: 5px; */\n    padding: 20px;\n    padding-bottom: 20px !important;\n    /* margin: 10px ; */\n  }\n\n  /* Label styling */\n\n  label {\n    font-weight: bolder;\n    font-size : 24px !important;\n    display: block;\n    /* Display labels on new lines */\n    margin: auto 5px auto 5px;\n    /* margin-bottom: 5px; Add space between labels and inputs */\n    font-weight: bold;\n    /* Emphasize labels */\n  }\n\n\n  /* Input styling */\n  input[type=\"date\"] {\n    display: block !important;\n    width: 100% !important; //Make inputs fill the available space\n    padding: 8px;\n    /* Add padding for comfort */\n    border: 1px solid #ccc;\n    /* Consistent border style */\n    border-radius: 3px;\n    /* Rounded corners for inputs */\n    padding: 10px;\n  }\n\n\n  /* Button styling\n  #submitBtnAi01{\n    background-color: #4CAF50;\n    /* Green */\n    /* color: white;\n    padding: 15px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n    margin: 4px 10px 2px;\n    cursor: pointer;\n    border: none;\n    width: 100px;\n  } */ */\n\n/* <!-- \n  #submitBtnAi01:hover {\n    background-color: #25b87f;\n  } --> */\n\n\n  /* Adjusting label spacing (optional) */\n  label:nth-child(even) {\n    /* Target every other label (for even spacing) */\n    margin-right: 10px;\n    /* Add some space between label and colon */\n  }\n\n  .ng-pristine ng-invalid ng-invalid-required{\n      display: flex;\n      justify-content:space-between;\n      align-item: center;\n      flex-direction: row;\n\n  }\n.nr-dashboard-form .formElement {\n    width: 238px !important;\n    margin-top: 20px;\n    /* margin-left: 6px; */\n    /* margin-right: 6px; */\n}\n/* ui-card-panel{\n  margin: 20px !important;\n} */\n\n.nr-dashboard-form .form-control {\n    width: 96% !important;\n    display: flex;\n    justify-content: flex-start;\n    margin-top: -20px;\n}\n\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 140,
        "y": 260,
        "wires": [
            [
                "b216f85f078f923c"
            ]
        ]
    },
    {
        "id": "ad6edddc673ed4f9",
        "type": "ui_chart",
        "z": "8fb86a9dc773c141",
        "g": "4070b953011d2414",
        "name": "",
        "group": "9c2b5219b658e16a",
        "order": 6,
        "width": 10,
        "height": 5,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "DD-MM-YYYY HH:MM:SS",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1870,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "b1190d38c4de2934",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "g": "4070b953011d2414",
        "name": "function 54",
        "func": "var inputstartdate   = msg.payload.startDateAI01;\nvar inputenddate     = msg.payload.endDateAI01;\n\nfunction extractDate(dateString) {\n    const inputDate = new Date(dateString);\n\n    // Extract the date part without time\n    const outputDate = inputDate.toISOString().slice(0, 10);\n\n    return outputDate;\n}\n\n\n// Define two input date strings\nconst inputDateStr1 = inputstartdate;\n\nconst inputDateStr2 = inputenddate;\n\n\n// Extract and print the date parts\nvar outputDate1 = extractDate(inputDateStr1);\nvar outputDate2 = extractDate(inputDateStr2);\n\nfunction getNextDay(dateString) {\n    // Create a Date object from the provided string\n    var date = new Date(dateString);\n\n    // Add one day to the date\n    date.setDate(date.getDate() + 1);\n\n    // Format the date in YYYY-MM-DD format\n    var nextDay = date.toISOString().slice(0, 10);\n\n    return nextDay;\n}\n\n// Example usage:\nvar todayString = outputDate1; // Replace with your dynamic string\nvar tomorrow = getNextDay(todayString);\nvar StartDate = tomorrow;\n\nvar lastdayString = outputDate2;\nvar lastday = getNextDay(lastdayString);\nvar EndDate = lastday;\n\n// msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where TIMESTAMP between \"${startdt + ' 00:00:00'}\"  and  \"${enddt + ' 23:59:59'}\" AND  IOTYPE = 'AI';`\n// // msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'AI';`\n\n\nmsg.payload = {StartDate,EndDate}\nconsole.log(\"Special Msg\");\nconsole.log(msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 340,
        "wires": [
            [
                "43c3ce145ccebe59"
            ]
        ]
    },
    {
        "id": "2fa952376df75ad4",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "g": "4070b953011d2414",
        "name": "function 55",
        "func": "if (msg.payload == 1){\n    msg.payload = \"No Record Found\";\n    msg.topic = '';\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 440,
        "wires": [
            [
                "c00561ef57cae134"
            ]
        ]
    },
    {
        "id": "c00561ef57cae134",
        "type": "ui_toast",
        "z": "8fb86a9dc773c141",
        "g": "4070b953011d2414",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1870,
        "y": 440,
        "wires": [
            [
                "85bc1b8820d3b4b6"
            ]
        ]
    },
    {
        "id": "06f4a841d4b12137",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "g": "4070b953011d2414",
        "name": "function 56",
        "func": "if(msg.payload===1){\n   msg.payload=\"\"; \n   return msg;\n}else{\n   return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 220,
        "wires": [
            [
                "ad6edddc673ed4f9"
            ]
        ]
    },
    {
        "id": "b216f85f078f923c",
        "type": "ui_form",
        "z": "8fb86a9dc773c141",
        "g": "4070b953011d2414",
        "name": "",
        "label": "",
        "group": "9c2b5219b658e16a",
        "order": 5,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "StartDate",
                "value": "startDateAI01",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "EndDate",
                "value": "endDateAI01",
                "type": "date",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "startDateAI01": "",
            "endDateAI01": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 350,
        "y": 260,
        "wires": [
            [
                "b1190d38c4de2934",
                "7c2f610fb7b87e6d"
            ]
        ]
    },
    {
        "id": "a3ea29c364669998",
        "type": "ui_text",
        "z": "8fb86a9dc773c141",
        "group": "0a480f107129b57b",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "AI02",
        "label": "<b><font size=5px>AI02</b>",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 490,
        "y": 700,
        "wires": []
    },
    {
        "id": "eafd0d5e308ce88b",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nif(data[0]){\n\nvar _ai01History = [];\nfor (let i = 0; i < data.length; i++){\n\n    let _aiPacket = {\n        x      : data[i].TIMESTAMP,  \n        y      : data[i].RAWPACKETS.AI02\n    }\n\n  function convertDateTimeToMillisec(dateTimeString) {\n    // Parse the date and time string\n    const dateObject = new Date(dateTimeString);\n\n    // Get the milliseconds since epoch\n    const milliseconds = dateObject.getTime();\n\n    return milliseconds;\n  }\n\n  // Example usage\n  const dateTimeString = _aiPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n  \n  _aiPacket.x = milliseconds;\n\n    _ai01History.push(_aiPacket);\n}\n\nmsg.payload = [{\n    \"series\": [\"A\"],\n    \"data\": [\n        _ai01History\n    ],\n    \"labels\": [\"\"]\n}]\n\nreturn msg;\n}\nelse{\n  msg.payload = 1;\n  return msg;\n}\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 640,
        "wires": [
            [
                "6092b8ab53f5faff",
                "31fdc5a34c4c8d4d"
            ]
        ]
    },
    {
        "id": "d21bcd4417f3335d",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "Accessing Data From DB",
        "func": "var startdate = msg.payload.StartDate;\nvar enddate = msg.payload.EndDate;\n\nmsg.topic = `select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${startdate + 'T00:00:00'}\"  and  \"${enddate +'T23:59:59'}\" AND IOTYPE = 'AI';`\n// console.log(`AI01: select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${outputDate1 + 'T00:00:00'}\"  and  \"${outputDate2 +'T23:59:59'}\" AND IOTYPE = 'AI';`);\n// msg.topic = `select  RAWPACKETS from iotdevicedata where IOTYPE = 'E';`\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 640,
        "wires": [
            [
                "41e46164cec0ebb2"
            ]
        ]
    },
    {
        "id": "41e46164cec0ebb2",
        "type": "mysql",
        "z": "8fb86a9dc773c141",
        "mydb": "ea4292e54e9739dd",
        "name": "Database",
        "x": 980,
        "y": 640,
        "wires": [
            [
                "eafd0d5e308ce88b"
            ]
        ]
    },
    {
        "id": "7b2e8eebb0ef4b7a",
        "type": "ui_chart",
        "z": "8fb86a9dc773c141",
        "name": "",
        "group": "0a480f107129b57b",
        "order": 5,
        "width": 10,
        "height": 5,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "DD-MM-YYYY HH:MM:SS",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#df49be",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1750,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "de1a86b3be39b91a",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "function 57",
        "func": "var inputstartdate   = msg.payload.startDateAI01;\nvar inputenddate     = msg.payload.endDateAI01;\n\nfunction extractDate(dateString) {\n    const inputDate = new Date(dateString);\n\n    // Extract the date part without time\n    const outputDate = inputDate.toISOString().slice(0, 10);\n\n    return outputDate;\n}\n\n\n// Define two input date strings\nconst inputDateStr1 = inputstartdate;\n\nconst inputDateStr2 = inputenddate;\n\n\n// Extract and print the date parts\nvar outputDate1 = extractDate(inputDateStr1);\nvar outputDate2 = extractDate(inputDateStr2);\n\nfunction getNextDay(dateString) {\n    // Create a Date object from the provided string\n    var date = new Date(dateString);\n\n    // Add one day to the date\n    date.setDate(date.getDate() + 1);\n\n    // Format the date in YYYY-MM-DD format\n    var nextDay = date.toISOString().slice(0, 10);\n\n    return nextDay;\n}\n\n// Example usage:\nvar todayString = outputDate1; // Replace with your dynamic string\nvar tomorrow = getNextDay(todayString);\nvar StartDate = tomorrow;\n\nvar lastdayString = outputDate2;\nvar lastday = getNextDay(lastdayString);\nvar EndDate = lastday;\n\n// msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where TIMESTAMP between \"${startdt + ' 00:00:00'}\"  and  \"${enddt + ' 23:59:59'}\" AND  IOTYPE = 'AI';`\n// // msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'AI';`\n\n\nmsg.payload = {StartDate,EndDate}\nconsole.log(\"Special Msg\");\nconsole.log(msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 640,
        "wires": [
            [
                "d21bcd4417f3335d"
            ]
        ]
    },
    {
        "id": "6092b8ab53f5faff",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "function 59",
        "func": "if(msg.payload===1){\n   msg.payload=\"\"; \n   return msg;\n}else{\n   return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1590,
        "y": 640,
        "wires": [
            [
                "7b2e8eebb0ef4b7a"
            ]
        ]
    },
    {
        "id": "9d8102434b50e449",
        "type": "ui_form",
        "z": "8fb86a9dc773c141",
        "name": "",
        "label": "",
        "group": "0a480f107129b57b",
        "order": 4,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "StartDate",
                "value": "startDateAI01",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "EndDate",
                "value": "endDateAI01",
                "type": "date",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "startDateAI01": "",
            "endDateAI01": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 290,
        "y": 640,
        "wires": [
            [
                "de1a86b3be39b91a",
                "a3ea29c364669998"
            ]
        ]
    },
    {
        "id": "fa3c2ef2542eb0f5",
        "type": "ui_text",
        "z": "8fb86a9dc773c141",
        "group": "147de0123979bb26",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "AI03",
        "label": "<b><font size=5px>AI03</b>",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 470,
        "y": 1040,
        "wires": []
    },
    {
        "id": "cf463b487b957e5f",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nif(data[0]){\n\nvar _ai01History = [];\nfor (let i = 0; i < data.length; i++){\n\n    let _aiPacket = {\n        x      : data[i].TIMESTAMP,  \n        y      : data[i].RAWPACKETS.AI03\n    }\n\n  function convertDateTimeToMillisec(dateTimeString) {\n    // Parse the date and time string\n    const dateObject = new Date(dateTimeString);\n\n    // Get the milliseconds since epoch\n    const milliseconds = dateObject.getTime();\n\n    return milliseconds;\n  }\n\n  // Example usage\n  const dateTimeString = _aiPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n  \n  _aiPacket.x = milliseconds;\n\n    _ai01History.push(_aiPacket);\n}\n\nmsg.payload = [{\n    \"series\": [\"A\"],\n    \"data\": [\n        _ai01History\n    ],\n    \"labels\": [\"\"]\n}]\n\nreturn msg;\n}\nelse{\n  msg.payload = 1;\n  return msg;\n}\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 980,
        "wires": [
            [
                "23e52dbd829b5c44",
                "4b039d9afeac63b5"
            ]
        ]
    },
    {
        "id": "e2d11e213dbfb788",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "Accessing Data From DB",
        "func": "var startdate = msg.payload.StartDate;\nvar enddate = msg.payload.EndDate;\n\nmsg.topic = `select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${startdate + 'T00:00:00'}\"  and  \"${enddate +'T23:59:59'}\" AND IOTYPE = 'AI';`\n// console.log(`AI01: select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${outputDate1 + 'T00:00:00'}\"  and  \"${outputDate2 +'T23:59:59'}\" AND IOTYPE = 'AI';`);\n// msg.topic = `select  RAWPACKETS from iotdevicedata where IOTYPE = 'E';`\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 980,
        "wires": [
            [
                "dd207bb6b573dc11"
            ]
        ]
    },
    {
        "id": "dd207bb6b573dc11",
        "type": "mysql",
        "z": "8fb86a9dc773c141",
        "mydb": "ea4292e54e9739dd",
        "name": "Database",
        "x": 1000,
        "y": 980,
        "wires": [
            [
                "cf463b487b957e5f"
            ]
        ]
    },
    {
        "id": "b50da5bed558abc0",
        "type": "ui_chart",
        "z": "8fb86a9dc773c141",
        "name": "",
        "group": "147de0123979bb26",
        "order": 5,
        "width": 10,
        "height": 5,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "DD-MM-YYYY HH:MM:SS",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#e67f1e",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1770,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "902ba38606c42d8f",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "function 60",
        "func": "var inputstartdate   = msg.payload.startDateAI01;\nvar inputenddate     = msg.payload.endDateAI01;\n\nfunction extractDate(dateString) {\n    const inputDate = new Date(dateString);\n\n    // Extract the date part without time\n    const outputDate = inputDate.toISOString().slice(0, 10);\n\n    return outputDate;\n}\n\n\n// Define two input date strings\nconst inputDateStr1 = inputstartdate;\n\nconst inputDateStr2 = inputenddate;\n\n\n// Extract and print the date parts\nvar outputDate1 = extractDate(inputDateStr1);\nvar outputDate2 = extractDate(inputDateStr2);\n\nfunction getNextDay(dateString) {\n    // Create a Date object from the provided string\n    var date = new Date(dateString);\n\n    // Add one day to the date\n    date.setDate(date.getDate() + 1);\n\n    // Format the date in YYYY-MM-DD format\n    var nextDay = date.toISOString().slice(0, 10);\n\n    return nextDay;\n}\n\n// Example usage:\nvar todayString = outputDate1; // Replace with your dynamic string\nvar tomorrow = getNextDay(todayString);\nvar StartDate = tomorrow;\n\nvar lastdayString = outputDate2;\nvar lastday = getNextDay(lastdayString);\nvar EndDate = lastday;\n\n// msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where TIMESTAMP between \"${startdt + ' 00:00:00'}\"  and  \"${enddt + ' 23:59:59'}\" AND  IOTYPE = 'AI';`\n// // msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'AI';`\n\n\nmsg.payload = {StartDate,EndDate}\nconsole.log(\"Special Msg\");\nconsole.log(msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 980,
        "wires": [
            [
                "e2d11e213dbfb788"
            ]
        ]
    },
    {
        "id": "23e52dbd829b5c44",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "function 62",
        "func": "if(msg.payload===1){\n   msg.payload=\"\"; \n   return msg;\n}else{\n   return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 980,
        "wires": [
            [
                "b50da5bed558abc0"
            ]
        ]
    },
    {
        "id": "71c1025317017034",
        "type": "ui_form",
        "z": "8fb86a9dc773c141",
        "name": "",
        "label": "",
        "group": "147de0123979bb26",
        "order": 4,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "StartDate",
                "value": "startDateAI01",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "EndDate",
                "value": "endDateAI01",
                "type": "date",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "startDateAI01": "",
            "endDateAI01": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 310,
        "y": 980,
        "wires": [
            [
                "902ba38606c42d8f",
                "fa3c2ef2542eb0f5"
            ]
        ]
    },
    {
        "id": "df0794645dd6941f",
        "type": "ui_text",
        "z": "8fb86a9dc773c141",
        "group": "fa16104552a9bcb0",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "AI04",
        "label": "<b><font size=5px>AI04</b>",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 470,
        "y": 1400,
        "wires": []
    },
    {
        "id": "60d6f02941e43cfa",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nif(data[0]){\n\nvar _ai01History = [];\nfor (let i = 0; i < data.length; i++){\n\n    let _aiPacket = {\n        x      : data[i].TIMESTAMP,  \n        y      : data[i].RAWPACKETS.AI04\n    }\n\n  function convertDateTimeToMillisec(dateTimeString) {\n    // Parse the date and time string\n    const dateObject = new Date(dateTimeString);\n\n    // Get the milliseconds since epoch\n    const milliseconds = dateObject.getTime();\n\n    return milliseconds;\n  }\n\n  // Example usage\n  const dateTimeString = _aiPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n  \n  _aiPacket.x = milliseconds;\n\n    _ai01History.push(_aiPacket);\n}\n\nmsg.payload = [{\n    \"series\": [\"A\"],\n    \"data\": [\n        _ai01History\n    ],\n    \"labels\": [\"\"]\n}]\n\nreturn msg;\n}\nelse{\n  msg.payload = 1;\n  return msg;\n}\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 1340,
        "wires": [
            [
                "a25896d491b2ee76",
                "8dbb9958b52c921b"
            ]
        ]
    },
    {
        "id": "0d9dd183190c0b22",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "Accessing Data From DB",
        "func": "var startdate = msg.payload.StartDate;\nvar enddate = msg.payload.EndDate;\n\nmsg.topic = `select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${startdate + 'T00:00:00'}\"  and  \"${enddate +'T23:59:59'}\" AND IOTYPE = 'AI';`\n// console.log(`AI01: select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${outputDate1 + 'T00:00:00'}\"  and  \"${outputDate2 +'T23:59:59'}\" AND IOTYPE = 'AI';`);\n// msg.topic = `select  RAWPACKETS from iotdevicedata where IOTYPE = 'E';`\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1340,
        "wires": [
            [
                "57676537215a6470"
            ]
        ]
    },
    {
        "id": "57676537215a6470",
        "type": "mysql",
        "z": "8fb86a9dc773c141",
        "mydb": "ea4292e54e9739dd",
        "name": "Database",
        "x": 980,
        "y": 1340,
        "wires": [
            [
                "60d6f02941e43cfa"
            ]
        ]
    },
    {
        "id": "0cfa69f354a1972a",
        "type": "ui_chart",
        "z": "8fb86a9dc773c141",
        "name": "",
        "group": "fa16104552a9bcb0",
        "order": 5,
        "width": 10,
        "height": 5,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "DD-MM-YYYY HH:MM:SS",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#24e554",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1750,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "cd825ed69004a553",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "function 63",
        "func": "var inputstartdate   = msg.payload.startDateAI01;\nvar inputenddate     = msg.payload.endDateAI01;\n\nfunction extractDate(dateString) {\n    const inputDate = new Date(dateString);\n\n    // Extract the date part without time\n    const outputDate = inputDate.toISOString().slice(0, 10);\n\n    return outputDate;\n}\n\n\n// Define two input date strings\nconst inputDateStr1 = inputstartdate;\n\nconst inputDateStr2 = inputenddate;\n\n\n// Extract and print the date parts\nvar outputDate1 = extractDate(inputDateStr1);\nvar outputDate2 = extractDate(inputDateStr2);\n\nfunction getNextDay(dateString) {\n    // Create a Date object from the provided string\n    var date = new Date(dateString);\n\n    // Add one day to the date\n    date.setDate(date.getDate() + 1);\n\n    // Format the date in YYYY-MM-DD format\n    var nextDay = date.toISOString().slice(0, 10);\n\n    return nextDay;\n}\n\n// Example usage:\nvar todayString = outputDate1; // Replace with your dynamic string\nvar tomorrow = getNextDay(todayString);\nvar StartDate = tomorrow;\n\nvar lastdayString = outputDate2;\nvar lastday = getNextDay(lastdayString);\nvar EndDate = lastday;\n\n// msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where TIMESTAMP between \"${startdt + ' 00:00:00'}\"  and  \"${enddt + ' 23:59:59'}\" AND  IOTYPE = 'AI';`\n// // msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'AI';`\n\n\nmsg.payload = {StartDate,EndDate}\nconsole.log(\"Special Msg\");\nconsole.log(msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1340,
        "wires": [
            [
                "0d9dd183190c0b22"
            ]
        ]
    },
    {
        "id": "a25896d491b2ee76",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "function 65",
        "func": "if(msg.payload===1){\n   msg.payload=\"\"; \n   return msg;\n}else{\n   return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1590,
        "y": 1340,
        "wires": [
            [
                "0cfa69f354a1972a"
            ]
        ]
    },
    {
        "id": "36a329cc763572b3",
        "type": "ui_form",
        "z": "8fb86a9dc773c141",
        "name": "",
        "label": "",
        "group": "fa16104552a9bcb0",
        "order": 4,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "StartDate",
                "value": "startDateAI01",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "EndDate",
                "value": "endDateAI01",
                "type": "date",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "startDateAI01": "",
            "endDateAI01": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 290,
        "y": 1320,
        "wires": [
            [
                "cd825ed69004a553",
                "df0794645dd6941f"
            ]
        ]
    },
    {
        "id": "07be68b4c1b856b7",
        "type": "ui_text",
        "z": "8fb86a9dc773c141",
        "group": "536db02ecc48b905",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "AI05",
        "label": "<b><font size=5px>AI05</b>",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 450,
        "y": 1760,
        "wires": []
    },
    {
        "id": "06ab5b54a9759c47",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nif(data[0]){\n\nvar _ai01History = [];\nfor (let i = 0; i < data.length; i++){\n\n    let _aiPacket = {\n        x      : data[i].TIMESTAMP,  \n        y      : data[i].RAWPACKETS.AI05\n    }\n\n  function convertDateTimeToMillisec(dateTimeString) {\n    // Parse the date and time string\n    const dateObject = new Date(dateTimeString);\n\n    // Get the milliseconds since epoch\n    const milliseconds = dateObject.getTime();\n\n    return milliseconds;\n  }\n\n  // Example usage\n  const dateTimeString = _aiPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n  \n  _aiPacket.x = milliseconds;\n\n    _ai01History.push(_aiPacket);\n}\n\nmsg.payload = [{\n    \"series\": [\"A\"],\n    \"data\": [\n        _ai01History\n    ],\n    \"labels\": [\"\"]\n}]\n\nreturn msg;\n}\nelse{\n  msg.payload = 1;\n  return msg;\n}\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 1700,
        "wires": [
            [
                "6f9bb04d4d4962d2",
                "eef1cbfb52f984ac"
            ]
        ]
    },
    {
        "id": "dc3b6495ac27574b",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "Accessing Data From DB",
        "func": "var startdate = msg.payload.StartDate;\nvar enddate = msg.payload.EndDate;\n\nmsg.topic = `select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${startdate + 'T00:00:00'}\"  and  \"${enddate +'T23:59:59'}\" AND IOTYPE = 'AI';`\n// console.log(`AI01: select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${outputDate1 + 'T00:00:00'}\"  and  \"${outputDate2 +'T23:59:59'}\" AND IOTYPE = 'AI';`);\n// msg.topic = `select  RAWPACKETS from iotdevicedata where IOTYPE = 'E';`\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1700,
        "wires": [
            [
                "c50f928c3b7bef66"
            ]
        ]
    },
    {
        "id": "c50f928c3b7bef66",
        "type": "mysql",
        "z": "8fb86a9dc773c141",
        "mydb": "ea4292e54e9739dd",
        "name": "Database",
        "x": 960,
        "y": 1700,
        "wires": [
            [
                "06ab5b54a9759c47"
            ]
        ]
    },
    {
        "id": "e3a126613a1e08c8",
        "type": "ui_chart",
        "z": "8fb86a9dc773c141",
        "name": "",
        "group": "536db02ecc48b905",
        "order": 5,
        "width": 10,
        "height": 5,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "DD-MM-YYYY HH:MM:SS",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#7e3de1",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1730,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "7039a14c33b6de88",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "function 66",
        "func": "var inputstartdate   = msg.payload.startDateAI01;\nvar inputenddate     = msg.payload.endDateAI01;\n\nfunction extractDate(dateString) {\n    const inputDate = new Date(dateString);\n\n    // Extract the date part without time\n    const outputDate = inputDate.toISOString().slice(0, 10);\n\n    return outputDate;\n}\n\n\n// Define two input date strings\nconst inputDateStr1 = inputstartdate;\n\nconst inputDateStr2 = inputenddate;\n\n\n// Extract and print the date parts\nvar outputDate1 = extractDate(inputDateStr1);\nvar outputDate2 = extractDate(inputDateStr2);\n\nfunction getNextDay(dateString) {\n    // Create a Date object from the provided string\n    var date = new Date(dateString);\n\n    // Add one day to the date\n    date.setDate(date.getDate() + 1);\n\n    // Format the date in YYYY-MM-DD format\n    var nextDay = date.toISOString().slice(0, 10);\n\n    return nextDay;\n}\n\n// Example usage:\nvar todayString = outputDate1; // Replace with your dynamic string\nvar tomorrow = getNextDay(todayString);\nvar StartDate = tomorrow;\n\nvar lastdayString = outputDate2;\nvar lastday = getNextDay(lastdayString);\nvar EndDate = lastday;\n\n// msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where TIMESTAMP between \"${startdt + ' 00:00:00'}\"  and  \"${enddt + ' 23:59:59'}\" AND  IOTYPE = 'AI';`\n// // msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'AI';`\n\n\nmsg.payload = {StartDate,EndDate}\nconsole.log(\"Special Msg\");\nconsole.log(msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 1700,
        "wires": [
            [
                "dc3b6495ac27574b"
            ]
        ]
    },
    {
        "id": "6f9bb04d4d4962d2",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "function 68",
        "func": "if(msg.payload===1){\n   msg.payload=\"\"; \n   return msg;\n}else{\n   return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 1700,
        "wires": [
            [
                "e3a126613a1e08c8"
            ]
        ]
    },
    {
        "id": "6a34eacdba44328d",
        "type": "ui_form",
        "z": "8fb86a9dc773c141",
        "name": "",
        "label": "",
        "group": "536db02ecc48b905",
        "order": 4,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "StartDate",
                "value": "startDateAI01",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "EndDate",
                "value": "endDateAI01",
                "type": "date",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "startDateAI01": "",
            "endDateAI01": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 270,
        "y": 1700,
        "wires": [
            [
                "7039a14c33b6de88",
                "07be68b4c1b856b7"
            ]
        ]
    },
    {
        "id": "a7a3bf13b96a74eb",
        "type": "ui_text",
        "z": "8fb86a9dc773c141",
        "group": "d4ef4d2facd763e9",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "AI06",
        "label": "<b><font size=5px>AI06</b>",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 430,
        "y": 2120,
        "wires": []
    },
    {
        "id": "13b32f1dc5341fc4",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nif(data[0]){\n\nvar _ai01History = [];\nfor (let i = 0; i < data.length; i++){\n\n    let _aiPacket = {\n        x      : data[i].TIMESTAMP,  \n        y      : data[i].RAWPACKETS.AI06\n    }\n\n  function convertDateTimeToMillisec(dateTimeString) {\n    // Parse the date and time string\n    const dateObject = new Date(dateTimeString);\n\n    // Get the milliseconds since epoch\n    const milliseconds = dateObject.getTime();\n\n    return milliseconds;\n  }\n\n  // Example usage\n  const dateTimeString = _aiPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n  \n  _aiPacket.x = milliseconds;\n\n    _ai01History.push(_aiPacket);\n}\n\nmsg.payload = [{\n    \"series\": [\"A\"],\n    \"data\": [\n        _ai01History\n    ],\n    \"labels\": [\"\"]\n}]\n\nreturn msg;\n}\nelse{\n  msg.payload = 1;\n  return msg;\n}\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 2060,
        "wires": [
            [
                "91154f9f344fce05",
                "83308897bcd132be"
            ]
        ]
    },
    {
        "id": "bb3c7553be18461e",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "Accessing Data From DB",
        "func": "var startdate = msg.payload.StartDate;\nvar enddate = msg.payload.EndDate;\n\nmsg.topic = `select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${startdate + 'T00:00:00'}\"  and  \"${enddate +'T23:59:59'}\" AND IOTYPE = 'AI';`\n// console.log(`AI01: select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${outputDate1 + 'T00:00:00'}\"  and  \"${outputDate2 +'T23:59:59'}\" AND IOTYPE = 'AI';`);\n// msg.topic = `select  RAWPACKETS from iotdevicedata where IOTYPE = 'E';`\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 2060,
        "wires": [
            [
                "224a124cd9fab0ab"
            ]
        ]
    },
    {
        "id": "224a124cd9fab0ab",
        "type": "mysql",
        "z": "8fb86a9dc773c141",
        "mydb": "ea4292e54e9739dd",
        "name": "Database",
        "x": 940,
        "y": 2060,
        "wires": [
            [
                "13b32f1dc5341fc4"
            ]
        ]
    },
    {
        "id": "c4c6d405146e6214",
        "type": "ui_chart",
        "z": "8fb86a9dc773c141",
        "name": "",
        "group": "d4ef4d2facd763e9",
        "order": 5,
        "width": 10,
        "height": 5,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "DD-MM-YYYY HH:MM:SS",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#56e3f5",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1710,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "2a6cfa728672cb74",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "function 69",
        "func": "var inputstartdate   = msg.payload.startDateAI01;\nvar inputenddate     = msg.payload.endDateAI01;\n\nfunction extractDate(dateString) {\n    const inputDate = new Date(dateString);\n\n    // Extract the date part without time\n    const outputDate = inputDate.toISOString().slice(0, 10);\n\n    return outputDate;\n}\n\n\n// Define two input date strings\nconst inputDateStr1 = inputstartdate;\n\nconst inputDateStr2 = inputenddate;\n\n\n// Extract and print the date parts\nvar outputDate1 = extractDate(inputDateStr1);\nvar outputDate2 = extractDate(inputDateStr2);\n\nfunction getNextDay(dateString) {\n    // Create a Date object from the provided string\n    var date = new Date(dateString);\n\n    // Add one day to the date\n    date.setDate(date.getDate() + 1);\n\n    // Format the date in YYYY-MM-DD format\n    var nextDay = date.toISOString().slice(0, 10);\n\n    return nextDay;\n}\n\n// Example usage:\nvar todayString = outputDate1; // Replace with your dynamic string\nvar tomorrow = getNextDay(todayString);\nvar StartDate = tomorrow;\n\nvar lastdayString = outputDate2;\nvar lastday = getNextDay(lastdayString);\nvar EndDate = lastday;\n\n// msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where TIMESTAMP between \"${startdt + ' 00:00:00'}\"  and  \"${enddt + ' 23:59:59'}\" AND  IOTYPE = 'AI';`\n// // msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'AI';`\n\n\nmsg.payload = {StartDate,EndDate}\nconsole.log(\"Special Msg\");\nconsole.log(msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 2060,
        "wires": [
            [
                "bb3c7553be18461e"
            ]
        ]
    },
    {
        "id": "91154f9f344fce05",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "function 71",
        "func": "if(msg.payload===1){\n   msg.payload=\"\"; \n   return msg;\n}else{\n   return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 2060,
        "wires": [
            [
                "c4c6d405146e6214"
            ]
        ]
    },
    {
        "id": "0c756073479a1d75",
        "type": "ui_form",
        "z": "8fb86a9dc773c141",
        "name": "",
        "label": "",
        "group": "d4ef4d2facd763e9",
        "order": 4,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "StartDate",
                "value": "startDateAI01",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "EndDate",
                "value": "endDateAI01",
                "type": "date",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "startDateAI01": "",
            "endDateAI01": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 270,
        "y": 2060,
        "wires": [
            [
                "2a6cfa728672cb74",
                "a7a3bf13b96a74eb"
            ]
        ]
    },
    {
        "id": "3099824bc27cfdfc",
        "type": "ui_text",
        "z": "8fb86a9dc773c141",
        "group": "1dc58fe23f5e5410",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "AI07",
        "label": "<b><font size=5px>AI07</b>",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 430,
        "y": 2480,
        "wires": []
    },
    {
        "id": "4d864fd66b828bf9",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nif(data[0]){\n\nvar _ai01History = [];\nfor (let i = 0; i < data.length; i++){\n\n    let _aiPacket = {\n        x      : data[i].TIMESTAMP,  \n        y      : data[i].RAWPACKETS.AI07\n    }\n\n  function convertDateTimeToMillisec(dateTimeString) {\n    // Parse the date and time string\n    const dateObject = new Date(dateTimeString);\n\n    // Get the milliseconds since epoch\n    const milliseconds = dateObject.getTime();\n\n    return milliseconds;\n  }\n\n  // Example usage\n  const dateTimeString = _aiPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n  \n  _aiPacket.x = milliseconds;\n\n    _ai01History.push(_aiPacket);\n}\n\nmsg.payload = [{\n    \"series\": [\"A\"],\n    \"data\": [\n        _ai01History\n    ],\n    \"labels\": [\"\"]\n}]\n\nreturn msg;\n}\nelse{\n  msg.payload = 1;\n  return msg;\n}\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 2420,
        "wires": [
            [
                "177702bed8daa209",
                "b59d29122442ea45"
            ]
        ]
    },
    {
        "id": "ae90566688dc0d8d",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "Accessing Data From DB",
        "func": "var startdate = msg.payload.StartDate;\nvar enddate = msg.payload.EndDate;\n\nmsg.topic = `select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${startdate + 'T00:00:00'}\"  and  \"${enddate +'T23:59:59'}\" AND IOTYPE = 'AI';`\n// console.log(`AI01: select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${outputDate1 + 'T00:00:00'}\"  and  \"${outputDate2 +'T23:59:59'}\" AND IOTYPE = 'AI';`);\n// msg.topic = `select  RAWPACKETS from iotdevicedata where IOTYPE = 'E';`\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 2420,
        "wires": [
            [
                "d7c3d9b323acf667"
            ]
        ]
    },
    {
        "id": "d7c3d9b323acf667",
        "type": "mysql",
        "z": "8fb86a9dc773c141",
        "mydb": "ea4292e54e9739dd",
        "name": "Database",
        "x": 920,
        "y": 2420,
        "wires": [
            [
                "4d864fd66b828bf9"
            ]
        ]
    },
    {
        "id": "5530da63789c52b3",
        "type": "ui_chart",
        "z": "8fb86a9dc773c141",
        "name": "",
        "group": "1dc58fe23f5e5410",
        "order": 5,
        "width": 10,
        "height": 5,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "DD-MM-YYYY HH:MM:SS",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#e123d1",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1690,
        "y": 2420,
        "wires": [
            []
        ]
    },
    {
        "id": "79017d19bb154614",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "function 72",
        "func": "var inputstartdate   = msg.payload.startDateAI01;\nvar inputenddate     = msg.payload.endDateAI01;\n\nfunction extractDate(dateString) {\n    const inputDate = new Date(dateString);\n\n    // Extract the date part without time\n    const outputDate = inputDate.toISOString().slice(0, 10);\n\n    return outputDate;\n}\n\n\n// Define two input date strings\nconst inputDateStr1 = inputstartdate;\n\nconst inputDateStr2 = inputenddate;\n\n\n// Extract and print the date parts\nvar outputDate1 = extractDate(inputDateStr1);\nvar outputDate2 = extractDate(inputDateStr2);\n\nfunction getNextDay(dateString) {\n    // Create a Date object from the provided string\n    var date = new Date(dateString);\n\n    // Add one day to the date\n    date.setDate(date.getDate() + 1);\n\n    // Format the date in YYYY-MM-DD format\n    var nextDay = date.toISOString().slice(0, 10);\n\n    return nextDay;\n}\n\n// Example usage:\nvar todayString = outputDate1; // Replace with your dynamic string\nvar tomorrow = getNextDay(todayString);\nvar StartDate = tomorrow;\n\nvar lastdayString = outputDate2;\nvar lastday = getNextDay(lastdayString);\nvar EndDate = lastday;\n\n// msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where TIMESTAMP between \"${startdt + ' 00:00:00'}\"  and  \"${enddt + ' 23:59:59'}\" AND  IOTYPE = 'AI';`\n// // msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'AI';`\n\n\nmsg.payload = {StartDate,EndDate}\nconsole.log(\"Special Msg\");\nconsole.log(msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 2420,
        "wires": [
            [
                "ae90566688dc0d8d"
            ]
        ]
    },
    {
        "id": "177702bed8daa209",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "function 74",
        "func": "if(msg.payload===1){\n   msg.payload=\"\"; \n   return msg;\n}else{\n   return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 2420,
        "wires": [
            [
                "5530da63789c52b3"
            ]
        ]
    },
    {
        "id": "77581548be81a2ab",
        "type": "ui_form",
        "z": "8fb86a9dc773c141",
        "name": "",
        "label": "",
        "group": "1dc58fe23f5e5410",
        "order": 4,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "StartDate",
                "value": "startDateAI01",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "EndDate",
                "value": "endDateAI01",
                "type": "date",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "startDateAI01": "",
            "endDateAI01": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 250,
        "y": 2420,
        "wires": [
            [
                "79017d19bb154614",
                "3099824bc27cfdfc"
            ]
        ]
    },
    {
        "id": "2327f448d111e20d",
        "type": "ui_text",
        "z": "8fb86a9dc773c141",
        "group": "858e090b4052858d",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "AI01",
        "label": "<b><font size=5px>AI08</b>",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 450,
        "y": 2860,
        "wires": []
    },
    {
        "id": "8a3eb19d24fd2c8d",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nif(data[0]){\n\nvar _ai01History = [];\nfor (let i = 0; i < data.length; i++){\n\n    let _aiPacket = {\n        x      : data[i].TIMESTAMP,  \n        y      : data[i].RAWPACKETS.AI08\n    }\n\n  function convertDateTimeToMillisec(dateTimeString) {\n    // Parse the date and time string\n    const dateObject = new Date(dateTimeString);\n\n    // Get the milliseconds since epoch\n    const milliseconds = dateObject.getTime();\n\n    return milliseconds;\n  }\n\n  // Example usage\n  const dateTimeString = _aiPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n  \n  _aiPacket.x = milliseconds;\n\n    _ai01History.push(_aiPacket);\n}\n\nmsg.payload = [{\n    \"series\": [\"A\"],\n    \"data\": [\n        _ai01History\n    ],\n    \"labels\": [\"\"]\n}]\n\nreturn msg;\n}\nelse{\n  msg.payload = 1;\n  return msg;\n}\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 2800,
        "wires": [
            [
                "5cae9620ad212a23",
                "05de403a1e867a53"
            ]
        ]
    },
    {
        "id": "5b2c8a5e978eed03",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "Accessing Data From DB",
        "func": "var startdate = msg.payload.StartDate;\nvar enddate = msg.payload.EndDate;\n\nmsg.topic = `select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${startdate + 'T00:00:00'}\"  and  \"${enddate +'T23:59:59'}\" AND IOTYPE = 'AI';`\n// console.log(`AI01: select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${outputDate1 + 'T00:00:00'}\"  and  \"${outputDate2 +'T23:59:59'}\" AND IOTYPE = 'AI';`);\n// msg.topic = `select  RAWPACKETS from iotdevicedata where IOTYPE = 'E';`\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 2800,
        "wires": [
            [
                "fdc105a7d2ce746c"
            ]
        ]
    },
    {
        "id": "fdc105a7d2ce746c",
        "type": "mysql",
        "z": "8fb86a9dc773c141",
        "mydb": "ea4292e54e9739dd",
        "name": "Database",
        "x": 940,
        "y": 2800,
        "wires": [
            [
                "8a3eb19d24fd2c8d"
            ]
        ]
    },
    {
        "id": "950abd1b930179bf",
        "type": "ui_chart",
        "z": "8fb86a9dc773c141",
        "name": "",
        "group": "858e090b4052858d",
        "order": 5,
        "width": 10,
        "height": 5,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "DD-MM-YYYY HH:MM:SS",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#b8e123",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1710,
        "y": 2800,
        "wires": [
            []
        ]
    },
    {
        "id": "a0038305f9e35a18",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "function 75",
        "func": "var inputstartdate   = msg.payload.startDateAI01;\nvar inputenddate     = msg.payload.endDateAI01;\n\nfunction extractDate(dateString) {\n    const inputDate = new Date(dateString);\n\n    // Extract the date part without time\n    const outputDate = inputDate.toISOString().slice(0, 10);\n\n    return outputDate;\n}\n\n\n// Define two input date strings\nconst inputDateStr1 = inputstartdate;\n\nconst inputDateStr2 = inputenddate;\n\n\n// Extract and print the date parts\nvar outputDate1 = extractDate(inputDateStr1);\nvar outputDate2 = extractDate(inputDateStr2);\n\nfunction getNextDay(dateString) {\n    // Create a Date object from the provided string\n    var date = new Date(dateString);\n\n    // Add one day to the date\n    date.setDate(date.getDate() + 1);\n\n    // Format the date in YYYY-MM-DD format\n    var nextDay = date.toISOString().slice(0, 10);\n\n    return nextDay;\n}\n\n// Example usage:\nvar todayString = outputDate1; // Replace with your dynamic string\nvar tomorrow = getNextDay(todayString);\nvar StartDate = tomorrow;\n\nvar lastdayString = outputDate2;\nvar lastday = getNextDay(lastdayString);\nvar EndDate = lastday;\n\n// msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where TIMESTAMP between \"${startdt + ' 00:00:00'}\"  and  \"${enddt + ' 23:59:59'}\" AND  IOTYPE = 'AI';`\n// // msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'AI';`\n\n\nmsg.payload = {StartDate,EndDate}\nconsole.log(\"Special Msg\");\nconsole.log(msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 2800,
        "wires": [
            [
                "5b2c8a5e978eed03"
            ]
        ]
    },
    {
        "id": "5cae9620ad212a23",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "function 77",
        "func": "if(msg.payload===1){\n   msg.payload=\"\"; \n   return msg;\n}else{\n   return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 2800,
        "wires": [
            [
                "950abd1b930179bf"
            ]
        ]
    },
    {
        "id": "0e96c98381b8fbd7",
        "type": "ui_form",
        "z": "8fb86a9dc773c141",
        "name": "",
        "label": "",
        "group": "858e090b4052858d",
        "order": 4,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "StartDate",
                "value": "startDateAI01",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "EndDate",
                "value": "endDateAI01",
                "type": "date",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "startDateAI01": "",
            "endDateAI01": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 270,
        "y": 2800,
        "wires": [
            [
                "a0038305f9e35a18",
                "2327f448d111e20d"
            ]
        ]
    },
    {
        "id": "74628dd0d8e07a79",
        "type": "ui_button",
        "z": "8fb86a9dc773c141",
        "name": "HomeButton",
        "group": "4af9dbf049f5fd03",
        "order": 4,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-home fa-3x",
        "payload": "MainDashboard",
        "payloadType": "flow",
        "topic": "topic",
        "topicType": "msg",
        "x": 970,
        "y": 100,
        "wires": [
            [
                "83c918d320ab3b29"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "83c918d320ab3b29",
        "type": "change",
        "z": "8fb86a9dc773c141",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Analog Inputs\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 100,
        "wires": [
            [
                "5d68d016c5d0ee2f"
            ]
        ]
    },
    {
        "id": "aa6336c2270922fd",
        "type": "ui_button",
        "z": "8fb86a9dc773c141",
        "name": "Energy Reports Button",
        "group": "4af9dbf049f5fd03",
        "order": 3,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-solid fa-table fa-3x",
        "payload": "MainDashboard",
        "payloadType": "flow",
        "topic": "topic",
        "topicType": "msg",
        "x": 940,
        "y": 160,
        "wires": [
            [
                "85a156c02dbe9889"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "85a156c02dbe9889",
        "type": "change",
        "z": "8fb86a9dc773c141",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Analog Input Reports\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 160,
        "wires": [
            [
                "5d68d016c5d0ee2f"
            ]
        ]
    },
    {
        "id": "5d68d016c5d0ee2f",
        "type": "ui_ui_control",
        "z": "8fb86a9dc773c141",
        "name": "",
        "events": "all",
        "x": 1540,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "7130513b660fc58e",
        "type": "ui_text",
        "z": "8fb86a9dc773c141",
        "group": "4af9dbf049f5fd03",
        "order": 1,
        "width": 13,
        "height": 1,
        "name": "Analog Input Chart Report ",
        "label": "<b><font size = 6>Analog Input Chart Report </b>",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1110,
        "y": 40,
        "wires": []
    },
    {
        "id": "47eeaeba5f2326e1",
        "type": "inject",
        "z": "8fb86a9dc773c141",
        "g": "4070b953011d2414",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 220,
        "wires": [
            [
                "29ecbd5172dd1522"
            ]
        ]
    },
    {
        "id": "29ecbd5172dd1522",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "g": "4070b953011d2414",
        "name": "AccessingDataFromDB",
        "func": "\n\n    msg.topic = \"select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'AI' order by TIMESTAMP DESC LIMIT 20;\"\n    return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 220,
        "wires": [
            [
                "7add3a842c24fe5e"
            ]
        ]
    },
    {
        "id": "2199dae4d17df5e3",
        "type": "inject",
        "z": "8fb86a9dc773c141",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 560,
        "wires": [
            [
                "85bfdef66c287a92"
            ]
        ]
    },
    {
        "id": "85bfdef66c287a92",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "AccessingDataFromDB",
        "func": "\n\n    msg.topic = \"select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'AI' order by TIMESTAMP DESC LIMIT 20;\"\n    return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 560,
        "wires": [
            [
                "41e46164cec0ebb2"
            ]
        ]
    },
    {
        "id": "9bcf034947756d1d",
        "type": "inject",
        "z": "8fb86a9dc773c141",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 900,
        "wires": [
            [
                "4d2541fb7b534607"
            ]
        ]
    },
    {
        "id": "4d2541fb7b534607",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "AccessingDataFromDB",
        "func": "\n\n    msg.topic = \"select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'AI' order by TIMESTAMP DESC LIMIT 20;\"\n    return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 900,
        "wires": [
            [
                "dd207bb6b573dc11"
            ]
        ]
    },
    {
        "id": "3b187e0d33075c54",
        "type": "inject",
        "z": "8fb86a9dc773c141",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 350,
        "y": 1240,
        "wires": [
            [
                "48159ebd0f0e3d29"
            ]
        ]
    },
    {
        "id": "48159ebd0f0e3d29",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "AccessingDataFromDB",
        "func": "\n\n    msg.topic = \"select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'AI' order by TIMESTAMP DESC LIMIT 20;\"\n    return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1240,
        "wires": [
            [
                "57676537215a6470"
            ]
        ]
    },
    {
        "id": "65cab4871f2c0678",
        "type": "inject",
        "z": "8fb86a9dc773c141",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 1640,
        "wires": [
            [
                "4de1fb4fe8f1a7ca"
            ]
        ]
    },
    {
        "id": "4de1fb4fe8f1a7ca",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "AccessingDataFromDB",
        "func": "\n\n    msg.topic = \"select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'AI' order by TIMESTAMP DESC LIMIT 20;\"\n    return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1640,
        "wires": [
            [
                "c50f928c3b7bef66"
            ]
        ]
    },
    {
        "id": "26b2f2da06a29c0c",
        "type": "inject",
        "z": "8fb86a9dc773c141",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 1980,
        "wires": [
            [
                "fbac74fa07cc0f22"
            ]
        ]
    },
    {
        "id": "fbac74fa07cc0f22",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "AccessingDataFromDB",
        "func": "\n\n    msg.topic = \"select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'AI' order by TIMESTAMP DESC LIMIT 20;\"\n    return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1980,
        "wires": [
            [
                "224a124cd9fab0ab"
            ]
        ]
    },
    {
        "id": "01ccff8d49c95b58",
        "type": "inject",
        "z": "8fb86a9dc773c141",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 2320,
        "wires": [
            [
                "ced6605f9f2bed43"
            ]
        ]
    },
    {
        "id": "ced6605f9f2bed43",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "AccessingDataFromDB",
        "func": "\n\n    msg.topic = \"select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'AI' order by TIMESTAMP DESC LIMIT 20;\"\n    return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 2320,
        "wires": [
            [
                "d7c3d9b323acf667"
            ]
        ]
    },
    {
        "id": "460c4ba80b48eb64",
        "type": "inject",
        "z": "8fb86a9dc773c141",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 270,
        "y": 2700,
        "wires": [
            [
                "89f17ba699fa94a8"
            ]
        ]
    },
    {
        "id": "89f17ba699fa94a8",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "AccessingDataFromDB",
        "func": "\n\n    msg.topic = \"select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'AI' order by TIMESTAMP DESC LIMIT 20;\"\n    return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 2700,
        "wires": [
            [
                "fdc105a7d2ce746c"
            ]
        ]
    },
    {
        "id": "85bc1b8820d3b4b6",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "function 95",
        "func": "msg.payload = [];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 440,
        "wires": [
            [
                "ad6edddc673ed4f9"
            ]
        ]
    },
    {
        "id": "31fdc5a34c4c8d4d",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "function 96",
        "func": "if (msg.payload == 1){\n    msg.payload = \"No Record Found\";\n    msg.topic = '';\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 760,
        "wires": [
            [
                "c21d2d7362fa8270"
            ]
        ]
    },
    {
        "id": "c21d2d7362fa8270",
        "type": "ui_toast",
        "z": "8fb86a9dc773c141",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1790,
        "y": 760,
        "wires": [
            [
                "af7cb7969c897295"
            ]
        ]
    },
    {
        "id": "af7cb7969c897295",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "function 97",
        "func": "msg.payload = [];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2010,
        "y": 760,
        "wires": [
            [
                "7b2e8eebb0ef4b7a"
            ]
        ]
    },
    {
        "id": "4b039d9afeac63b5",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "function 98",
        "func": "if (msg.payload == 1){\n    msg.payload = \"No Record Found\";\n    msg.topic = '';\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1080,
        "wires": [
            [
                "fb502a4a3cfb9d57"
            ]
        ]
    },
    {
        "id": "fb502a4a3cfb9d57",
        "type": "ui_toast",
        "z": "8fb86a9dc773c141",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1770,
        "y": 1080,
        "wires": [
            [
                "1e9180b5c41908c0"
            ]
        ]
    },
    {
        "id": "1e9180b5c41908c0",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "function 99",
        "func": "msg.payload = [];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1990,
        "y": 1080,
        "wires": [
            [
                "b50da5bed558abc0"
            ]
        ]
    },
    {
        "id": "8dbb9958b52c921b",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "function 100",
        "func": "if (msg.payload == 1){\n    msg.payload = \"No Record Found\";\n    msg.topic = '';\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 1440,
        "wires": [
            [
                "4bc7d4ed672f2a16"
            ]
        ]
    },
    {
        "id": "4bc7d4ed672f2a16",
        "type": "ui_toast",
        "z": "8fb86a9dc773c141",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1710,
        "y": 1440,
        "wires": [
            [
                "63ddd2ea466f334f"
            ]
        ]
    },
    {
        "id": "63ddd2ea466f334f",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "function 101",
        "func": "msg.payload = [];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 1440,
        "wires": [
            [
                "0cfa69f354a1972a"
            ]
        ]
    },
    {
        "id": "eef1cbfb52f984ac",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "function 102",
        "func": "if (msg.payload == 1){\n    msg.payload = \"No Record Found\";\n    msg.topic = '';\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 1800,
        "wires": [
            [
                "e11c3e9e1c2a9b33"
            ]
        ]
    },
    {
        "id": "e11c3e9e1c2a9b33",
        "type": "ui_toast",
        "z": "8fb86a9dc773c141",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1670,
        "y": 1800,
        "wires": [
            [
                "240de43ea8a85911"
            ]
        ]
    },
    {
        "id": "240de43ea8a85911",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "function 103",
        "func": "msg.payload = [];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 1800,
        "wires": [
            [
                "e3a126613a1e08c8"
            ]
        ]
    },
    {
        "id": "83308897bcd132be",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "function 104",
        "func": "if (msg.payload == 1){\n    msg.payload = \"No Record Found\";\n    msg.topic = '';\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 2160,
        "wires": [
            [
                "2d1c3e882fe977cc"
            ]
        ]
    },
    {
        "id": "2d1c3e882fe977cc",
        "type": "ui_toast",
        "z": "8fb86a9dc773c141",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1670,
        "y": 2160,
        "wires": [
            [
                "bc4a1737ec10853e"
            ]
        ]
    },
    {
        "id": "bc4a1737ec10853e",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "function 105",
        "func": "msg.payload = [];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 2160,
        "wires": [
            [
                "c4c6d405146e6214"
            ]
        ]
    },
    {
        "id": "b59d29122442ea45",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "function 106",
        "func": "if (msg.payload == 1){\n    msg.payload = \"No Record Found\";\n    msg.topic = '';\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 2540,
        "wires": [
            [
                "23f8bf6d336d536d"
            ]
        ]
    },
    {
        "id": "23f8bf6d336d536d",
        "type": "ui_toast",
        "z": "8fb86a9dc773c141",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1630,
        "y": 2540,
        "wires": [
            [
                "d6b923619b1c97c8"
            ]
        ]
    },
    {
        "id": "d6b923619b1c97c8",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "function 107",
        "func": "msg.payload = [];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 2540,
        "wires": [
            [
                "5530da63789c52b3"
            ]
        ]
    },
    {
        "id": "05de403a1e867a53",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "function 108",
        "func": "if (msg.payload == 1){\n    msg.payload = \"No Record\";\n    msg.topic = '';\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 2900,
        "wires": [
            [
                "418e9a2de7685764"
            ]
        ]
    },
    {
        "id": "418e9a2de7685764",
        "type": "ui_toast",
        "z": "8fb86a9dc773c141",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1630,
        "y": 2900,
        "wires": [
            [
                "1b5a7bf112a01b4e"
            ]
        ]
    },
    {
        "id": "1b5a7bf112a01b4e",
        "type": "function",
        "z": "8fb86a9dc773c141",
        "name": "function 109",
        "func": "msg.payload = [];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 2900,
        "wires": [
            [
                "950abd1b930179bf"
            ]
        ]
    },
    {
        "id": "487accb8da764b1f",
        "type": "ui_text",
        "z": "8fb86a9dc773c141",
        "group": "4af9dbf049f5fd03",
        "order": 28,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 610,
        "y": 3020,
        "wires": []
    }
]